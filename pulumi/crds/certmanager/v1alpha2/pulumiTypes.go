// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`.
//  The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).
type CertificateType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Certificate resource.
	Spec *CertificateSpec `pulumi:"spec"`
	// Status of the Certificate. This is set and managed automatically.
	Status *CertificateStatus `pulumi:"status"`
}

// CertificateTypeInput is an input type that accepts CertificateTypeArgs and CertificateTypeOutput values.
// You can construct a concrete instance of `CertificateTypeInput` via:
//
//          CertificateTypeArgs{...}
type CertificateTypeInput interface {
	pulumi.Input

	ToCertificateTypeOutput() CertificateTypeOutput
	ToCertificateTypeOutputWithContext(context.Context) CertificateTypeOutput
}

// A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`.
//  The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).
type CertificateTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the Certificate resource.
	Spec CertificateSpecPtrInput `pulumi:"spec"`
	// Status of the Certificate. This is set and managed automatically.
	Status CertificateStatusPtrInput `pulumi:"status"`
}

func (CertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (i CertificateTypeArgs) ToCertificateTypeOutput() CertificateTypeOutput {
	return i.ToCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateTypeArgs) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTypeOutput)
}

// A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`.
//  The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).
type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o CertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CertificateTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CertificateType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the Certificate resource.
func (o CertificateTypeOutput) Spec() CertificateSpecPtrOutput {
	return o.ApplyT(func(v CertificateType) *CertificateSpec { return v.Spec }).(CertificateSpecPtrOutput)
}

// Status of the Certificate. This is set and managed automatically.
func (o CertificateTypeOutput) Status() CertificateStatusPtrOutput {
	return o.ApplyT(func(v CertificateType) *CertificateStatus { return v.Status }).(CertificateStatusPtrOutput)
}

type CertificateMetadata struct {
}

// CertificateMetadataInput is an input type that accepts CertificateMetadataArgs and CertificateMetadataOutput values.
// You can construct a concrete instance of `CertificateMetadataInput` via:
//
//          CertificateMetadataArgs{...}
type CertificateMetadataInput interface {
	pulumi.Input

	ToCertificateMetadataOutput() CertificateMetadataOutput
	ToCertificateMetadataOutputWithContext(context.Context) CertificateMetadataOutput
}

type CertificateMetadataArgs struct {
}

func (CertificateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateMetadata)(nil)).Elem()
}

func (i CertificateMetadataArgs) ToCertificateMetadataOutput() CertificateMetadataOutput {
	return i.ToCertificateMetadataOutputWithContext(context.Background())
}

func (i CertificateMetadataArgs) ToCertificateMetadataOutputWithContext(ctx context.Context) CertificateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateMetadataOutput)
}

type CertificateMetadataOutput struct{ *pulumi.OutputState }

func (CertificateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateMetadata)(nil)).Elem()
}

func (o CertificateMetadataOutput) ToCertificateMetadataOutput() CertificateMetadataOutput {
	return o
}

func (o CertificateMetadataOutput) ToCertificateMetadataOutputWithContext(ctx context.Context) CertificateMetadataOutput {
	return o
}

// A CertificateRequest is used to request a signed certificate from one of the configured issuers.
//  All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field.
//  A CertificateRequest is a 'one-shot' resource, meaning it represents a single point in time request for a certificate and cannot be re-used.
type CertificateRequestType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the CertificateRequest resource.
	Spec *CertificateRequestSpec `pulumi:"spec"`
	// Status of the CertificateRequest. This is set and managed automatically.
	Status *CertificateRequestStatus `pulumi:"status"`
}

// CertificateRequestTypeInput is an input type that accepts CertificateRequestTypeArgs and CertificateRequestTypeOutput values.
// You can construct a concrete instance of `CertificateRequestTypeInput` via:
//
//          CertificateRequestTypeArgs{...}
type CertificateRequestTypeInput interface {
	pulumi.Input

	ToCertificateRequestTypeOutput() CertificateRequestTypeOutput
	ToCertificateRequestTypeOutputWithContext(context.Context) CertificateRequestTypeOutput
}

// A CertificateRequest is used to request a signed certificate from one of the configured issuers.
//  All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field.
//  A CertificateRequest is a 'one-shot' resource, meaning it represents a single point in time request for a certificate and cannot be re-used.
type CertificateRequestTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the CertificateRequest resource.
	Spec CertificateRequestSpecPtrInput `pulumi:"spec"`
	// Status of the CertificateRequest. This is set and managed automatically.
	Status CertificateRequestStatusPtrInput `pulumi:"status"`
}

func (CertificateRequestTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestType)(nil)).Elem()
}

func (i CertificateRequestTypeArgs) ToCertificateRequestTypeOutput() CertificateRequestTypeOutput {
	return i.ToCertificateRequestTypeOutputWithContext(context.Background())
}

func (i CertificateRequestTypeArgs) ToCertificateRequestTypeOutputWithContext(ctx context.Context) CertificateRequestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestTypeOutput)
}

// A CertificateRequest is used to request a signed certificate from one of the configured issuers.
//  All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field.
//  A CertificateRequest is a 'one-shot' resource, meaning it represents a single point in time request for a certificate and cannot be re-used.
type CertificateRequestTypeOutput struct{ *pulumi.OutputState }

func (CertificateRequestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestType)(nil)).Elem()
}

func (o CertificateRequestTypeOutput) ToCertificateRequestTypeOutput() CertificateRequestTypeOutput {
	return o
}

func (o CertificateRequestTypeOutput) ToCertificateRequestTypeOutputWithContext(ctx context.Context) CertificateRequestTypeOutput {
	return o
}

func (o CertificateRequestTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o CertificateRequestTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CertificateRequestTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CertificateRequestType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the CertificateRequest resource.
func (o CertificateRequestTypeOutput) Spec() CertificateRequestSpecPtrOutput {
	return o.ApplyT(func(v CertificateRequestType) *CertificateRequestSpec { return v.Spec }).(CertificateRequestSpecPtrOutput)
}

// Status of the CertificateRequest. This is set and managed automatically.
func (o CertificateRequestTypeOutput) Status() CertificateRequestStatusPtrOutput {
	return o.ApplyT(func(v CertificateRequestType) *CertificateRequestStatus { return v.Status }).(CertificateRequestStatusPtrOutput)
}

type CertificateRequestMetadata struct {
}

// CertificateRequestMetadataInput is an input type that accepts CertificateRequestMetadataArgs and CertificateRequestMetadataOutput values.
// You can construct a concrete instance of `CertificateRequestMetadataInput` via:
//
//          CertificateRequestMetadataArgs{...}
type CertificateRequestMetadataInput interface {
	pulumi.Input

	ToCertificateRequestMetadataOutput() CertificateRequestMetadataOutput
	ToCertificateRequestMetadataOutputWithContext(context.Context) CertificateRequestMetadataOutput
}

type CertificateRequestMetadataArgs struct {
}

func (CertificateRequestMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestMetadata)(nil)).Elem()
}

func (i CertificateRequestMetadataArgs) ToCertificateRequestMetadataOutput() CertificateRequestMetadataOutput {
	return i.ToCertificateRequestMetadataOutputWithContext(context.Background())
}

func (i CertificateRequestMetadataArgs) ToCertificateRequestMetadataOutputWithContext(ctx context.Context) CertificateRequestMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestMetadataOutput)
}

type CertificateRequestMetadataOutput struct{ *pulumi.OutputState }

func (CertificateRequestMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestMetadata)(nil)).Elem()
}

func (o CertificateRequestMetadataOutput) ToCertificateRequestMetadataOutput() CertificateRequestMetadataOutput {
	return o
}

func (o CertificateRequestMetadataOutput) ToCertificateRequestMetadataOutputWithContext(ctx context.Context) CertificateRequestMetadataOutput {
	return o
}

// Desired state of the CertificateRequest resource.
type CertificateRequestSpec struct {
	// The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
	Csr string `pulumi:"csr"`
	// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
	Duration *string `pulumi:"duration"`
	// IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
	IsCA *bool `pulumi:"isCA"`
	// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
	IssuerRef CertificateRequestSpecIssuerRef `pulumi:"issuerRef"`
	// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
	Usages []string `pulumi:"usages"`
}

// CertificateRequestSpecInput is an input type that accepts CertificateRequestSpecArgs and CertificateRequestSpecOutput values.
// You can construct a concrete instance of `CertificateRequestSpecInput` via:
//
//          CertificateRequestSpecArgs{...}
type CertificateRequestSpecInput interface {
	pulumi.Input

	ToCertificateRequestSpecOutput() CertificateRequestSpecOutput
	ToCertificateRequestSpecOutputWithContext(context.Context) CertificateRequestSpecOutput
}

// Desired state of the CertificateRequest resource.
type CertificateRequestSpecArgs struct {
	// The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
	Csr pulumi.StringInput `pulumi:"csr"`
	// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
	IsCA pulumi.BoolPtrInput `pulumi:"isCA"`
	// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
	IssuerRef CertificateRequestSpecIssuerRefInput `pulumi:"issuerRef"`
	// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
	Usages pulumi.StringArrayInput `pulumi:"usages"`
}

func (CertificateRequestSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestSpec)(nil)).Elem()
}

func (i CertificateRequestSpecArgs) ToCertificateRequestSpecOutput() CertificateRequestSpecOutput {
	return i.ToCertificateRequestSpecOutputWithContext(context.Background())
}

func (i CertificateRequestSpecArgs) ToCertificateRequestSpecOutputWithContext(ctx context.Context) CertificateRequestSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecOutput)
}

func (i CertificateRequestSpecArgs) ToCertificateRequestSpecPtrOutput() CertificateRequestSpecPtrOutput {
	return i.ToCertificateRequestSpecPtrOutputWithContext(context.Background())
}

func (i CertificateRequestSpecArgs) ToCertificateRequestSpecPtrOutputWithContext(ctx context.Context) CertificateRequestSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecOutput).ToCertificateRequestSpecPtrOutputWithContext(ctx)
}

// CertificateRequestSpecPtrInput is an input type that accepts CertificateRequestSpecArgs, CertificateRequestSpecPtr and CertificateRequestSpecPtrOutput values.
// You can construct a concrete instance of `CertificateRequestSpecPtrInput` via:
//
//          CertificateRequestSpecArgs{...}
//
//  or:
//
//          nil
type CertificateRequestSpecPtrInput interface {
	pulumi.Input

	ToCertificateRequestSpecPtrOutput() CertificateRequestSpecPtrOutput
	ToCertificateRequestSpecPtrOutputWithContext(context.Context) CertificateRequestSpecPtrOutput
}

type certificateRequestSpecPtrType CertificateRequestSpecArgs

func CertificateRequestSpecPtr(v *CertificateRequestSpecArgs) CertificateRequestSpecPtrInput {
	return (*certificateRequestSpecPtrType)(v)
}

func (*certificateRequestSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestSpec)(nil)).Elem()
}

func (i *certificateRequestSpecPtrType) ToCertificateRequestSpecPtrOutput() CertificateRequestSpecPtrOutput {
	return i.ToCertificateRequestSpecPtrOutputWithContext(context.Background())
}

func (i *certificateRequestSpecPtrType) ToCertificateRequestSpecPtrOutputWithContext(ctx context.Context) CertificateRequestSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecPtrOutput)
}

// Desired state of the CertificateRequest resource.
type CertificateRequestSpecOutput struct{ *pulumi.OutputState }

func (CertificateRequestSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestSpec)(nil)).Elem()
}

func (o CertificateRequestSpecOutput) ToCertificateRequestSpecOutput() CertificateRequestSpecOutput {
	return o
}

func (o CertificateRequestSpecOutput) ToCertificateRequestSpecOutputWithContext(ctx context.Context) CertificateRequestSpecOutput {
	return o
}

func (o CertificateRequestSpecOutput) ToCertificateRequestSpecPtrOutput() CertificateRequestSpecPtrOutput {
	return o.ToCertificateRequestSpecPtrOutputWithContext(context.Background())
}

func (o CertificateRequestSpecOutput) ToCertificateRequestSpecPtrOutputWithContext(ctx context.Context) CertificateRequestSpecPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpec) *CertificateRequestSpec {
		return &v
	}).(CertificateRequestSpecPtrOutput)
}

// The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
func (o CertificateRequestSpecOutput) Csr() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateRequestSpec) string { return v.Csr }).(pulumi.StringOutput)
}

// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
func (o CertificateRequestSpecOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpec) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
func (o CertificateRequestSpecOutput) IsCA() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpec) *bool { return v.IsCA }).(pulumi.BoolPtrOutput)
}

// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
func (o CertificateRequestSpecOutput) IssuerRef() CertificateRequestSpecIssuerRefOutput {
	return o.ApplyT(func(v CertificateRequestSpec) CertificateRequestSpecIssuerRef { return v.IssuerRef }).(CertificateRequestSpecIssuerRefOutput)
}

// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
func (o CertificateRequestSpecOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateRequestSpec) []string { return v.Usages }).(pulumi.StringArrayOutput)
}

type CertificateRequestSpecPtrOutput struct{ *pulumi.OutputState }

func (CertificateRequestSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestSpec)(nil)).Elem()
}

func (o CertificateRequestSpecPtrOutput) ToCertificateRequestSpecPtrOutput() CertificateRequestSpecPtrOutput {
	return o
}

func (o CertificateRequestSpecPtrOutput) ToCertificateRequestSpecPtrOutputWithContext(ctx context.Context) CertificateRequestSpecPtrOutput {
	return o
}

func (o CertificateRequestSpecPtrOutput) Elem() CertificateRequestSpecOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) CertificateRequestSpec { return *v }).(CertificateRequestSpecOutput)
}

// The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
func (o CertificateRequestSpecPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Csr
	}).(pulumi.StringPtrOutput)
}

// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
func (o CertificateRequestSpecPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
func (o CertificateRequestSpecPtrOutput) IsCA() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) *bool {
		if v == nil {
			return nil
		}
		return v.IsCA
	}).(pulumi.BoolPtrOutput)
}

// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
func (o CertificateRequestSpecPtrOutput) IssuerRef() CertificateRequestSpecIssuerRefPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) *CertificateRequestSpecIssuerRef {
		if v == nil {
			return nil
		}
		return &v.IssuerRef
	}).(CertificateRequestSpecIssuerRefPtrOutput)
}

// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
func (o CertificateRequestSpecPtrOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateRequestSpec) []string {
		if v == nil {
			return nil
		}
		return v.Usages
	}).(pulumi.StringArrayOutput)
}

// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
type CertificateRequestSpecIssuerRef struct {
	// Group of the resource being referred to.
	Group *string `pulumi:"group"`
	// Kind of the resource being referred to.
	Kind *string `pulumi:"kind"`
	// Name of the resource being referred to.
	Name string `pulumi:"name"`
}

// CertificateRequestSpecIssuerRefInput is an input type that accepts CertificateRequestSpecIssuerRefArgs and CertificateRequestSpecIssuerRefOutput values.
// You can construct a concrete instance of `CertificateRequestSpecIssuerRefInput` via:
//
//          CertificateRequestSpecIssuerRefArgs{...}
type CertificateRequestSpecIssuerRefInput interface {
	pulumi.Input

	ToCertificateRequestSpecIssuerRefOutput() CertificateRequestSpecIssuerRefOutput
	ToCertificateRequestSpecIssuerRefOutputWithContext(context.Context) CertificateRequestSpecIssuerRefOutput
}

// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
type CertificateRequestSpecIssuerRefArgs struct {
	// Group of the resource being referred to.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// Kind of the resource being referred to.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertificateRequestSpecIssuerRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestSpecIssuerRef)(nil)).Elem()
}

func (i CertificateRequestSpecIssuerRefArgs) ToCertificateRequestSpecIssuerRefOutput() CertificateRequestSpecIssuerRefOutput {
	return i.ToCertificateRequestSpecIssuerRefOutputWithContext(context.Background())
}

func (i CertificateRequestSpecIssuerRefArgs) ToCertificateRequestSpecIssuerRefOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecIssuerRefOutput)
}

func (i CertificateRequestSpecIssuerRefArgs) ToCertificateRequestSpecIssuerRefPtrOutput() CertificateRequestSpecIssuerRefPtrOutput {
	return i.ToCertificateRequestSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (i CertificateRequestSpecIssuerRefArgs) ToCertificateRequestSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecIssuerRefOutput).ToCertificateRequestSpecIssuerRefPtrOutputWithContext(ctx)
}

// CertificateRequestSpecIssuerRefPtrInput is an input type that accepts CertificateRequestSpecIssuerRefArgs, CertificateRequestSpecIssuerRefPtr and CertificateRequestSpecIssuerRefPtrOutput values.
// You can construct a concrete instance of `CertificateRequestSpecIssuerRefPtrInput` via:
//
//          CertificateRequestSpecIssuerRefArgs{...}
//
//  or:
//
//          nil
type CertificateRequestSpecIssuerRefPtrInput interface {
	pulumi.Input

	ToCertificateRequestSpecIssuerRefPtrOutput() CertificateRequestSpecIssuerRefPtrOutput
	ToCertificateRequestSpecIssuerRefPtrOutputWithContext(context.Context) CertificateRequestSpecIssuerRefPtrOutput
}

type certificateRequestSpecIssuerRefPtrType CertificateRequestSpecIssuerRefArgs

func CertificateRequestSpecIssuerRefPtr(v *CertificateRequestSpecIssuerRefArgs) CertificateRequestSpecIssuerRefPtrInput {
	return (*certificateRequestSpecIssuerRefPtrType)(v)
}

func (*certificateRequestSpecIssuerRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestSpecIssuerRef)(nil)).Elem()
}

func (i *certificateRequestSpecIssuerRefPtrType) ToCertificateRequestSpecIssuerRefPtrOutput() CertificateRequestSpecIssuerRefPtrOutput {
	return i.ToCertificateRequestSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (i *certificateRequestSpecIssuerRefPtrType) ToCertificateRequestSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestSpecIssuerRefPtrOutput)
}

// IssuerRef is a reference to the issuer for this CertificateRequest.  If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to 'cert-manager.io' if empty.
type CertificateRequestSpecIssuerRefOutput struct{ *pulumi.OutputState }

func (CertificateRequestSpecIssuerRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestSpecIssuerRef)(nil)).Elem()
}

func (o CertificateRequestSpecIssuerRefOutput) ToCertificateRequestSpecIssuerRefOutput() CertificateRequestSpecIssuerRefOutput {
	return o
}

func (o CertificateRequestSpecIssuerRefOutput) ToCertificateRequestSpecIssuerRefOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefOutput {
	return o
}

func (o CertificateRequestSpecIssuerRefOutput) ToCertificateRequestSpecIssuerRefPtrOutput() CertificateRequestSpecIssuerRefPtrOutput {
	return o.ToCertificateRequestSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (o CertificateRequestSpecIssuerRefOutput) ToCertificateRequestSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpecIssuerRef) *CertificateRequestSpecIssuerRef {
		return &v
	}).(CertificateRequestSpecIssuerRefPtrOutput)
}

// Group of the resource being referred to.
func (o CertificateRequestSpecIssuerRefOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpecIssuerRef) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Kind of the resource being referred to.
func (o CertificateRequestSpecIssuerRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestSpecIssuerRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
func (o CertificateRequestSpecIssuerRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateRequestSpecIssuerRef) string { return v.Name }).(pulumi.StringOutput)
}

type CertificateRequestSpecIssuerRefPtrOutput struct{ *pulumi.OutputState }

func (CertificateRequestSpecIssuerRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestSpecIssuerRef)(nil)).Elem()
}

func (o CertificateRequestSpecIssuerRefPtrOutput) ToCertificateRequestSpecIssuerRefPtrOutput() CertificateRequestSpecIssuerRefPtrOutput {
	return o
}

func (o CertificateRequestSpecIssuerRefPtrOutput) ToCertificateRequestSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateRequestSpecIssuerRefPtrOutput {
	return o
}

func (o CertificateRequestSpecIssuerRefPtrOutput) Elem() CertificateRequestSpecIssuerRefOutput {
	return o.ApplyT(func(v *CertificateRequestSpecIssuerRef) CertificateRequestSpecIssuerRef { return *v }).(CertificateRequestSpecIssuerRefOutput)
}

// Group of the resource being referred to.
func (o CertificateRequestSpecIssuerRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// Kind of the resource being referred to.
func (o CertificateRequestSpecIssuerRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
func (o CertificateRequestSpecIssuerRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the CertificateRequest. This is set and managed automatically.
type CertificateRequestStatus struct {
	// The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
	Ca *string `pulumi:"ca"`
	// The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
	Certificate *string `pulumi:"certificate"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
	Conditions []CertificateRequestStatusConditions `pulumi:"conditions"`
	// FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
	FailureTime *string `pulumi:"failureTime"`
}

// CertificateRequestStatusInput is an input type that accepts CertificateRequestStatusArgs and CertificateRequestStatusOutput values.
// You can construct a concrete instance of `CertificateRequestStatusInput` via:
//
//          CertificateRequestStatusArgs{...}
type CertificateRequestStatusInput interface {
	pulumi.Input

	ToCertificateRequestStatusOutput() CertificateRequestStatusOutput
	ToCertificateRequestStatusOutputWithContext(context.Context) CertificateRequestStatusOutput
}

// Status of the CertificateRequest. This is set and managed automatically.
type CertificateRequestStatusArgs struct {
	// The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
	Ca pulumi.StringPtrInput `pulumi:"ca"`
	// The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
	Conditions CertificateRequestStatusConditionsArrayInput `pulumi:"conditions"`
	// FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
	FailureTime pulumi.StringPtrInput `pulumi:"failureTime"`
}

func (CertificateRequestStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestStatus)(nil)).Elem()
}

func (i CertificateRequestStatusArgs) ToCertificateRequestStatusOutput() CertificateRequestStatusOutput {
	return i.ToCertificateRequestStatusOutputWithContext(context.Background())
}

func (i CertificateRequestStatusArgs) ToCertificateRequestStatusOutputWithContext(ctx context.Context) CertificateRequestStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestStatusOutput)
}

func (i CertificateRequestStatusArgs) ToCertificateRequestStatusPtrOutput() CertificateRequestStatusPtrOutput {
	return i.ToCertificateRequestStatusPtrOutputWithContext(context.Background())
}

func (i CertificateRequestStatusArgs) ToCertificateRequestStatusPtrOutputWithContext(ctx context.Context) CertificateRequestStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestStatusOutput).ToCertificateRequestStatusPtrOutputWithContext(ctx)
}

// CertificateRequestStatusPtrInput is an input type that accepts CertificateRequestStatusArgs, CertificateRequestStatusPtr and CertificateRequestStatusPtrOutput values.
// You can construct a concrete instance of `CertificateRequestStatusPtrInput` via:
//
//          CertificateRequestStatusArgs{...}
//
//  or:
//
//          nil
type CertificateRequestStatusPtrInput interface {
	pulumi.Input

	ToCertificateRequestStatusPtrOutput() CertificateRequestStatusPtrOutput
	ToCertificateRequestStatusPtrOutputWithContext(context.Context) CertificateRequestStatusPtrOutput
}

type certificateRequestStatusPtrType CertificateRequestStatusArgs

func CertificateRequestStatusPtr(v *CertificateRequestStatusArgs) CertificateRequestStatusPtrInput {
	return (*certificateRequestStatusPtrType)(v)
}

func (*certificateRequestStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestStatus)(nil)).Elem()
}

func (i *certificateRequestStatusPtrType) ToCertificateRequestStatusPtrOutput() CertificateRequestStatusPtrOutput {
	return i.ToCertificateRequestStatusPtrOutputWithContext(context.Background())
}

func (i *certificateRequestStatusPtrType) ToCertificateRequestStatusPtrOutputWithContext(ctx context.Context) CertificateRequestStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestStatusPtrOutput)
}

// Status of the CertificateRequest. This is set and managed automatically.
type CertificateRequestStatusOutput struct{ *pulumi.OutputState }

func (CertificateRequestStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestStatus)(nil)).Elem()
}

func (o CertificateRequestStatusOutput) ToCertificateRequestStatusOutput() CertificateRequestStatusOutput {
	return o
}

func (o CertificateRequestStatusOutput) ToCertificateRequestStatusOutputWithContext(ctx context.Context) CertificateRequestStatusOutput {
	return o
}

func (o CertificateRequestStatusOutput) ToCertificateRequestStatusPtrOutput() CertificateRequestStatusPtrOutput {
	return o.ToCertificateRequestStatusPtrOutputWithContext(context.Background())
}

func (o CertificateRequestStatusOutput) ToCertificateRequestStatusPtrOutputWithContext(ctx context.Context) CertificateRequestStatusPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatus) *CertificateRequestStatus {
		return &v
	}).(CertificateRequestStatusPtrOutput)
}

// The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
func (o CertificateRequestStatusOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatus) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

// The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
func (o CertificateRequestStatusOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatus) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
func (o CertificateRequestStatusOutput) Conditions() CertificateRequestStatusConditionsArrayOutput {
	return o.ApplyT(func(v CertificateRequestStatus) []CertificateRequestStatusConditions { return v.Conditions }).(CertificateRequestStatusConditionsArrayOutput)
}

// FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
func (o CertificateRequestStatusOutput) FailureTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatus) *string { return v.FailureTime }).(pulumi.StringPtrOutput)
}

type CertificateRequestStatusPtrOutput struct{ *pulumi.OutputState }

func (CertificateRequestStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateRequestStatus)(nil)).Elem()
}

func (o CertificateRequestStatusPtrOutput) ToCertificateRequestStatusPtrOutput() CertificateRequestStatusPtrOutput {
	return o
}

func (o CertificateRequestStatusPtrOutput) ToCertificateRequestStatusPtrOutputWithContext(ctx context.Context) CertificateRequestStatusPtrOutput {
	return o
}

func (o CertificateRequestStatusPtrOutput) Elem() CertificateRequestStatusOutput {
	return o.ApplyT(func(v *CertificateRequestStatus) CertificateRequestStatus { return *v }).(CertificateRequestStatusOutput)
}

// The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.
func (o CertificateRequestStatusPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestStatus) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

// The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.
func (o CertificateRequestStatusPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestStatus) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
func (o CertificateRequestStatusPtrOutput) Conditions() CertificateRequestStatusConditionsArrayOutput {
	return o.ApplyT(func(v *CertificateRequestStatus) []CertificateRequestStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CertificateRequestStatusConditionsArrayOutput)
}

// FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.
func (o CertificateRequestStatusPtrOutput) FailureTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateRequestStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureTime
	}).(pulumi.StringPtrOutput)
}

// CertificateRequestCondition contains condition information for a CertificateRequest.
type CertificateRequestStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready', 'InvalidRequest').
	Type string `pulumi:"type"`
}

// CertificateRequestStatusConditionsInput is an input type that accepts CertificateRequestStatusConditionsArgs and CertificateRequestStatusConditionsOutput values.
// You can construct a concrete instance of `CertificateRequestStatusConditionsInput` via:
//
//          CertificateRequestStatusConditionsArgs{...}
type CertificateRequestStatusConditionsInput interface {
	pulumi.Input

	ToCertificateRequestStatusConditionsOutput() CertificateRequestStatusConditionsOutput
	ToCertificateRequestStatusConditionsOutputWithContext(context.Context) CertificateRequestStatusConditionsOutput
}

// CertificateRequestCondition contains condition information for a CertificateRequest.
type CertificateRequestStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready', 'InvalidRequest').
	Type pulumi.StringInput `pulumi:"type"`
}

func (CertificateRequestStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestStatusConditions)(nil)).Elem()
}

func (i CertificateRequestStatusConditionsArgs) ToCertificateRequestStatusConditionsOutput() CertificateRequestStatusConditionsOutput {
	return i.ToCertificateRequestStatusConditionsOutputWithContext(context.Background())
}

func (i CertificateRequestStatusConditionsArgs) ToCertificateRequestStatusConditionsOutputWithContext(ctx context.Context) CertificateRequestStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestStatusConditionsOutput)
}

// CertificateRequestStatusConditionsArrayInput is an input type that accepts CertificateRequestStatusConditionsArray and CertificateRequestStatusConditionsArrayOutput values.
// You can construct a concrete instance of `CertificateRequestStatusConditionsArrayInput` via:
//
//          CertificateRequestStatusConditionsArray{ CertificateRequestStatusConditionsArgs{...} }
type CertificateRequestStatusConditionsArrayInput interface {
	pulumi.Input

	ToCertificateRequestStatusConditionsArrayOutput() CertificateRequestStatusConditionsArrayOutput
	ToCertificateRequestStatusConditionsArrayOutputWithContext(context.Context) CertificateRequestStatusConditionsArrayOutput
}

type CertificateRequestStatusConditionsArray []CertificateRequestStatusConditionsInput

func (CertificateRequestStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateRequestStatusConditions)(nil)).Elem()
}

func (i CertificateRequestStatusConditionsArray) ToCertificateRequestStatusConditionsArrayOutput() CertificateRequestStatusConditionsArrayOutput {
	return i.ToCertificateRequestStatusConditionsArrayOutputWithContext(context.Background())
}

func (i CertificateRequestStatusConditionsArray) ToCertificateRequestStatusConditionsArrayOutputWithContext(ctx context.Context) CertificateRequestStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRequestStatusConditionsArrayOutput)
}

// CertificateRequestCondition contains condition information for a CertificateRequest.
type CertificateRequestStatusConditionsOutput struct{ *pulumi.OutputState }

func (CertificateRequestStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRequestStatusConditions)(nil)).Elem()
}

func (o CertificateRequestStatusConditionsOutput) ToCertificateRequestStatusConditionsOutput() CertificateRequestStatusConditionsOutput {
	return o
}

func (o CertificateRequestStatusConditionsOutput) ToCertificateRequestStatusConditionsOutputWithContext(ctx context.Context) CertificateRequestStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o CertificateRequestStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o CertificateRequestStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o CertificateRequestStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRequestStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o CertificateRequestStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateRequestStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready', 'InvalidRequest').
func (o CertificateRequestStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateRequestStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type CertificateRequestStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (CertificateRequestStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateRequestStatusConditions)(nil)).Elem()
}

func (o CertificateRequestStatusConditionsArrayOutput) ToCertificateRequestStatusConditionsArrayOutput() CertificateRequestStatusConditionsArrayOutput {
	return o
}

func (o CertificateRequestStatusConditionsArrayOutput) ToCertificateRequestStatusConditionsArrayOutputWithContext(ctx context.Context) CertificateRequestStatusConditionsArrayOutput {
	return o
}

func (o CertificateRequestStatusConditionsArrayOutput) Index(i pulumi.IntInput) CertificateRequestStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateRequestStatusConditions {
		return vs[0].([]CertificateRequestStatusConditions)[vs[1].(int)]
	}).(CertificateRequestStatusConditionsOutput)
}

// Desired state of the Certificate resource.
type CertificateSpec struct {
	// CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
	CommonName *string `pulumi:"commonName"`
	// DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
	DnsNames []string `pulumi:"dnsNames"`
	// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.
	Duration *string `pulumi:"duration"`
	// EmailSANs is a list of email subjectAltNames to be set on the Certificate.
	EmailSANs []string `pulumi:"emailSANs"`
	// IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
	IpAddresses []string `pulumi:"ipAddresses"`
	// IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
	IsCA *bool `pulumi:"isCA"`
	// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
	IssuerRef CertificateSpecIssuerRef `pulumi:"issuerRef"`
	// KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for "ecdsa" key algorithm and key size of 2048 will be used for "rsa" key algorithm.
	KeyAlgorithm *string `pulumi:"keyAlgorithm"`
	// KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.
	KeyEncoding *string `pulumi:"keyEncoding"`
	// KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.
	KeySize *int `pulumi:"keySize"`
	// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
	Keystores *CertificateSpecKeystores `pulumi:"keystores"`
	// Organization is a list of organizations to be used on the Certificate.
	Organization []string `pulumi:"organization"`
	// Options to control private keys used for the Certificate.
	PrivateKey *CertificateSpecPrivateKey `pulumi:"privateKey"`
	// The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.
	RenewBefore *string `pulumi:"renewBefore"`
	// SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
	SecretName string `pulumi:"secretName"`
	// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
	Subject *CertificateSpecSubject `pulumi:"subject"`
	// URISANs is a list of URI subjectAltNames to be set on the Certificate.
	UriSANs []string `pulumi:"uriSANs"`
	// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
	Usages []string `pulumi:"usages"`
}

// CertificateSpecInput is an input type that accepts CertificateSpecArgs and CertificateSpecOutput values.
// You can construct a concrete instance of `CertificateSpecInput` via:
//
//          CertificateSpecArgs{...}
type CertificateSpecInput interface {
	pulumi.Input

	ToCertificateSpecOutput() CertificateSpecOutput
	ToCertificateSpecOutputWithContext(context.Context) CertificateSpecOutput
}

// Desired state of the Certificate resource.
type CertificateSpecArgs struct {
	// CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// EmailSANs is a list of email subjectAltNames to be set on the Certificate.
	EmailSANs pulumi.StringArrayInput `pulumi:"emailSANs"`
	// IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
	IsCA pulumi.BoolPtrInput `pulumi:"isCA"`
	// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
	IssuerRef CertificateSpecIssuerRefInput `pulumi:"issuerRef"`
	// KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for "ecdsa" key algorithm and key size of 2048 will be used for "rsa" key algorithm.
	KeyAlgorithm pulumi.StringPtrInput `pulumi:"keyAlgorithm"`
	// KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.
	KeyEncoding pulumi.StringPtrInput `pulumi:"keyEncoding"`
	// KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
	Keystores CertificateSpecKeystoresPtrInput `pulumi:"keystores"`
	// Organization is a list of organizations to be used on the Certificate.
	Organization pulumi.StringArrayInput `pulumi:"organization"`
	// Options to control private keys used for the Certificate.
	PrivateKey CertificateSpecPrivateKeyPtrInput `pulumi:"privateKey"`
	// The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.
	RenewBefore pulumi.StringPtrInput `pulumi:"renewBefore"`
	// SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
	Subject CertificateSpecSubjectPtrInput `pulumi:"subject"`
	// URISANs is a list of URI subjectAltNames to be set on the Certificate.
	UriSANs pulumi.StringArrayInput `pulumi:"uriSANs"`
	// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
	Usages pulumi.StringArrayInput `pulumi:"usages"`
}

func (CertificateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpec)(nil)).Elem()
}

func (i CertificateSpecArgs) ToCertificateSpecOutput() CertificateSpecOutput {
	return i.ToCertificateSpecOutputWithContext(context.Background())
}

func (i CertificateSpecArgs) ToCertificateSpecOutputWithContext(ctx context.Context) CertificateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecOutput)
}

func (i CertificateSpecArgs) ToCertificateSpecPtrOutput() CertificateSpecPtrOutput {
	return i.ToCertificateSpecPtrOutputWithContext(context.Background())
}

func (i CertificateSpecArgs) ToCertificateSpecPtrOutputWithContext(ctx context.Context) CertificateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecOutput).ToCertificateSpecPtrOutputWithContext(ctx)
}

// CertificateSpecPtrInput is an input type that accepts CertificateSpecArgs, CertificateSpecPtr and CertificateSpecPtrOutput values.
// You can construct a concrete instance of `CertificateSpecPtrInput` via:
//
//          CertificateSpecArgs{...}
//
//  or:
//
//          nil
type CertificateSpecPtrInput interface {
	pulumi.Input

	ToCertificateSpecPtrOutput() CertificateSpecPtrOutput
	ToCertificateSpecPtrOutputWithContext(context.Context) CertificateSpecPtrOutput
}

type certificateSpecPtrType CertificateSpecArgs

func CertificateSpecPtr(v *CertificateSpecArgs) CertificateSpecPtrInput {
	return (*certificateSpecPtrType)(v)
}

func (*certificateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpec)(nil)).Elem()
}

func (i *certificateSpecPtrType) ToCertificateSpecPtrOutput() CertificateSpecPtrOutput {
	return i.ToCertificateSpecPtrOutputWithContext(context.Background())
}

func (i *certificateSpecPtrType) ToCertificateSpecPtrOutputWithContext(ctx context.Context) CertificateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecPtrOutput)
}

// Desired state of the Certificate resource.
type CertificateSpecOutput struct{ *pulumi.OutputState }

func (CertificateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpec)(nil)).Elem()
}

func (o CertificateSpecOutput) ToCertificateSpecOutput() CertificateSpecOutput {
	return o
}

func (o CertificateSpecOutput) ToCertificateSpecOutputWithContext(ctx context.Context) CertificateSpecOutput {
	return o
}

func (o CertificateSpecOutput) ToCertificateSpecPtrOutput() CertificateSpecPtrOutput {
	return o.ToCertificateSpecPtrOutputWithContext(context.Background())
}

func (o CertificateSpecOutput) ToCertificateSpecPtrOutputWithContext(ctx context.Context) CertificateSpecPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *CertificateSpec {
		return &v
	}).(CertificateSpecPtrOutput)
}

// CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
func (o CertificateSpecOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
func (o CertificateSpecOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.
func (o CertificateSpecOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// EmailSANs is a list of email subjectAltNames to be set on the Certificate.
func (o CertificateSpecOutput) EmailSANs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.EmailSANs }).(pulumi.StringArrayOutput)
}

// IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
func (o CertificateSpecOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
func (o CertificateSpecOutput) IsCA() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *bool { return v.IsCA }).(pulumi.BoolPtrOutput)
}

// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
func (o CertificateSpecOutput) IssuerRef() CertificateSpecIssuerRefOutput {
	return o.ApplyT(func(v CertificateSpec) CertificateSpecIssuerRef { return v.IssuerRef }).(CertificateSpecIssuerRefOutput)
}

// KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for "ecdsa" key algorithm and key size of 2048 will be used for "rsa" key algorithm.
func (o CertificateSpecOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *string { return v.KeyAlgorithm }).(pulumi.StringPtrOutput)
}

// KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.
func (o CertificateSpecOutput) KeyEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *string { return v.KeyEncoding }).(pulumi.StringPtrOutput)
}

// KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.
func (o CertificateSpecOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
func (o CertificateSpecOutput) Keystores() CertificateSpecKeystoresPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *CertificateSpecKeystores { return v.Keystores }).(CertificateSpecKeystoresPtrOutput)
}

// Organization is a list of organizations to be used on the Certificate.
func (o CertificateSpecOutput) Organization() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.Organization }).(pulumi.StringArrayOutput)
}

// Options to control private keys used for the Certificate.
func (o CertificateSpecOutput) PrivateKey() CertificateSpecPrivateKeyPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *CertificateSpecPrivateKey { return v.PrivateKey }).(CertificateSpecPrivateKeyPtrOutput)
}

// The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.
func (o CertificateSpecOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *string { return v.RenewBefore }).(pulumi.StringPtrOutput)
}

// SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
func (o CertificateSpecOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateSpec) string { return v.SecretName }).(pulumi.StringOutput)
}

// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
func (o CertificateSpecOutput) Subject() CertificateSpecSubjectPtrOutput {
	return o.ApplyT(func(v CertificateSpec) *CertificateSpecSubject { return v.Subject }).(CertificateSpecSubjectPtrOutput)
}

// URISANs is a list of URI subjectAltNames to be set on the Certificate.
func (o CertificateSpecOutput) UriSANs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.UriSANs }).(pulumi.StringArrayOutput)
}

// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
func (o CertificateSpecOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpec) []string { return v.Usages }).(pulumi.StringArrayOutput)
}

type CertificateSpecPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpec)(nil)).Elem()
}

func (o CertificateSpecPtrOutput) ToCertificateSpecPtrOutput() CertificateSpecPtrOutput {
	return o
}

func (o CertificateSpecPtrOutput) ToCertificateSpecPtrOutputWithContext(ctx context.Context) CertificateSpecPtrOutput {
	return o
}

func (o CertificateSpecPtrOutput) Elem() CertificateSpecOutput {
	return o.ApplyT(func(v *CertificateSpec) CertificateSpec { return *v }).(CertificateSpecOutput)
}

// CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4
func (o CertificateSpecPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.CommonName
	}).(pulumi.StringPtrOutput)
}

// DNSNames is a list of DNS subjectAltNames to be set on the Certificate.
func (o CertificateSpecPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.
func (o CertificateSpecPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// EmailSANs is a list of email subjectAltNames to be set on the Certificate.
func (o CertificateSpecPtrOutput) EmailSANs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.EmailSANs
	}).(pulumi.StringArrayOutput)
}

// IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.
func (o CertificateSpecPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.
func (o CertificateSpecPtrOutput) IsCA() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *bool {
		if v == nil {
			return nil
		}
		return v.IsCA
	}).(pulumi.BoolPtrOutput)
}

// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
func (o CertificateSpecPtrOutput) IssuerRef() CertificateSpecIssuerRefPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *CertificateSpecIssuerRef {
		if v == nil {
			return nil
		}
		return &v.IssuerRef
	}).(CertificateSpecIssuerRefPtrOutput)
}

// KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either "rsa" or "ecdsa" If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for "ecdsa" key algorithm and key size of 2048 will be used for "rsa" key algorithm.
func (o CertificateSpecPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then PKCS#1 will be used by default.
func (o CertificateSpecPtrOutput) KeyEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncoding
	}).(pulumi.StringPtrOutput)
}

// KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.
func (o CertificateSpecPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
func (o CertificateSpecPtrOutput) Keystores() CertificateSpecKeystoresPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *CertificateSpecKeystores {
		if v == nil {
			return nil
		}
		return v.Keystores
	}).(CertificateSpecKeystoresPtrOutput)
}

// Organization is a list of organizations to be used on the Certificate.
func (o CertificateSpecPtrOutput) Organization() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringArrayOutput)
}

// Options to control private keys used for the Certificate.
func (o CertificateSpecPtrOutput) PrivateKey() CertificateSpecPrivateKeyPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *CertificateSpecPrivateKey {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(CertificateSpecPrivateKeyPtrOutput)
}

// The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.
func (o CertificateSpecPtrOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.RenewBefore
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.
func (o CertificateSpecPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
func (o CertificateSpecPtrOutput) Subject() CertificateSpecSubjectPtrOutput {
	return o.ApplyT(func(v *CertificateSpec) *CertificateSpecSubject {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(CertificateSpecSubjectPtrOutput)
}

// URISANs is a list of URI subjectAltNames to be set on the Certificate.
func (o CertificateSpecPtrOutput) UriSANs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.UriSANs
	}).(pulumi.StringArrayOutput)
}

// Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
func (o CertificateSpecPtrOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpec) []string {
		if v == nil {
			return nil
		}
		return v.Usages
	}).(pulumi.StringArrayOutput)
}

// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
type CertificateSpecIssuerRef struct {
	// Group of the resource being referred to.
	Group *string `pulumi:"group"`
	// Kind of the resource being referred to.
	Kind *string `pulumi:"kind"`
	// Name of the resource being referred to.
	Name string `pulumi:"name"`
}

// CertificateSpecIssuerRefInput is an input type that accepts CertificateSpecIssuerRefArgs and CertificateSpecIssuerRefOutput values.
// You can construct a concrete instance of `CertificateSpecIssuerRefInput` via:
//
//          CertificateSpecIssuerRefArgs{...}
type CertificateSpecIssuerRefInput interface {
	pulumi.Input

	ToCertificateSpecIssuerRefOutput() CertificateSpecIssuerRefOutput
	ToCertificateSpecIssuerRefOutputWithContext(context.Context) CertificateSpecIssuerRefOutput
}

// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
type CertificateSpecIssuerRefArgs struct {
	// Group of the resource being referred to.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// Kind of the resource being referred to.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertificateSpecIssuerRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecIssuerRef)(nil)).Elem()
}

func (i CertificateSpecIssuerRefArgs) ToCertificateSpecIssuerRefOutput() CertificateSpecIssuerRefOutput {
	return i.ToCertificateSpecIssuerRefOutputWithContext(context.Background())
}

func (i CertificateSpecIssuerRefArgs) ToCertificateSpecIssuerRefOutputWithContext(ctx context.Context) CertificateSpecIssuerRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecIssuerRefOutput)
}

func (i CertificateSpecIssuerRefArgs) ToCertificateSpecIssuerRefPtrOutput() CertificateSpecIssuerRefPtrOutput {
	return i.ToCertificateSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (i CertificateSpecIssuerRefArgs) ToCertificateSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateSpecIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecIssuerRefOutput).ToCertificateSpecIssuerRefPtrOutputWithContext(ctx)
}

// CertificateSpecIssuerRefPtrInput is an input type that accepts CertificateSpecIssuerRefArgs, CertificateSpecIssuerRefPtr and CertificateSpecIssuerRefPtrOutput values.
// You can construct a concrete instance of `CertificateSpecIssuerRefPtrInput` via:
//
//          CertificateSpecIssuerRefArgs{...}
//
//  or:
//
//          nil
type CertificateSpecIssuerRefPtrInput interface {
	pulumi.Input

	ToCertificateSpecIssuerRefPtrOutput() CertificateSpecIssuerRefPtrOutput
	ToCertificateSpecIssuerRefPtrOutputWithContext(context.Context) CertificateSpecIssuerRefPtrOutput
}

type certificateSpecIssuerRefPtrType CertificateSpecIssuerRefArgs

func CertificateSpecIssuerRefPtr(v *CertificateSpecIssuerRefArgs) CertificateSpecIssuerRefPtrInput {
	return (*certificateSpecIssuerRefPtrType)(v)
}

func (*certificateSpecIssuerRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecIssuerRef)(nil)).Elem()
}

func (i *certificateSpecIssuerRefPtrType) ToCertificateSpecIssuerRefPtrOutput() CertificateSpecIssuerRefPtrOutput {
	return i.ToCertificateSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (i *certificateSpecIssuerRefPtrType) ToCertificateSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateSpecIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecIssuerRefPtrOutput)
}

// IssuerRef is a reference to the issuer for this certificate. If the 'kind' field is not set, or set to 'Issuer', an Issuer resource with the given name in the same namespace as the Certificate will be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided name will be used. The 'name' field in this stanza is required at all times.
type CertificateSpecIssuerRefOutput struct{ *pulumi.OutputState }

func (CertificateSpecIssuerRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecIssuerRef)(nil)).Elem()
}

func (o CertificateSpecIssuerRefOutput) ToCertificateSpecIssuerRefOutput() CertificateSpecIssuerRefOutput {
	return o
}

func (o CertificateSpecIssuerRefOutput) ToCertificateSpecIssuerRefOutputWithContext(ctx context.Context) CertificateSpecIssuerRefOutput {
	return o
}

func (o CertificateSpecIssuerRefOutput) ToCertificateSpecIssuerRefPtrOutput() CertificateSpecIssuerRefPtrOutput {
	return o.ToCertificateSpecIssuerRefPtrOutputWithContext(context.Background())
}

func (o CertificateSpecIssuerRefOutput) ToCertificateSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateSpecIssuerRefPtrOutput {
	return o.ApplyT(func(v CertificateSpecIssuerRef) *CertificateSpecIssuerRef {
		return &v
	}).(CertificateSpecIssuerRefPtrOutput)
}

// Group of the resource being referred to.
func (o CertificateSpecIssuerRefOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecIssuerRef) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Kind of the resource being referred to.
func (o CertificateSpecIssuerRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecIssuerRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
func (o CertificateSpecIssuerRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateSpecIssuerRef) string { return v.Name }).(pulumi.StringOutput)
}

type CertificateSpecIssuerRefPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecIssuerRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecIssuerRef)(nil)).Elem()
}

func (o CertificateSpecIssuerRefPtrOutput) ToCertificateSpecIssuerRefPtrOutput() CertificateSpecIssuerRefPtrOutput {
	return o
}

func (o CertificateSpecIssuerRefPtrOutput) ToCertificateSpecIssuerRefPtrOutputWithContext(ctx context.Context) CertificateSpecIssuerRefPtrOutput {
	return o
}

func (o CertificateSpecIssuerRefPtrOutput) Elem() CertificateSpecIssuerRefOutput {
	return o.ApplyT(func(v *CertificateSpecIssuerRef) CertificateSpecIssuerRef { return *v }).(CertificateSpecIssuerRefOutput)
}

// Group of the resource being referred to.
func (o CertificateSpecIssuerRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// Kind of the resource being referred to.
func (o CertificateSpecIssuerRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to.
func (o CertificateSpecIssuerRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecIssuerRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
type CertificateSpecKeystores struct {
	// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
	Jks *CertificateSpecKeystoresJks `pulumi:"jks"`
	// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
	Pkcs12 *CertificateSpecKeystoresPkcs12 `pulumi:"pkcs12"`
}

// CertificateSpecKeystoresInput is an input type that accepts CertificateSpecKeystoresArgs and CertificateSpecKeystoresOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresInput` via:
//
//          CertificateSpecKeystoresArgs{...}
type CertificateSpecKeystoresInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresOutput() CertificateSpecKeystoresOutput
	ToCertificateSpecKeystoresOutputWithContext(context.Context) CertificateSpecKeystoresOutput
}

// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
type CertificateSpecKeystoresArgs struct {
	// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
	Jks CertificateSpecKeystoresJksPtrInput `pulumi:"jks"`
	// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
	Pkcs12 CertificateSpecKeystoresPkcs12PtrInput `pulumi:"pkcs12"`
}

func (CertificateSpecKeystoresArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystores)(nil)).Elem()
}

func (i CertificateSpecKeystoresArgs) ToCertificateSpecKeystoresOutput() CertificateSpecKeystoresOutput {
	return i.ToCertificateSpecKeystoresOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresArgs) ToCertificateSpecKeystoresOutputWithContext(ctx context.Context) CertificateSpecKeystoresOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresOutput)
}

func (i CertificateSpecKeystoresArgs) ToCertificateSpecKeystoresPtrOutput() CertificateSpecKeystoresPtrOutput {
	return i.ToCertificateSpecKeystoresPtrOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresArgs) ToCertificateSpecKeystoresPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresOutput).ToCertificateSpecKeystoresPtrOutputWithContext(ctx)
}

// CertificateSpecKeystoresPtrInput is an input type that accepts CertificateSpecKeystoresArgs, CertificateSpecKeystoresPtr and CertificateSpecKeystoresPtrOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresPtrInput` via:
//
//          CertificateSpecKeystoresArgs{...}
//
//  or:
//
//          nil
type CertificateSpecKeystoresPtrInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresPtrOutput() CertificateSpecKeystoresPtrOutput
	ToCertificateSpecKeystoresPtrOutputWithContext(context.Context) CertificateSpecKeystoresPtrOutput
}

type certificateSpecKeystoresPtrType CertificateSpecKeystoresArgs

func CertificateSpecKeystoresPtr(v *CertificateSpecKeystoresArgs) CertificateSpecKeystoresPtrInput {
	return (*certificateSpecKeystoresPtrType)(v)
}

func (*certificateSpecKeystoresPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystores)(nil)).Elem()
}

func (i *certificateSpecKeystoresPtrType) ToCertificateSpecKeystoresPtrOutput() CertificateSpecKeystoresPtrOutput {
	return i.ToCertificateSpecKeystoresPtrOutputWithContext(context.Background())
}

func (i *certificateSpecKeystoresPtrType) ToCertificateSpecKeystoresPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPtrOutput)
}

// Keystores configures additional keystore output formats stored in the `secretName` Secret resource.
type CertificateSpecKeystoresOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystores)(nil)).Elem()
}

func (o CertificateSpecKeystoresOutput) ToCertificateSpecKeystoresOutput() CertificateSpecKeystoresOutput {
	return o
}

func (o CertificateSpecKeystoresOutput) ToCertificateSpecKeystoresOutputWithContext(ctx context.Context) CertificateSpecKeystoresOutput {
	return o
}

func (o CertificateSpecKeystoresOutput) ToCertificateSpecKeystoresPtrOutput() CertificateSpecKeystoresPtrOutput {
	return o.ToCertificateSpecKeystoresPtrOutputWithContext(context.Background())
}

func (o CertificateSpecKeystoresOutput) ToCertificateSpecKeystoresPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystores) *CertificateSpecKeystores {
		return &v
	}).(CertificateSpecKeystoresPtrOutput)
}

// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
func (o CertificateSpecKeystoresOutput) Jks() CertificateSpecKeystoresJksPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystores) *CertificateSpecKeystoresJks { return v.Jks }).(CertificateSpecKeystoresJksPtrOutput)
}

// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
func (o CertificateSpecKeystoresOutput) Pkcs12() CertificateSpecKeystoresPkcs12PtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystores) *CertificateSpecKeystoresPkcs12 { return v.Pkcs12 }).(CertificateSpecKeystoresPkcs12PtrOutput)
}

type CertificateSpecKeystoresPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystores)(nil)).Elem()
}

func (o CertificateSpecKeystoresPtrOutput) ToCertificateSpecKeystoresPtrOutput() CertificateSpecKeystoresPtrOutput {
	return o
}

func (o CertificateSpecKeystoresPtrOutput) ToCertificateSpecKeystoresPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPtrOutput {
	return o
}

func (o CertificateSpecKeystoresPtrOutput) Elem() CertificateSpecKeystoresOutput {
	return o.ApplyT(func(v *CertificateSpecKeystores) CertificateSpecKeystores { return *v }).(CertificateSpecKeystoresOutput)
}

// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
func (o CertificateSpecKeystoresPtrOutput) Jks() CertificateSpecKeystoresJksPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystores) *CertificateSpecKeystoresJks {
		if v == nil {
			return nil
		}
		return v.Jks
	}).(CertificateSpecKeystoresJksPtrOutput)
}

// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
func (o CertificateSpecKeystoresPtrOutput) Pkcs12() CertificateSpecKeystoresPkcs12PtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystores) *CertificateSpecKeystoresPkcs12 {
		if v == nil {
			return nil
		}
		return v.Pkcs12
	}).(CertificateSpecKeystoresPkcs12PtrOutput)
}

// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresJks struct {
	// Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
	Create bool `pulumi:"create"`
	// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
	PasswordSecretRef CertificateSpecKeystoresJksPasswordSecretRef `pulumi:"passwordSecretRef"`
}

// CertificateSpecKeystoresJksInput is an input type that accepts CertificateSpecKeystoresJksArgs and CertificateSpecKeystoresJksOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresJksInput` via:
//
//          CertificateSpecKeystoresJksArgs{...}
type CertificateSpecKeystoresJksInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresJksOutput() CertificateSpecKeystoresJksOutput
	ToCertificateSpecKeystoresJksOutputWithContext(context.Context) CertificateSpecKeystoresJksOutput
}

// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresJksArgs struct {
	// Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
	Create pulumi.BoolInput `pulumi:"create"`
	// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
	PasswordSecretRef CertificateSpecKeystoresJksPasswordSecretRefInput `pulumi:"passwordSecretRef"`
}

func (CertificateSpecKeystoresJksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresJks)(nil)).Elem()
}

func (i CertificateSpecKeystoresJksArgs) ToCertificateSpecKeystoresJksOutput() CertificateSpecKeystoresJksOutput {
	return i.ToCertificateSpecKeystoresJksOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresJksArgs) ToCertificateSpecKeystoresJksOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksOutput)
}

func (i CertificateSpecKeystoresJksArgs) ToCertificateSpecKeystoresJksPtrOutput() CertificateSpecKeystoresJksPtrOutput {
	return i.ToCertificateSpecKeystoresJksPtrOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresJksArgs) ToCertificateSpecKeystoresJksPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksOutput).ToCertificateSpecKeystoresJksPtrOutputWithContext(ctx)
}

// CertificateSpecKeystoresJksPtrInput is an input type that accepts CertificateSpecKeystoresJksArgs, CertificateSpecKeystoresJksPtr and CertificateSpecKeystoresJksPtrOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresJksPtrInput` via:
//
//          CertificateSpecKeystoresJksArgs{...}
//
//  or:
//
//          nil
type CertificateSpecKeystoresJksPtrInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresJksPtrOutput() CertificateSpecKeystoresJksPtrOutput
	ToCertificateSpecKeystoresJksPtrOutputWithContext(context.Context) CertificateSpecKeystoresJksPtrOutput
}

type certificateSpecKeystoresJksPtrType CertificateSpecKeystoresJksArgs

func CertificateSpecKeystoresJksPtr(v *CertificateSpecKeystoresJksArgs) CertificateSpecKeystoresJksPtrInput {
	return (*certificateSpecKeystoresJksPtrType)(v)
}

func (*certificateSpecKeystoresJksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresJks)(nil)).Elem()
}

func (i *certificateSpecKeystoresJksPtrType) ToCertificateSpecKeystoresJksPtrOutput() CertificateSpecKeystoresJksPtrOutput {
	return i.ToCertificateSpecKeystoresJksPtrOutputWithContext(context.Background())
}

func (i *certificateSpecKeystoresJksPtrType) ToCertificateSpecKeystoresJksPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksPtrOutput)
}

// JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresJksOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresJksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresJks)(nil)).Elem()
}

func (o CertificateSpecKeystoresJksOutput) ToCertificateSpecKeystoresJksOutput() CertificateSpecKeystoresJksOutput {
	return o
}

func (o CertificateSpecKeystoresJksOutput) ToCertificateSpecKeystoresJksOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksOutput {
	return o
}

func (o CertificateSpecKeystoresJksOutput) ToCertificateSpecKeystoresJksPtrOutput() CertificateSpecKeystoresJksPtrOutput {
	return o.ToCertificateSpecKeystoresJksPtrOutputWithContext(context.Background())
}

func (o CertificateSpecKeystoresJksOutput) ToCertificateSpecKeystoresJksPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJks) *CertificateSpecKeystoresJks {
		return &v
	}).(CertificateSpecKeystoresJksPtrOutput)
}

// Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
func (o CertificateSpecKeystoresJksOutput) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJks) bool { return v.Create }).(pulumi.BoolOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
func (o CertificateSpecKeystoresJksOutput) PasswordSecretRef() CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJks) CertificateSpecKeystoresJksPasswordSecretRef {
		return v.PasswordSecretRef
	}).(CertificateSpecKeystoresJksPasswordSecretRefOutput)
}

type CertificateSpecKeystoresJksPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresJksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresJks)(nil)).Elem()
}

func (o CertificateSpecKeystoresJksPtrOutput) ToCertificateSpecKeystoresJksPtrOutput() CertificateSpecKeystoresJksPtrOutput {
	return o
}

func (o CertificateSpecKeystoresJksPtrOutput) ToCertificateSpecKeystoresJksPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPtrOutput {
	return o
}

func (o CertificateSpecKeystoresJksPtrOutput) Elem() CertificateSpecKeystoresJksOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJks) CertificateSpecKeystoresJks { return *v }).(CertificateSpecKeystoresJksOutput)
}

// Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
func (o CertificateSpecKeystoresJksPtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJks) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
func (o CertificateSpecKeystoresJksPtrOutput) PasswordSecretRef() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJks) *CertificateSpecKeystoresJksPasswordSecretRef {
		if v == nil {
			return nil
		}
		return &v.PasswordSecretRef
	}).(CertificateSpecKeystoresJksPasswordSecretRefPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
type CertificateSpecKeystoresJksPasswordSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// CertificateSpecKeystoresJksPasswordSecretRefInput is an input type that accepts CertificateSpecKeystoresJksPasswordSecretRefArgs and CertificateSpecKeystoresJksPasswordSecretRefOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresJksPasswordSecretRefInput` via:
//
//          CertificateSpecKeystoresJksPasswordSecretRefArgs{...}
type CertificateSpecKeystoresJksPasswordSecretRefInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresJksPasswordSecretRefOutput() CertificateSpecKeystoresJksPasswordSecretRefOutput
	ToCertificateSpecKeystoresJksPasswordSecretRefOutputWithContext(context.Context) CertificateSpecKeystoresJksPasswordSecretRefOutput
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
type CertificateSpecKeystoresJksPasswordSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertificateSpecKeystoresJksPasswordSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresJksPasswordSecretRef)(nil)).Elem()
}

func (i CertificateSpecKeystoresJksPasswordSecretRefArgs) ToCertificateSpecKeystoresJksPasswordSecretRefOutput() CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return i.ToCertificateSpecKeystoresJksPasswordSecretRefOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresJksPasswordSecretRefArgs) ToCertificateSpecKeystoresJksPasswordSecretRefOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksPasswordSecretRefOutput)
}

func (i CertificateSpecKeystoresJksPasswordSecretRefArgs) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutput() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return i.ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresJksPasswordSecretRefArgs) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksPasswordSecretRefOutput).ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(ctx)
}

// CertificateSpecKeystoresJksPasswordSecretRefPtrInput is an input type that accepts CertificateSpecKeystoresJksPasswordSecretRefArgs, CertificateSpecKeystoresJksPasswordSecretRefPtr and CertificateSpecKeystoresJksPasswordSecretRefPtrOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresJksPasswordSecretRefPtrInput` via:
//
//          CertificateSpecKeystoresJksPasswordSecretRefArgs{...}
//
//  or:
//
//          nil
type CertificateSpecKeystoresJksPasswordSecretRefPtrInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutput() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput
	ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(context.Context) CertificateSpecKeystoresJksPasswordSecretRefPtrOutput
}

type certificateSpecKeystoresJksPasswordSecretRefPtrType CertificateSpecKeystoresJksPasswordSecretRefArgs

func CertificateSpecKeystoresJksPasswordSecretRefPtr(v *CertificateSpecKeystoresJksPasswordSecretRefArgs) CertificateSpecKeystoresJksPasswordSecretRefPtrInput {
	return (*certificateSpecKeystoresJksPasswordSecretRefPtrType)(v)
}

func (*certificateSpecKeystoresJksPasswordSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresJksPasswordSecretRef)(nil)).Elem()
}

func (i *certificateSpecKeystoresJksPasswordSecretRefPtrType) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutput() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return i.ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i *certificateSpecKeystoresJksPasswordSecretRefPtrType) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresJksPasswordSecretRefPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.
type CertificateSpecKeystoresJksPasswordSecretRefOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresJksPasswordSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresJksPasswordSecretRef)(nil)).Elem()
}

func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) ToCertificateSpecKeystoresJksPasswordSecretRefOutput() CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return o
}

func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) ToCertificateSpecKeystoresJksPasswordSecretRefOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return o
}

func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutput() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return o.ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJksPasswordSecretRef) *CertificateSpecKeystoresJksPasswordSecretRef {
		return &v
	}).(CertificateSpecKeystoresJksPasswordSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJksPasswordSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o CertificateSpecKeystoresJksPasswordSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresJksPasswordSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type CertificateSpecKeystoresJksPasswordSecretRefPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresJksPasswordSecretRef)(nil)).Elem()
}

func (o CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutput() CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return o
}

func (o CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) ToCertificateSpecKeystoresJksPasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresJksPasswordSecretRefPtrOutput {
	return o
}

func (o CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) Elem() CertificateSpecKeystoresJksPasswordSecretRefOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJksPasswordSecretRef) CertificateSpecKeystoresJksPasswordSecretRef {
		return *v
	}).(CertificateSpecKeystoresJksPasswordSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJksPasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o CertificateSpecKeystoresJksPasswordSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresJksPasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresPkcs12 struct {
	// Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
	Create bool `pulumi:"create"`
	// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
	PasswordSecretRef CertificateSpecKeystoresPkcs12PasswordSecretRef `pulumi:"passwordSecretRef"`
}

// CertificateSpecKeystoresPkcs12Input is an input type that accepts CertificateSpecKeystoresPkcs12Args and CertificateSpecKeystoresPkcs12Output values.
// You can construct a concrete instance of `CertificateSpecKeystoresPkcs12Input` via:
//
//          CertificateSpecKeystoresPkcs12Args{...}
type CertificateSpecKeystoresPkcs12Input interface {
	pulumi.Input

	ToCertificateSpecKeystoresPkcs12Output() CertificateSpecKeystoresPkcs12Output
	ToCertificateSpecKeystoresPkcs12OutputWithContext(context.Context) CertificateSpecKeystoresPkcs12Output
}

// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresPkcs12Args struct {
	// Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
	Create pulumi.BoolInput `pulumi:"create"`
	// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
	PasswordSecretRef CertificateSpecKeystoresPkcs12PasswordSecretRefInput `pulumi:"passwordSecretRef"`
}

func (CertificateSpecKeystoresPkcs12Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresPkcs12)(nil)).Elem()
}

func (i CertificateSpecKeystoresPkcs12Args) ToCertificateSpecKeystoresPkcs12Output() CertificateSpecKeystoresPkcs12Output {
	return i.ToCertificateSpecKeystoresPkcs12OutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresPkcs12Args) ToCertificateSpecKeystoresPkcs12OutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12Output {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12Output)
}

func (i CertificateSpecKeystoresPkcs12Args) ToCertificateSpecKeystoresPkcs12PtrOutput() CertificateSpecKeystoresPkcs12PtrOutput {
	return i.ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresPkcs12Args) ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12Output).ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(ctx)
}

// CertificateSpecKeystoresPkcs12PtrInput is an input type that accepts CertificateSpecKeystoresPkcs12Args, CertificateSpecKeystoresPkcs12Ptr and CertificateSpecKeystoresPkcs12PtrOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresPkcs12PtrInput` via:
//
//          CertificateSpecKeystoresPkcs12Args{...}
//
//  or:
//
//          nil
type CertificateSpecKeystoresPkcs12PtrInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresPkcs12PtrOutput() CertificateSpecKeystoresPkcs12PtrOutput
	ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(context.Context) CertificateSpecKeystoresPkcs12PtrOutput
}

type certificateSpecKeystoresPkcs12PtrType CertificateSpecKeystoresPkcs12Args

func CertificateSpecKeystoresPkcs12Ptr(v *CertificateSpecKeystoresPkcs12Args) CertificateSpecKeystoresPkcs12PtrInput {
	return (*certificateSpecKeystoresPkcs12PtrType)(v)
}

func (*certificateSpecKeystoresPkcs12PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresPkcs12)(nil)).Elem()
}

func (i *certificateSpecKeystoresPkcs12PtrType) ToCertificateSpecKeystoresPkcs12PtrOutput() CertificateSpecKeystoresPkcs12PtrOutput {
	return i.ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(context.Background())
}

func (i *certificateSpecKeystoresPkcs12PtrType) ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12PtrOutput)
}

// PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.
type CertificateSpecKeystoresPkcs12Output struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresPkcs12Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresPkcs12)(nil)).Elem()
}

func (o CertificateSpecKeystoresPkcs12Output) ToCertificateSpecKeystoresPkcs12Output() CertificateSpecKeystoresPkcs12Output {
	return o
}

func (o CertificateSpecKeystoresPkcs12Output) ToCertificateSpecKeystoresPkcs12OutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12Output {
	return o
}

func (o CertificateSpecKeystoresPkcs12Output) ToCertificateSpecKeystoresPkcs12PtrOutput() CertificateSpecKeystoresPkcs12PtrOutput {
	return o.ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(context.Background())
}

func (o CertificateSpecKeystoresPkcs12Output) ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12) *CertificateSpecKeystoresPkcs12 {
		return &v
	}).(CertificateSpecKeystoresPkcs12PtrOutput)
}

// Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
func (o CertificateSpecKeystoresPkcs12Output) Create() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12) bool { return v.Create }).(pulumi.BoolOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
func (o CertificateSpecKeystoresPkcs12Output) PasswordSecretRef() CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12) CertificateSpecKeystoresPkcs12PasswordSecretRef {
		return v.PasswordSecretRef
	}).(CertificateSpecKeystoresPkcs12PasswordSecretRefOutput)
}

type CertificateSpecKeystoresPkcs12PtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresPkcs12PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresPkcs12)(nil)).Elem()
}

func (o CertificateSpecKeystoresPkcs12PtrOutput) ToCertificateSpecKeystoresPkcs12PtrOutput() CertificateSpecKeystoresPkcs12PtrOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PtrOutput) ToCertificateSpecKeystoresPkcs12PtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PtrOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PtrOutput) Elem() CertificateSpecKeystoresPkcs12Output {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12) CertificateSpecKeystoresPkcs12 { return *v }).(CertificateSpecKeystoresPkcs12Output)
}

// Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.
func (o CertificateSpecKeystoresPkcs12PtrOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12) *bool {
		if v == nil {
			return nil
		}
		return &v.Create
	}).(pulumi.BoolPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
func (o CertificateSpecKeystoresPkcs12PtrOutput) PasswordSecretRef() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12) *CertificateSpecKeystoresPkcs12PasswordSecretRef {
		if v == nil {
			return nil
		}
		return &v.PasswordSecretRef
	}).(CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
type CertificateSpecKeystoresPkcs12PasswordSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// CertificateSpecKeystoresPkcs12PasswordSecretRefInput is an input type that accepts CertificateSpecKeystoresPkcs12PasswordSecretRefArgs and CertificateSpecKeystoresPkcs12PasswordSecretRefOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresPkcs12PasswordSecretRefInput` via:
//
//          CertificateSpecKeystoresPkcs12PasswordSecretRefArgs{...}
type CertificateSpecKeystoresPkcs12PasswordSecretRefInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefOutput
	ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutputWithContext(context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefOutput
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
type CertificateSpecKeystoresPkcs12PasswordSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresPkcs12PasswordSecretRef)(nil)).Elem()
}

func (i CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return i.ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12PasswordSecretRefOutput)
}

func (i CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return i.ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12PasswordSecretRefOutput).ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(ctx)
}

// CertificateSpecKeystoresPkcs12PasswordSecretRefPtrInput is an input type that accepts CertificateSpecKeystoresPkcs12PasswordSecretRefArgs, CertificateSpecKeystoresPkcs12PasswordSecretRefPtr and CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput values.
// You can construct a concrete instance of `CertificateSpecKeystoresPkcs12PasswordSecretRefPtrInput` via:
//
//          CertificateSpecKeystoresPkcs12PasswordSecretRefArgs{...}
//
//  or:
//
//          nil
type CertificateSpecKeystoresPkcs12PasswordSecretRefPtrInput interface {
	pulumi.Input

	ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput
	ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput
}

type certificateSpecKeystoresPkcs12PasswordSecretRefPtrType CertificateSpecKeystoresPkcs12PasswordSecretRefArgs

func CertificateSpecKeystoresPkcs12PasswordSecretRefPtr(v *CertificateSpecKeystoresPkcs12PasswordSecretRefArgs) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrInput {
	return (*certificateSpecKeystoresPkcs12PasswordSecretRefPtrType)(v)
}

func (*certificateSpecKeystoresPkcs12PasswordSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresPkcs12PasswordSecretRef)(nil)).Elem()
}

func (i *certificateSpecKeystoresPkcs12PasswordSecretRefPtrType) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return i.ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i *certificateSpecKeystoresPkcs12PasswordSecretRefPtrType) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput)
}

// PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.
type CertificateSpecKeystoresPkcs12PasswordSecretRefOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecKeystoresPkcs12PasswordSecretRef)(nil)).Elem()
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return o.ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(context.Background())
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12PasswordSecretRef) *CertificateSpecKeystoresPkcs12PasswordSecretRef {
		return &v
	}).(CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12PasswordSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o CertificateSpecKeystoresPkcs12PasswordSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateSpecKeystoresPkcs12PasswordSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecKeystoresPkcs12PasswordSecretRef)(nil)).Elem()
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput() CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) ToCertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutputWithContext(ctx context.Context) CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput {
	return o
}

func (o CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) Elem() CertificateSpecKeystoresPkcs12PasswordSecretRefOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12PasswordSecretRef) CertificateSpecKeystoresPkcs12PasswordSecretRef {
		return *v
	}).(CertificateSpecKeystoresPkcs12PasswordSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12PasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecKeystoresPkcs12PasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Options to control private keys used for the Certificate.
type CertificateSpecPrivateKey struct {
	// RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
	RotationPolicy *string `pulumi:"rotationPolicy"`
}

// CertificateSpecPrivateKeyInput is an input type that accepts CertificateSpecPrivateKeyArgs and CertificateSpecPrivateKeyOutput values.
// You can construct a concrete instance of `CertificateSpecPrivateKeyInput` via:
//
//          CertificateSpecPrivateKeyArgs{...}
type CertificateSpecPrivateKeyInput interface {
	pulumi.Input

	ToCertificateSpecPrivateKeyOutput() CertificateSpecPrivateKeyOutput
	ToCertificateSpecPrivateKeyOutputWithContext(context.Context) CertificateSpecPrivateKeyOutput
}

// Options to control private keys used for the Certificate.
type CertificateSpecPrivateKeyArgs struct {
	// RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
	RotationPolicy pulumi.StringPtrInput `pulumi:"rotationPolicy"`
}

func (CertificateSpecPrivateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecPrivateKey)(nil)).Elem()
}

func (i CertificateSpecPrivateKeyArgs) ToCertificateSpecPrivateKeyOutput() CertificateSpecPrivateKeyOutput {
	return i.ToCertificateSpecPrivateKeyOutputWithContext(context.Background())
}

func (i CertificateSpecPrivateKeyArgs) ToCertificateSpecPrivateKeyOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecPrivateKeyOutput)
}

func (i CertificateSpecPrivateKeyArgs) ToCertificateSpecPrivateKeyPtrOutput() CertificateSpecPrivateKeyPtrOutput {
	return i.ToCertificateSpecPrivateKeyPtrOutputWithContext(context.Background())
}

func (i CertificateSpecPrivateKeyArgs) ToCertificateSpecPrivateKeyPtrOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecPrivateKeyOutput).ToCertificateSpecPrivateKeyPtrOutputWithContext(ctx)
}

// CertificateSpecPrivateKeyPtrInput is an input type that accepts CertificateSpecPrivateKeyArgs, CertificateSpecPrivateKeyPtr and CertificateSpecPrivateKeyPtrOutput values.
// You can construct a concrete instance of `CertificateSpecPrivateKeyPtrInput` via:
//
//          CertificateSpecPrivateKeyArgs{...}
//
//  or:
//
//          nil
type CertificateSpecPrivateKeyPtrInput interface {
	pulumi.Input

	ToCertificateSpecPrivateKeyPtrOutput() CertificateSpecPrivateKeyPtrOutput
	ToCertificateSpecPrivateKeyPtrOutputWithContext(context.Context) CertificateSpecPrivateKeyPtrOutput
}

type certificateSpecPrivateKeyPtrType CertificateSpecPrivateKeyArgs

func CertificateSpecPrivateKeyPtr(v *CertificateSpecPrivateKeyArgs) CertificateSpecPrivateKeyPtrInput {
	return (*certificateSpecPrivateKeyPtrType)(v)
}

func (*certificateSpecPrivateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecPrivateKey)(nil)).Elem()
}

func (i *certificateSpecPrivateKeyPtrType) ToCertificateSpecPrivateKeyPtrOutput() CertificateSpecPrivateKeyPtrOutput {
	return i.ToCertificateSpecPrivateKeyPtrOutputWithContext(context.Background())
}

func (i *certificateSpecPrivateKeyPtrType) ToCertificateSpecPrivateKeyPtrOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecPrivateKeyPtrOutput)
}

// Options to control private keys used for the Certificate.
type CertificateSpecPrivateKeyOutput struct{ *pulumi.OutputState }

func (CertificateSpecPrivateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecPrivateKey)(nil)).Elem()
}

func (o CertificateSpecPrivateKeyOutput) ToCertificateSpecPrivateKeyOutput() CertificateSpecPrivateKeyOutput {
	return o
}

func (o CertificateSpecPrivateKeyOutput) ToCertificateSpecPrivateKeyOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyOutput {
	return o
}

func (o CertificateSpecPrivateKeyOutput) ToCertificateSpecPrivateKeyPtrOutput() CertificateSpecPrivateKeyPtrOutput {
	return o.ToCertificateSpecPrivateKeyPtrOutputWithContext(context.Background())
}

func (o CertificateSpecPrivateKeyOutput) ToCertificateSpecPrivateKeyPtrOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyPtrOutput {
	return o.ApplyT(func(v CertificateSpecPrivateKey) *CertificateSpecPrivateKey {
		return &v
	}).(CertificateSpecPrivateKeyPtrOutput)
}

// RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
func (o CertificateSpecPrivateKeyOutput) RotationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecPrivateKey) *string { return v.RotationPolicy }).(pulumi.StringPtrOutput)
}

type CertificateSpecPrivateKeyPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecPrivateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecPrivateKey)(nil)).Elem()
}

func (o CertificateSpecPrivateKeyPtrOutput) ToCertificateSpecPrivateKeyPtrOutput() CertificateSpecPrivateKeyPtrOutput {
	return o
}

func (o CertificateSpecPrivateKeyPtrOutput) ToCertificateSpecPrivateKeyPtrOutputWithContext(ctx context.Context) CertificateSpecPrivateKeyPtrOutput {
	return o
}

func (o CertificateSpecPrivateKeyPtrOutput) Elem() CertificateSpecPrivateKeyOutput {
	return o.ApplyT(func(v *CertificateSpecPrivateKey) CertificateSpecPrivateKey { return *v }).(CertificateSpecPrivateKeyOutput)
}

// RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.
func (o CertificateSpecPrivateKeyPtrOutput) RotationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecPrivateKey) *string {
		if v == nil {
			return nil
		}
		return v.RotationPolicy
	}).(pulumi.StringPtrOutput)
}

// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
type CertificateSpecSubject struct {
	// Countries to be used on the Certificate.
	Countries []string `pulumi:"countries"`
	// Cities to be used on the Certificate.
	Localities []string `pulumi:"localities"`
	// Organizational Units to be used on the Certificate.
	OrganizationalUnits []string `pulumi:"organizationalUnits"`
	// Postal codes to be used on the Certificate.
	PostalCodes []string `pulumi:"postalCodes"`
	// State/Provinces to be used on the Certificate.
	Provinces []string `pulumi:"provinces"`
	// Serial number to be used on the Certificate.
	SerialNumber *string `pulumi:"serialNumber"`
	// Street addresses to be used on the Certificate.
	StreetAddresses []string `pulumi:"streetAddresses"`
}

// CertificateSpecSubjectInput is an input type that accepts CertificateSpecSubjectArgs and CertificateSpecSubjectOutput values.
// You can construct a concrete instance of `CertificateSpecSubjectInput` via:
//
//          CertificateSpecSubjectArgs{...}
type CertificateSpecSubjectInput interface {
	pulumi.Input

	ToCertificateSpecSubjectOutput() CertificateSpecSubjectOutput
	ToCertificateSpecSubjectOutputWithContext(context.Context) CertificateSpecSubjectOutput
}

// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
type CertificateSpecSubjectArgs struct {
	// Countries to be used on the Certificate.
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// Cities to be used on the Certificate.
	Localities pulumi.StringArrayInput `pulumi:"localities"`
	// Organizational Units to be used on the Certificate.
	OrganizationalUnits pulumi.StringArrayInput `pulumi:"organizationalUnits"`
	// Postal codes to be used on the Certificate.
	PostalCodes pulumi.StringArrayInput `pulumi:"postalCodes"`
	// State/Provinces to be used on the Certificate.
	Provinces pulumi.StringArrayInput `pulumi:"provinces"`
	// Serial number to be used on the Certificate.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Street addresses to be used on the Certificate.
	StreetAddresses pulumi.StringArrayInput `pulumi:"streetAddresses"`
}

func (CertificateSpecSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecSubject)(nil)).Elem()
}

func (i CertificateSpecSubjectArgs) ToCertificateSpecSubjectOutput() CertificateSpecSubjectOutput {
	return i.ToCertificateSpecSubjectOutputWithContext(context.Background())
}

func (i CertificateSpecSubjectArgs) ToCertificateSpecSubjectOutputWithContext(ctx context.Context) CertificateSpecSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecSubjectOutput)
}

func (i CertificateSpecSubjectArgs) ToCertificateSpecSubjectPtrOutput() CertificateSpecSubjectPtrOutput {
	return i.ToCertificateSpecSubjectPtrOutputWithContext(context.Background())
}

func (i CertificateSpecSubjectArgs) ToCertificateSpecSubjectPtrOutputWithContext(ctx context.Context) CertificateSpecSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecSubjectOutput).ToCertificateSpecSubjectPtrOutputWithContext(ctx)
}

// CertificateSpecSubjectPtrInput is an input type that accepts CertificateSpecSubjectArgs, CertificateSpecSubjectPtr and CertificateSpecSubjectPtrOutput values.
// You can construct a concrete instance of `CertificateSpecSubjectPtrInput` via:
//
//          CertificateSpecSubjectArgs{...}
//
//  or:
//
//          nil
type CertificateSpecSubjectPtrInput interface {
	pulumi.Input

	ToCertificateSpecSubjectPtrOutput() CertificateSpecSubjectPtrOutput
	ToCertificateSpecSubjectPtrOutputWithContext(context.Context) CertificateSpecSubjectPtrOutput
}

type certificateSpecSubjectPtrType CertificateSpecSubjectArgs

func CertificateSpecSubjectPtr(v *CertificateSpecSubjectArgs) CertificateSpecSubjectPtrInput {
	return (*certificateSpecSubjectPtrType)(v)
}

func (*certificateSpecSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecSubject)(nil)).Elem()
}

func (i *certificateSpecSubjectPtrType) ToCertificateSpecSubjectPtrOutput() CertificateSpecSubjectPtrOutput {
	return i.ToCertificateSpecSubjectPtrOutputWithContext(context.Background())
}

func (i *certificateSpecSubjectPtrType) ToCertificateSpecSubjectPtrOutputWithContext(ctx context.Context) CertificateSpecSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSpecSubjectPtrOutput)
}

// Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
type CertificateSpecSubjectOutput struct{ *pulumi.OutputState }

func (CertificateSpecSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSpecSubject)(nil)).Elem()
}

func (o CertificateSpecSubjectOutput) ToCertificateSpecSubjectOutput() CertificateSpecSubjectOutput {
	return o
}

func (o CertificateSpecSubjectOutput) ToCertificateSpecSubjectOutputWithContext(ctx context.Context) CertificateSpecSubjectOutput {
	return o
}

func (o CertificateSpecSubjectOutput) ToCertificateSpecSubjectPtrOutput() CertificateSpecSubjectPtrOutput {
	return o.ToCertificateSpecSubjectPtrOutputWithContext(context.Background())
}

func (o CertificateSpecSubjectOutput) ToCertificateSpecSubjectPtrOutputWithContext(ctx context.Context) CertificateSpecSubjectPtrOutput {
	return o.ApplyT(func(v CertificateSpecSubject) *CertificateSpecSubject {
		return &v
	}).(CertificateSpecSubjectPtrOutput)
}

// Countries to be used on the Certificate.
func (o CertificateSpecSubjectOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// Cities to be used on the Certificate.
func (o CertificateSpecSubjectOutput) Localities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.Localities }).(pulumi.StringArrayOutput)
}

// Organizational Units to be used on the Certificate.
func (o CertificateSpecSubjectOutput) OrganizationalUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.OrganizationalUnits }).(pulumi.StringArrayOutput)
}

// Postal codes to be used on the Certificate.
func (o CertificateSpecSubjectOutput) PostalCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.PostalCodes }).(pulumi.StringArrayOutput)
}

// State/Provinces to be used on the Certificate.
func (o CertificateSpecSubjectOutput) Provinces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.Provinces }).(pulumi.StringArrayOutput)
}

// Serial number to be used on the Certificate.
func (o CertificateSpecSubjectOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSpecSubject) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Street addresses to be used on the Certificate.
func (o CertificateSpecSubjectOutput) StreetAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateSpecSubject) []string { return v.StreetAddresses }).(pulumi.StringArrayOutput)
}

type CertificateSpecSubjectPtrOutput struct{ *pulumi.OutputState }

func (CertificateSpecSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateSpecSubject)(nil)).Elem()
}

func (o CertificateSpecSubjectPtrOutput) ToCertificateSpecSubjectPtrOutput() CertificateSpecSubjectPtrOutput {
	return o
}

func (o CertificateSpecSubjectPtrOutput) ToCertificateSpecSubjectPtrOutputWithContext(ctx context.Context) CertificateSpecSubjectPtrOutput {
	return o
}

func (o CertificateSpecSubjectPtrOutput) Elem() CertificateSpecSubjectOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) CertificateSpecSubject { return *v }).(CertificateSpecSubjectOutput)
}

// Countries to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.Countries
	}).(pulumi.StringArrayOutput)
}

// Cities to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) Localities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.Localities
	}).(pulumi.StringArrayOutput)
}

// Organizational Units to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) OrganizationalUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnits
	}).(pulumi.StringArrayOutput)
}

// Postal codes to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) PostalCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.PostalCodes
	}).(pulumi.StringArrayOutput)
}

// State/Provinces to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) Provinces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.Provinces
	}).(pulumi.StringArrayOutput)
}

// Serial number to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Street addresses to be used on the Certificate.
func (o CertificateSpecSubjectPtrOutput) StreetAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateSpecSubject) []string {
		if v == nil {
			return nil
		}
		return v.StreetAddresses
	}).(pulumi.StringArrayOutput)
}

// Status of the Certificate. This is set and managed automatically.
type CertificateStatus struct {
	// List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
	Conditions []CertificateStatusConditions `pulumi:"conditions"`
	// LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
	LastFailureTime *string `pulumi:"lastFailureTime"`
	// The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
	NextPrivateKeySecretName *string `pulumi:"nextPrivateKeySecretName"`
	// The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
	NotAfter *string `pulumi:"notAfter"`
	// The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
	NotBefore *string `pulumi:"notBefore"`
	// RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
	RenewalTime *string `pulumi:"renewalTime"`
	// The current 'revision' of the certificate as issued.
	//  When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field.
	//  Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate.
	//  Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.
	Revision *int `pulumi:"revision"`
}

// CertificateStatusInput is an input type that accepts CertificateStatusArgs and CertificateStatusOutput values.
// You can construct a concrete instance of `CertificateStatusInput` via:
//
//          CertificateStatusArgs{...}
type CertificateStatusInput interface {
	pulumi.Input

	ToCertificateStatusOutput() CertificateStatusOutput
	ToCertificateStatusOutputWithContext(context.Context) CertificateStatusOutput
}

// Status of the Certificate. This is set and managed automatically.
type CertificateStatusArgs struct {
	// List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
	Conditions CertificateStatusConditionsArrayInput `pulumi:"conditions"`
	// LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
	LastFailureTime pulumi.StringPtrInput `pulumi:"lastFailureTime"`
	// The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
	NextPrivateKeySecretName pulumi.StringPtrInput `pulumi:"nextPrivateKeySecretName"`
	// The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
	NotAfter pulumi.StringPtrInput `pulumi:"notAfter"`
	// The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
	NotBefore pulumi.StringPtrInput `pulumi:"notBefore"`
	// RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
	RenewalTime pulumi.StringPtrInput `pulumi:"renewalTime"`
	// The current 'revision' of the certificate as issued.
	//  When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field.
	//  Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate.
	//  Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.
	Revision pulumi.IntPtrInput `pulumi:"revision"`
}

func (CertificateStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStatus)(nil)).Elem()
}

func (i CertificateStatusArgs) ToCertificateStatusOutput() CertificateStatusOutput {
	return i.ToCertificateStatusOutputWithContext(context.Background())
}

func (i CertificateStatusArgs) ToCertificateStatusOutputWithContext(ctx context.Context) CertificateStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateStatusOutput)
}

func (i CertificateStatusArgs) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return i.ToCertificateStatusPtrOutputWithContext(context.Background())
}

func (i CertificateStatusArgs) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateStatusOutput).ToCertificateStatusPtrOutputWithContext(ctx)
}

// CertificateStatusPtrInput is an input type that accepts CertificateStatusArgs, CertificateStatusPtr and CertificateStatusPtrOutput values.
// You can construct a concrete instance of `CertificateStatusPtrInput` via:
//
//          CertificateStatusArgs{...}
//
//  or:
//
//          nil
type CertificateStatusPtrInput interface {
	pulumi.Input

	ToCertificateStatusPtrOutput() CertificateStatusPtrOutput
	ToCertificateStatusPtrOutputWithContext(context.Context) CertificateStatusPtrOutput
}

type certificateStatusPtrType CertificateStatusArgs

func CertificateStatusPtr(v *CertificateStatusArgs) CertificateStatusPtrInput {
	return (*certificateStatusPtrType)(v)
}

func (*certificateStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateStatus)(nil)).Elem()
}

func (i *certificateStatusPtrType) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return i.ToCertificateStatusPtrOutputWithContext(context.Background())
}

func (i *certificateStatusPtrType) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateStatusPtrOutput)
}

// Status of the Certificate. This is set and managed automatically.
type CertificateStatusOutput struct{ *pulumi.OutputState }

func (CertificateStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStatus)(nil)).Elem()
}

func (o CertificateStatusOutput) ToCertificateStatusOutput() CertificateStatusOutput {
	return o
}

func (o CertificateStatusOutput) ToCertificateStatusOutputWithContext(ctx context.Context) CertificateStatusOutput {
	return o
}

func (o CertificateStatusOutput) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return o.ToCertificateStatusPtrOutputWithContext(context.Background())
}

func (o CertificateStatusOutput) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *CertificateStatus {
		return &v
	}).(CertificateStatusPtrOutput)
}

// List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
func (o CertificateStatusOutput) Conditions() CertificateStatusConditionsArrayOutput {
	return o.ApplyT(func(v CertificateStatus) []CertificateStatusConditions { return v.Conditions }).(CertificateStatusConditionsArrayOutput)
}

// LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
func (o CertificateStatusOutput) LastFailureTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *string { return v.LastFailureTime }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
func (o CertificateStatusOutput) NextPrivateKeySecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *string { return v.NextPrivateKeySecretName }).(pulumi.StringPtrOutput)
}

// The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
func (o CertificateStatusOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

// The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
func (o CertificateStatusOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *string { return v.NotBefore }).(pulumi.StringPtrOutput)
}

// RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
func (o CertificateStatusOutput) RenewalTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *string { return v.RenewalTime }).(pulumi.StringPtrOutput)
}

// The current 'revision' of the certificate as issued.
//  When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field.
//  Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate.
//  Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.
func (o CertificateStatusOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateStatus) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

type CertificateStatusPtrOutput struct{ *pulumi.OutputState }

func (CertificateStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateStatus)(nil)).Elem()
}

func (o CertificateStatusPtrOutput) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return o
}

func (o CertificateStatusPtrOutput) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return o
}

func (o CertificateStatusPtrOutput) Elem() CertificateStatusOutput {
	return o.ApplyT(func(v *CertificateStatus) CertificateStatus { return *v }).(CertificateStatusOutput)
}

// List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.
func (o CertificateStatusPtrOutput) Conditions() CertificateStatusConditionsArrayOutput {
	return o.ApplyT(func(v *CertificateStatus) []CertificateStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CertificateStatusConditionsArrayOutput)
}

// LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.
func (o CertificateStatusPtrOutput) LastFailureTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastFailureTime
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.
func (o CertificateStatusPtrOutput) NextPrivateKeySecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *string {
		if v == nil {
			return nil
		}
		return v.NextPrivateKeySecretName
	}).(pulumi.StringPtrOutput)
}

// The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.
func (o CertificateStatusPtrOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *string {
		if v == nil {
			return nil
		}
		return v.NotAfter
	}).(pulumi.StringPtrOutput)
}

// The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.
func (o CertificateStatusPtrOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *string {
		if v == nil {
			return nil
		}
		return v.NotBefore
	}).(pulumi.StringPtrOutput)
}

// RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.
func (o CertificateStatusPtrOutput) RenewalTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *string {
		if v == nil {
			return nil
		}
		return v.RenewalTime
	}).(pulumi.StringPtrOutput)
}

// The current 'revision' of the certificate as issued.
//  When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field.
//  Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate.
//  Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.
func (o CertificateStatusPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateStatus) *int {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.IntPtrOutput)
}

// CertificateCondition contains condition information for an Certificate.
type CertificateStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready', `Issuing`).
	Type string `pulumi:"type"`
}

// CertificateStatusConditionsInput is an input type that accepts CertificateStatusConditionsArgs and CertificateStatusConditionsOutput values.
// You can construct a concrete instance of `CertificateStatusConditionsInput` via:
//
//          CertificateStatusConditionsArgs{...}
type CertificateStatusConditionsInput interface {
	pulumi.Input

	ToCertificateStatusConditionsOutput() CertificateStatusConditionsOutput
	ToCertificateStatusConditionsOutputWithContext(context.Context) CertificateStatusConditionsOutput
}

// CertificateCondition contains condition information for an Certificate.
type CertificateStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready', `Issuing`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (CertificateStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStatusConditions)(nil)).Elem()
}

func (i CertificateStatusConditionsArgs) ToCertificateStatusConditionsOutput() CertificateStatusConditionsOutput {
	return i.ToCertificateStatusConditionsOutputWithContext(context.Background())
}

func (i CertificateStatusConditionsArgs) ToCertificateStatusConditionsOutputWithContext(ctx context.Context) CertificateStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateStatusConditionsOutput)
}

// CertificateStatusConditionsArrayInput is an input type that accepts CertificateStatusConditionsArray and CertificateStatusConditionsArrayOutput values.
// You can construct a concrete instance of `CertificateStatusConditionsArrayInput` via:
//
//          CertificateStatusConditionsArray{ CertificateStatusConditionsArgs{...} }
type CertificateStatusConditionsArrayInput interface {
	pulumi.Input

	ToCertificateStatusConditionsArrayOutput() CertificateStatusConditionsArrayOutput
	ToCertificateStatusConditionsArrayOutputWithContext(context.Context) CertificateStatusConditionsArrayOutput
}

type CertificateStatusConditionsArray []CertificateStatusConditionsInput

func (CertificateStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateStatusConditions)(nil)).Elem()
}

func (i CertificateStatusConditionsArray) ToCertificateStatusConditionsArrayOutput() CertificateStatusConditionsArrayOutput {
	return i.ToCertificateStatusConditionsArrayOutputWithContext(context.Background())
}

func (i CertificateStatusConditionsArray) ToCertificateStatusConditionsArrayOutputWithContext(ctx context.Context) CertificateStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateStatusConditionsArrayOutput)
}

// CertificateCondition contains condition information for an Certificate.
type CertificateStatusConditionsOutput struct{ *pulumi.OutputState }

func (CertificateStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStatusConditions)(nil)).Elem()
}

func (o CertificateStatusConditionsOutput) ToCertificateStatusConditionsOutput() CertificateStatusConditionsOutput {
	return o
}

func (o CertificateStatusConditionsOutput) ToCertificateStatusConditionsOutputWithContext(ctx context.Context) CertificateStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o CertificateStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o CertificateStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o CertificateStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o CertificateStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready', `Issuing`).
func (o CertificateStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type CertificateStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (CertificateStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateStatusConditions)(nil)).Elem()
}

func (o CertificateStatusConditionsArrayOutput) ToCertificateStatusConditionsArrayOutput() CertificateStatusConditionsArrayOutput {
	return o
}

func (o CertificateStatusConditionsArrayOutput) ToCertificateStatusConditionsArrayOutputWithContext(ctx context.Context) CertificateStatusConditionsArrayOutput {
	return o
}

func (o CertificateStatusConditionsArrayOutput) Index(i pulumi.IntInput) CertificateStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateStatusConditions {
		return vs[0].([]CertificateStatusConditions)[vs[1].(int)]
	}).(CertificateStatusConditionsOutput)
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec *ClusterIssuerSpec `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status *ClusterIssuerStatus `pulumi:"status"`
}

// ClusterIssuerTypeInput is an input type that accepts ClusterIssuerTypeArgs and ClusterIssuerTypeOutput values.
// You can construct a concrete instance of `ClusterIssuerTypeInput` via:
//
//          ClusterIssuerTypeArgs{...}
type ClusterIssuerTypeInput interface {
	pulumi.Input

	ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput
	ToClusterIssuerTypeOutputWithContext(context.Context) ClusterIssuerTypeOutput
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the ClusterIssuer resource.
	Spec ClusterIssuerSpecPtrInput `pulumi:"spec"`
	// Status of the ClusterIssuer. This is set and managed automatically.
	Status ClusterIssuerStatusPtrInput `pulumi:"status"`
}

func (ClusterIssuerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerType)(nil)).Elem()
}

func (i ClusterIssuerTypeArgs) ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput {
	return i.ToClusterIssuerTypeOutputWithContext(context.Background())
}

func (i ClusterIssuerTypeArgs) ToClusterIssuerTypeOutputWithContext(ctx context.Context) ClusterIssuerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerTypeOutput)
}

// A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.
type ClusterIssuerTypeOutput struct{ *pulumi.OutputState }

func (ClusterIssuerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerType)(nil)).Elem()
}

func (o ClusterIssuerTypeOutput) ToClusterIssuerTypeOutput() ClusterIssuerTypeOutput {
	return o
}

func (o ClusterIssuerTypeOutput) ToClusterIssuerTypeOutputWithContext(ctx context.Context) ClusterIssuerTypeOutput {
	return o
}

func (o ClusterIssuerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ClusterIssuerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the ClusterIssuer resource.
func (o ClusterIssuerTypeOutput) Spec() ClusterIssuerSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerType) *ClusterIssuerSpec { return v.Spec }).(ClusterIssuerSpecPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
func (o ClusterIssuerTypeOutput) Status() ClusterIssuerStatusPtrOutput {
	return o.ApplyT(func(v ClusterIssuerType) *ClusterIssuerStatus { return v.Status }).(ClusterIssuerStatusPtrOutput)
}

type ClusterIssuerMetadata struct {
}

// ClusterIssuerMetadataInput is an input type that accepts ClusterIssuerMetadataArgs and ClusterIssuerMetadataOutput values.
// You can construct a concrete instance of `ClusterIssuerMetadataInput` via:
//
//          ClusterIssuerMetadataArgs{...}
type ClusterIssuerMetadataInput interface {
	pulumi.Input

	ToClusterIssuerMetadataOutput() ClusterIssuerMetadataOutput
	ToClusterIssuerMetadataOutputWithContext(context.Context) ClusterIssuerMetadataOutput
}

type ClusterIssuerMetadataArgs struct {
}

func (ClusterIssuerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerMetadata)(nil)).Elem()
}

func (i ClusterIssuerMetadataArgs) ToClusterIssuerMetadataOutput() ClusterIssuerMetadataOutput {
	return i.ToClusterIssuerMetadataOutputWithContext(context.Background())
}

func (i ClusterIssuerMetadataArgs) ToClusterIssuerMetadataOutputWithContext(ctx context.Context) ClusterIssuerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerMetadataOutput)
}

type ClusterIssuerMetadataOutput struct{ *pulumi.OutputState }

func (ClusterIssuerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerMetadata)(nil)).Elem()
}

func (o ClusterIssuerMetadataOutput) ToClusterIssuerMetadataOutput() ClusterIssuerMetadataOutput {
	return o
}

func (o ClusterIssuerMetadataOutput) ToClusterIssuerMetadataOutputWithContext(ctx context.Context) ClusterIssuerMetadataOutput {
	return o
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpec struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme *ClusterIssuerSpecAcme `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca *ClusterIssuerSpecCa `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned *ClusterIssuerSpecSelfSigned `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault *ClusterIssuerSpecVault `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi *ClusterIssuerSpecVenafi `pulumi:"venafi"`
}

// ClusterIssuerSpecInput is an input type that accepts ClusterIssuerSpecArgs and ClusterIssuerSpecOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecInput` via:
//
//          ClusterIssuerSpecArgs{...}
type ClusterIssuerSpecInput interface {
	pulumi.Input

	ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput
	ToClusterIssuerSpecOutputWithContext(context.Context) ClusterIssuerSpecOutput
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpecArgs struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme ClusterIssuerSpecAcmePtrInput `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca ClusterIssuerSpecCaPtrInput `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned ClusterIssuerSpecSelfSignedPtrInput `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault ClusterIssuerSpecVaultPtrInput `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi ClusterIssuerSpecVenafiPtrInput `pulumi:"venafi"`
}

func (ClusterIssuerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpec)(nil)).Elem()
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput {
	return i.ToClusterIssuerSpecOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecOutput)
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return i.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecArgs) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecOutput).ToClusterIssuerSpecPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecPtrInput is an input type that accepts ClusterIssuerSpecArgs, ClusterIssuerSpecPtr and ClusterIssuerSpecPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecPtrInput` via:
//
//          ClusterIssuerSpecArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput
	ToClusterIssuerSpecPtrOutputWithContext(context.Context) ClusterIssuerSpecPtrOutput
}

type clusterIssuerSpecPtrType ClusterIssuerSpecArgs

func ClusterIssuerSpecPtr(v *ClusterIssuerSpecArgs) ClusterIssuerSpecPtrInput {
	return (*clusterIssuerSpecPtrType)(v)
}

func (*clusterIssuerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpec)(nil)).Elem()
}

func (i *clusterIssuerSpecPtrType) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return i.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecPtrType) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecPtrOutput)
}

// Desired state of the ClusterIssuer resource.
type ClusterIssuerSpecOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecOutput() ClusterIssuerSpecOutput {
	return o
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecOutput {
	return o
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return o.ToClusterIssuerSpecPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecOutput) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpec {
		return &v
	}).(ClusterIssuerSpecPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o ClusterIssuerSpecOutput) Acme() ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpecAcme { return v.Acme }).(ClusterIssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o ClusterIssuerSpecOutput) Ca() ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpecCa { return v.Ca }).(ClusterIssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o ClusterIssuerSpecOutput) SelfSigned() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpecSelfSigned { return v.SelfSigned }).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o ClusterIssuerSpecOutput) Vault() ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpecVault { return v.Vault }).(ClusterIssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o ClusterIssuerSpecOutput) Venafi() ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpec) *ClusterIssuerSpecVenafi { return v.Venafi }).(ClusterIssuerSpecVenafiPtrOutput)
}

type ClusterIssuerSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecPtrOutput) ToClusterIssuerSpecPtrOutput() ClusterIssuerSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecPtrOutput) ToClusterIssuerSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecPtrOutput) Elem() ClusterIssuerSpecOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) ClusterIssuerSpec { return *v }).(ClusterIssuerSpecOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o ClusterIssuerSpecPtrOutput) Acme() ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) *ClusterIssuerSpecAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(ClusterIssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o ClusterIssuerSpecPtrOutput) Ca() ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) *ClusterIssuerSpecCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(ClusterIssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o ClusterIssuerSpecPtrOutput) SelfSigned() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) *ClusterIssuerSpecSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o ClusterIssuerSpecPtrOutput) Vault() ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) *ClusterIssuerSpecVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(ClusterIssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o ClusterIssuerSpecPtrOutput) Venafi() ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpec) *ClusterIssuerSpecVenafi {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(ClusterIssuerSpecVenafiPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcme struct {
	// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
	DisableAccountKeyGeneration *bool `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email *string `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding *ClusterIssuerSpecAcmeExternalAccountBinding `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
	PreferredChain *string `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef ClusterIssuerSpecAcmePrivateKeySecretRef `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server string `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify *bool `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers []ClusterIssuerSpecAcmeSolvers `pulumi:"solvers"`
}

// ClusterIssuerSpecAcmeInput is an input type that accepts ClusterIssuerSpecAcmeArgs and ClusterIssuerSpecAcmeOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeInput` via:
//
//          ClusterIssuerSpecAcmeArgs{...}
type ClusterIssuerSpecAcmeInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput
	ToClusterIssuerSpecAcmeOutputWithContext(context.Context) ClusterIssuerSpecAcmeOutput
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcmeArgs struct {
	// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
	DisableAccountKeyGeneration pulumi.BoolPtrInput `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding ClusterIssuerSpecAcmeExternalAccountBindingPtrInput `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
	PreferredChain pulumi.StringPtrInput `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef ClusterIssuerSpecAcmePrivateKeySecretRefInput `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server pulumi.StringInput `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify pulumi.BoolPtrInput `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers ClusterIssuerSpecAcmeSolversArrayInput `pulumi:"solvers"`
}

func (ClusterIssuerSpecAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcme)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput {
	return i.ToClusterIssuerSpecAcmeOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmeOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeOutput)
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return i.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeArgs) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeOutput).ToClusterIssuerSpecAcmePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmePtrInput is an input type that accepts ClusterIssuerSpecAcmeArgs, ClusterIssuerSpecAcmePtr and ClusterIssuerSpecAcmePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePtrInput` via:
//
//          ClusterIssuerSpecAcmeArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput
	ToClusterIssuerSpecAcmePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmePtrOutput
}

type clusterIssuerSpecAcmePtrType ClusterIssuerSpecAcmeArgs

func ClusterIssuerSpecAcmePtr(v *ClusterIssuerSpecAcmeArgs) ClusterIssuerSpecAcmePtrInput {
	return (*clusterIssuerSpecAcmePtrType)(v)
}

func (*clusterIssuerSpecAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcme)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmePtrType) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return i.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmePtrType) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type ClusterIssuerSpecAcmeOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcme)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmeOutput() ClusterIssuerSpecAcmeOutput {
	return o
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmeOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeOutput {
	return o
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return o.ToClusterIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeOutput) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *ClusterIssuerSpecAcme {
		return &v
	}).(ClusterIssuerSpecAcmePtrOutput)
}

// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
func (o ClusterIssuerSpecAcmeOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *bool { return v.DisableAccountKeyGeneration }).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o ClusterIssuerSpecAcmeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o ClusterIssuerSpecAcmeOutput) ExternalAccountBinding() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmeExternalAccountBinding {
		return v.ExternalAccountBinding
	}).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
func (o ClusterIssuerSpecAcmeOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *string { return v.PreferredChain }).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o ClusterIssuerSpecAcmeOutput) PrivateKeySecretRef() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) ClusterIssuerSpecAcmePrivateKeySecretRef { return v.PrivateKeySecretRef }).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o ClusterIssuerSpecAcmeOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) string { return v.Server }).(pulumi.StringOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o ClusterIssuerSpecAcmeOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) *bool { return v.SkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o ClusterIssuerSpecAcmeOutput) Solvers() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcme) []ClusterIssuerSpecAcmeSolvers { return v.Solvers }).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

type ClusterIssuerSpecAcmePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcme)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePtrOutput) ToClusterIssuerSpecAcmePtrOutput() ClusterIssuerSpecAcmePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePtrOutput) ToClusterIssuerSpecAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePtrOutput) Elem() ClusterIssuerSpecAcmeOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) ClusterIssuerSpecAcme { return *v }).(ClusterIssuerSpecAcmeOutput)
}

// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
func (o ClusterIssuerSpecAcmePtrOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.DisableAccountKeyGeneration
	}).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o ClusterIssuerSpecAcmePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o ClusterIssuerSpecAcmePtrOutput) ExternalAccountBinding() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmeExternalAccountBinding {
		if v == nil {
			return nil
		}
		return v.ExternalAccountBinding
	}).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
func (o ClusterIssuerSpecAcmePtrOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.PreferredChain
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o ClusterIssuerSpecAcmePtrOutput) PrivateKeySecretRef() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *ClusterIssuerSpecAcmePrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretRef
	}).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o ClusterIssuerSpecAcmePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o ClusterIssuerSpecAcmePtrOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.SkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o ClusterIssuerSpecAcmePtrOutput) Solvers() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcme) []ClusterIssuerSpecAcmeSolvers {
		if v == nil {
			return nil
		}
		return v.Solvers
	}).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBinding struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID string `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef `pulumi:"keySecretRef"`
}

// ClusterIssuerSpecAcmeExternalAccountBindingInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingArgs and ClusterIssuerSpecAcmeExternalAccountBindingOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingArgs{...}
type ClusterIssuerSpecAcmeExternalAccountBindingInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBindingArgs struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID pulumi.StringInput `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput `pulumi:"keySecretRef"`
}

func (ClusterIssuerSpecAcmeExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingOutput)
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingArgs) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingOutput).ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeExternalAccountBindingPtrInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingArgs, ClusterIssuerSpecAcmeExternalAccountBindingPtr and ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingPtrInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput
}

type clusterIssuerSpecAcmeExternalAccountBindingPtrType ClusterIssuerSpecAcmeExternalAccountBindingArgs

func ClusterIssuerSpecAcmeExternalAccountBindingPtr(v *ClusterIssuerSpecAcmeExternalAccountBindingArgs) ClusterIssuerSpecAcmeExternalAccountBindingPtrInput {
	return (*clusterIssuerSpecAcmeExternalAccountBindingPtrType)(v)
}

func (*clusterIssuerSpecAcmeExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type ClusterIssuerSpecAcmeExternalAccountBindingOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingOutput() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBinding) *ClusterIssuerSpecAcmeExternalAccountBinding {
		return &v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBinding) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBinding) string { return v.KeyID }).(pulumi.StringOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o ClusterIssuerSpecAcmeExternalAccountBindingOutput) KeySecretRef() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBinding) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return v.KeySecretRef
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

type ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) Elem() ClusterIssuerSpecAcmeExternalAccountBindingOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBinding) ClusterIssuerSpecAcmeExternalAccountBinding {
		return *v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyID
	}).(pulumi.StringPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput) KeySecretRef() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBinding) *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.KeySecretRef
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs and ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput).ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs, ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtr and ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs

func ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtr(v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput {
	return (*clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmePrivateKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmePrivateKeySecretRefArgs and ClusterIssuerSpecAcmePrivateKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePrivateKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmePrivateKeySecretRefArgs{...}
type ClusterIssuerSpecAcmePrivateKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput
	ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput).ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmePrivateKeySecretRefArgs, ClusterIssuerSpecAcmePrivateKeySecretRefPtr and ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmePrivateKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmePrivateKeySecretRefPtrType ClusterIssuerSpecAcmePrivateKeySecretRefArgs

func ClusterIssuerSpecAcmePrivateKeySecretRefPtr(v *ClusterIssuerSpecAcmePrivateKeySecretRefArgs) ClusterIssuerSpecAcmePrivateKeySecretRefPtrInput {
	return (*clusterIssuerSpecAcmePrivateKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmePrivateKeySecretRefPtrType) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type ClusterIssuerSpecAcmePrivateKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefOutput() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmePrivateKeySecretRef) *ClusterIssuerSpecAcmePrivateKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmePrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmePrivateKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmePrivateKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput() ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) ToClusterIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmePrivateKeySecretRef) ClusterIssuerSpecAcmePrivateKeySecretRef { return *v }).(ClusterIssuerSpecAcmePrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolvers struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 *ClusterIssuerSpecAcmeSolversDns01 `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 *ClusterIssuerSpecAcmeSolversHttp01 `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector *ClusterIssuerSpecAcmeSolversSelector `pulumi:"selector"`
}

// ClusterIssuerSpecAcmeSolversInput is an input type that accepts ClusterIssuerSpecAcmeSolversArgs and ClusterIssuerSpecAcmeSolversOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversInput` via:
//
//          ClusterIssuerSpecAcmeSolversArgs{...}
type ClusterIssuerSpecAcmeSolversInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput
	ToClusterIssuerSpecAcmeSolversOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversOutput
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolversArgs struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 ClusterIssuerSpecAcmeSolversDns01PtrInput `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 ClusterIssuerSpecAcmeSolversHttp01PtrInput `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector ClusterIssuerSpecAcmeSolversSelectorPtrInput `pulumi:"selector"`
}

func (ClusterIssuerSpecAcmeSolversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversArgs) ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput {
	return i.ToClusterIssuerSpecAcmeSolversOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversArgs) ToClusterIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversOutput)
}

// ClusterIssuerSpecAcmeSolversArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversArray and ClusterIssuerSpecAcmeSolversArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversArray{ ClusterIssuerSpecAcmeSolversArgs{...} }
type ClusterIssuerSpecAcmeSolversArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput
	ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversArrayOutput
}

type ClusterIssuerSpecAcmeSolversArray []ClusterIssuerSpecAcmeSolversInput

func (ClusterIssuerSpecAcmeSolversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversArray) ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversArray) ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversArrayOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type ClusterIssuerSpecAcmeSolversOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversOutput) ToClusterIssuerSpecAcmeSolversOutput() ClusterIssuerSpecAcmeSolversOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversOutput) ToClusterIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversOutput {
	return o
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
func (o ClusterIssuerSpecAcmeSolversOutput) Dns01() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversDns01 { return v.Dns01 }).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
func (o ClusterIssuerSpecAcmeSolversOutput) Http01() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversHttp01 { return v.Http01 }).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
func (o ClusterIssuerSpecAcmeSolversOutput) Selector() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolvers) *ClusterIssuerSpecAcmeSolversSelector { return v.Selector }).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}

type ClusterIssuerSpecAcmeSolversArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) ToClusterIssuerSpecAcmeSolversArrayOutput() ClusterIssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) ToClusterIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolvers {
		return vs[0].([]ClusterIssuerSpecAcmeSolvers)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01 struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns *ClusterIssuerSpecAcmeSolversDns01Acmedns `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai *ClusterIssuerSpecAcmeSolversDns01Akamai `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns *ClusterIssuerSpecAcmeSolversDns01Azuredns `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns *ClusterIssuerSpecAcmeSolversDns01Clouddns `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare *ClusterIssuerSpecAcmeSolversDns01Cloudflare `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy *string `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean *ClusterIssuerSpecAcmeSolversDns01Digitalocean `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 *ClusterIssuerSpecAcmeSolversDns01Rfc2136 `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 *ClusterIssuerSpecAcmeSolversDns01Route53 `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook *ClusterIssuerSpecAcmeSolversDns01Webhook `pulumi:"webhook"`
}

// ClusterIssuerSpecAcmeSolversDns01Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Args and ClusterIssuerSpecAcmeSolversDns01Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Args{...}
type ClusterIssuerSpecAcmeSolversDns01Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output
	ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01Args struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy pulumi.StringPtrInput `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 ClusterIssuerSpecAcmeSolversDns01Route53PtrInput `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput `pulumi:"webhook"`
}

func (ClusterIssuerSpecAcmeSolversDns01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Args) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Output).ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Args, ClusterIssuerSpecAcmeSolversDns01Ptr and ClusterIssuerSpecAcmeSolversDns01PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01PtrType ClusterIssuerSpecAcmeSolversDns01Args

func ClusterIssuerSpecAcmeSolversDns01Ptr(v *ClusterIssuerSpecAcmeSolversDns01Args) ClusterIssuerSpecAcmeSolversDns01PtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01PtrType) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01PtrType) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type ClusterIssuerSpecAcmeSolversDns01Output struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01Output() ClusterIssuerSpecAcmeSolversDns01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Output) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01PtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Acmedns() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Acmedns { return v.Acmedns }).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Akamai() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Akamai { return v.Akamai }).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Azuredns() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Azuredns {
		return v.Azuredns
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Clouddns() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Clouddns {
		return v.Clouddns
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Cloudflare() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		return v.Cloudflare
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o ClusterIssuerSpecAcmeSolversDns01Output) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *string { return v.CnameStrategy }).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Digitalocean() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		return v.Digitalocean
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Rfc2136() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 { return v.Rfc2136 }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Route53() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Route53 { return v.Route53 }).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01Output) Webhook() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Webhook { return v.Webhook }).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01PtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) ToClusterIssuerSpecAcmeSolversDns01PtrOutput() ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) ToClusterIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Output {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) ClusterIssuerSpecAcmeSolversDns01 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Output)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Acmedns() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Acmedns {
		if v == nil {
			return nil
		}
		return v.Acmedns
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Akamai() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Akamai {
		if v == nil {
			return nil
		}
		return v.Akamai
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Azuredns() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Azuredns {
		if v == nil {
			return nil
		}
		return v.Azuredns
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Clouddns() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Clouddns {
		if v == nil {
			return nil
		}
		return v.Clouddns
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Cloudflare() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		if v == nil {
			return nil
		}
		return v.Cloudflare
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *string {
		if v == nil {
			return nil
		}
		return v.CnameStrategy
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Digitalocean() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		if v == nil {
			return nil
		}
		return v.Digitalocean
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Rfc2136() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 {
		if v == nil {
			return nil
		}
		return v.Rfc2136
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Route53() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Route53 {
		if v == nil {
			return nil
		}
		return v.Route53
	}).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o ClusterIssuerSpecAcmeSolversDns01PtrOutput) Webhook() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01) *ClusterIssuerSpecAcmeSolversDns01Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Acmedns struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef `pulumi:"accountSecretRef"`
	Host             string                                                   `pulumi:"host"`
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsArgs and ClusterIssuerSpecAcmeSolversDns01AcmednsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AcmednsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AcmednsArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput `pulumi:"accountSecretRef"`
	Host             pulumi.StringInput                                            `pulumi:"host"`
}

func (ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput).ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsArgs, ClusterIssuerSpecAcmeSolversDns01AcmednsPtr and ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AcmednsPtrType ClusterIssuerSpecAcmeSolversDns01AcmednsArgs

func ClusterIssuerSpecAcmeSolversDns01AcmednsPtr(v *ClusterIssuerSpecAcmeSolversDns01AcmednsArgs) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AcmednsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AcmednsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Acmedns) *ClusterIssuerSpecAcmeSolversDns01Acmedns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) AccountSecretRef() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Acmedns) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return v.AccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Acmedns) string { return v.Host }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AcmednsOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Acmedns) ClusterIssuerSpecAcmeSolversDns01Acmedns { return *v }).(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) AccountSecretRef() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Acmedns) *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Acmedns) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Akamai struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef  ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain string                                                      `pulumi:"serviceConsumerDomain"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AkamaiArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef  ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain pulumi.StringInput                                               `pulumi:"serviceConsumerDomain"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AkamaiPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AkamaiOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01Akamai {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) AccessTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return v.AccessTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ClientTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return v.ClientTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiOutput) ServiceConsumerDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Akamai) string { return v.ServiceConsumerDomain }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Akamai) ClusterIssuerSpecAcmeSolversDns01Akamai { return *v }).(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) AccessTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Akamai) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput) ServiceConsumerDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Akamai) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceConsumerDomain
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Azuredns struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID *string `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	Environment           *string                                                         `pulumi:"environment"`
	HostedZoneName        *string                                                         `pulumi:"hostedZoneName"`
	ResourceGroupName     string                                                          `pulumi:"resourceGroupName"`
	SubscriptionID        string                                                          `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID *string `pulumi:"tenantID"`
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsArgs and ClusterIssuerSpecAcmeSolversDns01AzurednsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AzurednsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AzurednsArgs struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
	Environment           pulumi.StringPtrInput                                                  `pulumi:"environment"`
	HostedZoneName        pulumi.StringPtrInput                                                  `pulumi:"hostedZoneName"`
	ResourceGroupName     pulumi.StringInput                                                     `pulumi:"resourceGroupName"`
	SubscriptionID        pulumi.StringInput                                                     `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput).ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsArgs, ClusterIssuerSpecAcmeSolversDns01AzurednsPtr and ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AzurednsPtrType ClusterIssuerSpecAcmeSolversDns01AzurednsArgs

func ClusterIssuerSpecAcmeSolversDns01AzurednsPtr(v *ClusterIssuerSpecAcmeSolversDns01AzurednsArgs) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AzurednsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01AzurednsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01Azuredns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) SubscriptionID() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) string { return v.SubscriptionID }).(pulumi.StringOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Azuredns) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AzurednsOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) ClusterIssuerSpecAcmeSolversDns01Azuredns {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) SubscriptionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionID
	}).(pulumi.StringPtrOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Clouddns struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName *string `pulumi:"hostedZoneName"`
	Project        string  `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef `pulumi:"serviceAccountSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs and ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs{...}
type ClusterIssuerSpecAcmeSolversDns01ClouddnsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	Project        pulumi.StringInput    `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput `pulumi:"serviceAccountSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput).ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs, ClusterIssuerSpecAcmeSolversDns01ClouddnsPtr and ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs

func ClusterIssuerSpecAcmeSolversDns01ClouddnsPtr(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsArgs) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01Clouddns {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Clouddns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Clouddns) string { return v.Project }).(pulumi.StringOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput) ServiceAccountSecretRef() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return v.ServiceAccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Clouddns) ClusterIssuerSpecAcmeSolversDns01Clouddns {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ServiceAccountSecretRef() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Clouddns) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Cloudflare struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email *string `pulumi:"email"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01CloudflareArgs struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareArgs, ClusterIssuerSpecAcmeSolversDns01CloudflarePtr and ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflarePtrType ClusterIssuerSpecAcmeSolversDns01CloudflareArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflarePtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareArgs) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01CloudflarePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflarePtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01CloudflareOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ApiKeySecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return v.ApiKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) ApiTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return v.ApiTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Cloudflare) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) ClusterIssuerSpecAcmeSolversDns01Cloudflare {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiKeySecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ApiKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiTokenSecretRef() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Cloudflare) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs, ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr and ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Digitalocean struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef `pulumi:"tokenSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs and ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput `pulumi:"tokenSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput).ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs, ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtr and ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs

func ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtr(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanArgs) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Digitalocean) *ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput) TokenSecretRef() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Digitalocean) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return v.TokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

type ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Digitalocean) ClusterIssuerSpecAcmeSolversDns01Digitalocean {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) TokenSecretRef() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Digitalocean) *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.TokenSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136 struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver string `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm *string `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName *string `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef `pulumi:"tsigSecretSecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136Args and ClusterIssuerSpecAcmeSolversDns01Rfc2136Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136Args{...}
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Args struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver pulumi.StringInput `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm pulumi.StringPtrInput `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName pulumi.StringPtrInput `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput `pulumi:"tsigSecretSecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output).ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136Args, ClusterIssuerSpecAcmeSolversDns01Rfc2136Ptr and ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType ClusterIssuerSpecAcmeSolversDns01Rfc2136Args

func ClusterIssuerSpecAcmeSolversDns01Rfc2136Ptr(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136Args) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136PtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136Output struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136Output() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) Nameserver() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) string { return v.Nameserver }).(pulumi.StringOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigAlgorithm }).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigKeyName }).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136Output) TsigSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return v.TsigSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Rfc2136Output {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) ClusterIssuerSpecAcmeSolversDns01Rfc2136 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Nameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return &v.Nameserver
	}).(pulumi.StringPtrOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigKeyName
	}).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigSecretSecretRef() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.TsigSecretSecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs and ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs, ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr and ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53 struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID *string `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID *string `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region string `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role *string `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// ClusterIssuerSpecAcmeSolversDns01Route53Input is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53Args and ClusterIssuerSpecAcmeSolversDns01Route53Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53Input` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53Args{...}
type ClusterIssuerSpecAcmeSolversDns01Route53Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output
	ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53Args struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID pulumi.StringPtrInput `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID pulumi.StringPtrInput `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (ClusterIssuerSpecAcmeSolversDns01Route53Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53Output)
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53Args) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53Output).ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Route53PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53Args, ClusterIssuerSpecAcmeSolversDns01Route53Ptr and ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Route53PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Route53PtrType ClusterIssuerSpecAcmeSolversDns01Route53Args

func ClusterIssuerSpecAcmeSolversDns01Route53Ptr(v *ClusterIssuerSpecAcmeSolversDns01Route53Args) ClusterIssuerSpecAcmeSolversDns01Route53PtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01Route53PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Route53PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53PtrType) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53PtrType) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Route53Output struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53Output() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.AccessKeyID }).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.HostedZoneID }).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53Output) SecretAccessKeySecretRef() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Route53Output {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) ClusterIssuerSpecAcmeSolversDns01Route53 { return *v }).(ClusterIssuerSpecAcmeSolversDns01Route53Output)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyID
	}).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneID
	}).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput) SecretAccessKeySecretRef() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs and ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput).ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs, ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr and ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs

func ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr(v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return *v
	}).(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01Webhook struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config map[string]interface{} `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName string `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName string `pulumi:"solverName"`
}

// ClusterIssuerSpecAcmeSolversDns01WebhookInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01WebhookArgs and ClusterIssuerSpecAcmeSolversDns01WebhookOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01WebhookInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01WebhookArgs{...}
type ClusterIssuerSpecAcmeSolversDns01WebhookInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput
	ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01WebhookArgs struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config pulumi.MapInput `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName pulumi.StringInput `pulumi:"solverName"`
}

func (ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput)
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput).ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversDns01WebhookArgs, ClusterIssuerSpecAcmeSolversDns01WebhookPtr and ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversDns01WebhookArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput
	ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput
}

type clusterIssuerSpecAcmeSolversDns01WebhookPtrType ClusterIssuerSpecAcmeSolversDns01WebhookArgs

func ClusterIssuerSpecAcmeSolversDns01WebhookPtr(v *ClusterIssuerSpecAcmeSolversDns01WebhookArgs) ClusterIssuerSpecAcmeSolversDns01WebhookPtrInput {
	return (*clusterIssuerSpecAcmeSolversDns01WebhookPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversDns01WebhookPtrType) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type ClusterIssuerSpecAcmeSolversDns01WebhookOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookOutput() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Webhook) *ClusterIssuerSpecAcmeSolversDns01Webhook {
		return &v
	}).(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Webhook) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Webhook) string { return v.GroupName }).(pulumi.StringOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookOutput) SolverName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversDns01Webhook) string { return v.SolverName }).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput() ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) ToClusterIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) Elem() ClusterIssuerSpecAcmeSolversDns01WebhookOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Webhook) ClusterIssuerSpecAcmeSolversDns01Webhook { return *v }).(ClusterIssuerSpecAcmeSolversDns01WebhookOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Webhook) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput) SolverName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.SolverName
	}).(pulumi.StringPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01 struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress *ClusterIssuerSpecAcmeSolversHttp01Ingress `pulumi:"ingress"`
}

// ClusterIssuerSpecAcmeSolversHttp01Input is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01Args and ClusterIssuerSpecAcmeSolversHttp01Output values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01Input` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01Args{...}
type ClusterIssuerSpecAcmeSolversHttp01Input interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output
	ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01Args struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput `pulumi:"ingress"`
}

func (ClusterIssuerSpecAcmeSolversHttp01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output {
	return i.ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01Output)
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01Args) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01Output).ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01PtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01Args, ClusterIssuerSpecAcmeSolversHttp01Ptr and ClusterIssuerSpecAcmeSolversHttp01PtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01PtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01Args{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01PtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01PtrType ClusterIssuerSpecAcmeSolversHttp01Args

func ClusterIssuerSpecAcmeSolversHttp01Ptr(v *ClusterIssuerSpecAcmeSolversHttp01Args) ClusterIssuerSpecAcmeSolversHttp01PtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01PtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01PtrType) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01PtrType) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type ClusterIssuerSpecAcmeSolversHttp01Output struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01Output() ClusterIssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01Output) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01 {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01PtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o ClusterIssuerSpecAcmeSolversHttp01Output) Ingress() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01Ingress {
		return v.Ingress
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01PtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ToClusterIssuerSpecAcmeSolversHttp01PtrOutput() ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) ToClusterIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01Output {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01) ClusterIssuerSpecAcmeSolversHttp01 { return *v }).(ClusterIssuerSpecAcmeSolversHttp01Output)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o ClusterIssuerSpecAcmeSolversHttp01PtrOutput) Ingress() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01) *ClusterIssuerSpecAcmeSolversHttp01Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01Ingress struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class *string `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name *string `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType *string `pulumi:"serviceType"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressArgs and ClusterIssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01IngressArgs struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPtrType ClusterIssuerSpecAcmeSolversHttp01IngressArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type ClusterIssuerSpecAcmeSolversHttp01IngressOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressOutput() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return v.IngressTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return v.PodTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o ClusterIssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) ClusterIssuerSpecAcmeSolversHttp01Ingress {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return o
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return o
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec `pulumi:"spec"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput `pulumi:"spec"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return v.Spec
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplate) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return o
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return o
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	// If specified, the pod's scheduling constraints
	Affinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName *string `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	// If specified, the pod's scheduling constraints
	Affinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName pulumi.StringPtrInput `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// If specified, the pod's scheduling constraints
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return v.Affinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return v.Tolerations
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

// If specified, the pod's scheduling constraints
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return v.NodeAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return v.PodAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector struct {
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs struct {
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return o
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//          ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int {
		return v.TolerationSeconds
	}).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// ClusterIssuerSpecAcmeSolversSelectorInput is an input type that accepts ClusterIssuerSpecAcmeSolversSelectorArgs and ClusterIssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversSelectorInput` via:
//
//          ClusterIssuerSpecAcmeSolversSelectorArgs{...}
type ClusterIssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput
	ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (ClusterIssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorOutput)
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversSelectorArgs) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorOutput).ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts ClusterIssuerSpecAcmeSolversSelectorArgs, ClusterIssuerSpecAcmeSolversSelectorPtr and ClusterIssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversSelectorPtrInput` via:
//
//          ClusterIssuerSpecAcmeSolversSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput
	ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput
}

type clusterIssuerSpecAcmeSolversSelectorPtrType ClusterIssuerSpecAcmeSolversSelectorArgs

func ClusterIssuerSpecAcmeSolversSelectorPtr(v *ClusterIssuerSpecAcmeSolversSelectorArgs) ClusterIssuerSpecAcmeSolversSelectorPtrInput {
	return (*clusterIssuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*clusterIssuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *clusterIssuerSpecAcmeSolversSelectorPtrType) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecAcmeSolversSelectorPtrType) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type ClusterIssuerSpecAcmeSolversSelectorOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorOutput() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecAcmeSolversSelectorOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversSelector) *ClusterIssuerSpecAcmeSolversSelector {
		return &v
	}).(ClusterIssuerSpecAcmeSolversSelectorPtrOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o ClusterIssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterIssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type ClusterIssuerSpecAcmeSolversSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutput() ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) ToClusterIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) Elem() ClusterIssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversSelector) ClusterIssuerSpecAcmeSolversSelector { return *v }).(ClusterIssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o ClusterIssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type ClusterIssuerSpecAcmeSolversSelectorMatchLabels struct {
}

// ClusterIssuerSpecAcmeSolversSelectorMatchLabelsInput is an input type that accepts ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs and ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecAcmeSolversSelectorMatchLabelsInput` via:
//
//          ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs{...}
type ClusterIssuerSpecAcmeSolversSelectorMatchLabelsInput interface {
	pulumi.Input

	ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput
	ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(context.Context) ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs struct {
}

func (ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelectorMatchLabels)(nil)).Elem()
}

func (i ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return i.ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecAcmeSolversSelectorMatchLabelsArgs) ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecAcmeSolversSelectorMatchLabels)(nil)).Elem()
}

func (o ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput() ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return o
}

func (o ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput) ToClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(ctx context.Context) ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return o
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName string `pulumi:"secretName"`
}

// ClusterIssuerSpecCaInput is an input type that accepts ClusterIssuerSpecCaArgs and ClusterIssuerSpecCaOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecCaInput` via:
//
//          ClusterIssuerSpecCaArgs{...}
type ClusterIssuerSpecCaInput interface {
	pulumi.Input

	ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput
	ToClusterIssuerSpecCaOutputWithContext(context.Context) ClusterIssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (ClusterIssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecCa)(nil)).Elem()
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput {
	return i.ToClusterIssuerSpecCaOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaOutputWithContext(ctx context.Context) ClusterIssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaOutput)
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return i.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecCaArgs) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaOutput).ToClusterIssuerSpecCaPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecCaPtrInput is an input type that accepts ClusterIssuerSpecCaArgs, ClusterIssuerSpecCaPtr and ClusterIssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecCaPtrInput` via:
//
//          ClusterIssuerSpecCaArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecCaPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput
	ToClusterIssuerSpecCaPtrOutputWithContext(context.Context) ClusterIssuerSpecCaPtrOutput
}

type clusterIssuerSpecCaPtrType ClusterIssuerSpecCaArgs

func ClusterIssuerSpecCaPtr(v *ClusterIssuerSpecCaArgs) ClusterIssuerSpecCaPtrInput {
	return (*clusterIssuerSpecCaPtrType)(v)
}

func (*clusterIssuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecCa)(nil)).Elem()
}

func (i *clusterIssuerSpecCaPtrType) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return i.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecCaPtrType) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type ClusterIssuerSpecCaOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecCa)(nil)).Elem()
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaOutput() ClusterIssuerSpecCaOutput {
	return o
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaOutputWithContext(ctx context.Context) ClusterIssuerSpecCaOutput {
	return o
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return o.ToClusterIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecCaOutput) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecCa) *ClusterIssuerSpecCa {
		return &v
	}).(ClusterIssuerSpecCaPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o ClusterIssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o ClusterIssuerSpecCaOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecCa) string { return v.SecretName }).(pulumi.StringOutput)
}

type ClusterIssuerSpecCaPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecCa)(nil)).Elem()
}

func (o ClusterIssuerSpecCaPtrOutput) ToClusterIssuerSpecCaPtrOutput() ClusterIssuerSpecCaPtrOutput {
	return o
}

func (o ClusterIssuerSpecCaPtrOutput) ToClusterIssuerSpecCaPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecCaPtrOutput {
	return o
}

func (o ClusterIssuerSpecCaPtrOutput) Elem() ClusterIssuerSpecCaOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecCa) ClusterIssuerSpecCa { return *v }).(ClusterIssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o ClusterIssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o ClusterIssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// ClusterIssuerSpecSelfSignedInput is an input type that accepts ClusterIssuerSpecSelfSignedArgs and ClusterIssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecSelfSignedInput` via:
//
//          ClusterIssuerSpecSelfSignedArgs{...}
type ClusterIssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput
	ToClusterIssuerSpecSelfSignedOutputWithContext(context.Context) ClusterIssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (ClusterIssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput {
	return i.ToClusterIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedOutput)
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return i.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecSelfSignedArgs) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedOutput).ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecSelfSignedPtrInput is an input type that accepts ClusterIssuerSpecSelfSignedArgs, ClusterIssuerSpecSelfSignedPtr and ClusterIssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecSelfSignedPtrInput` via:
//
//          ClusterIssuerSpecSelfSignedArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput
	ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Context) ClusterIssuerSpecSelfSignedPtrOutput
}

type clusterIssuerSpecSelfSignedPtrType ClusterIssuerSpecSelfSignedArgs

func ClusterIssuerSpecSelfSignedPtr(v *ClusterIssuerSpecSelfSignedArgs) ClusterIssuerSpecSelfSignedPtrInput {
	return (*clusterIssuerSpecSelfSignedPtrType)(v)
}

func (*clusterIssuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (i *clusterIssuerSpecSelfSignedPtrType) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return i.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecSelfSignedPtrType) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type ClusterIssuerSpecSelfSignedOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedOutput() ClusterIssuerSpecSelfSignedOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ToClusterIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecSelfSignedOutput) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecSelfSigned) *ClusterIssuerSpecSelfSigned {
		return &v
	}).(ClusterIssuerSpecSelfSignedPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o ClusterIssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type ClusterIssuerSpecSelfSignedPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecSelfSigned)(nil)).Elem()
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) ToClusterIssuerSpecSelfSignedPtrOutput() ClusterIssuerSpecSelfSignedPtrOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) ToClusterIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecSelfSignedPtrOutput {
	return o
}

func (o ClusterIssuerSpecSelfSignedPtrOutput) Elem() ClusterIssuerSpecSelfSignedOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecSelfSigned) ClusterIssuerSpecSelfSigned { return *v }).(ClusterIssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o ClusterIssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVault struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth ClusterIssuerSpecVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
}

// ClusterIssuerSpecVaultInput is an input type that accepts ClusterIssuerSpecVaultArgs and ClusterIssuerSpecVaultOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultInput` via:
//
//          ClusterIssuerSpecVaultArgs{...}
type ClusterIssuerSpecVaultInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput
	ToClusterIssuerSpecVaultOutputWithContext(context.Context) ClusterIssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVaultArgs struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth ClusterIssuerSpecVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path pulumi.StringInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
}

func (ClusterIssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVault)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput {
	return i.ToClusterIssuerSpecVaultOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultOutput)
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return i.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultArgs) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultOutput).ToClusterIssuerSpecVaultPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultPtrInput is an input type that accepts ClusterIssuerSpecVaultArgs, ClusterIssuerSpecVaultPtr and ClusterIssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultPtrInput` via:
//
//          ClusterIssuerSpecVaultArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput
	ToClusterIssuerSpecVaultPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultPtrOutput
}

type clusterIssuerSpecVaultPtrType ClusterIssuerSpecVaultArgs

func ClusterIssuerSpecVaultPtr(v *ClusterIssuerSpecVaultArgs) ClusterIssuerSpecVaultPtrInput {
	return (*clusterIssuerSpecVaultPtrType)(v)
}

func (*clusterIssuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVault)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultPtrType) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return i.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultPtrType) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type ClusterIssuerSpecVaultOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVault)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultOutput() ClusterIssuerSpecVaultOutput {
	return o
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultOutput {
	return o
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return o.ToClusterIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultOutput) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) *ClusterIssuerSpecVault {
		return &v
	}).(ClusterIssuerSpecVaultPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o ClusterIssuerSpecVaultOutput) Auth() ClusterIssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) ClusterIssuerSpecVaultAuth { return v.Auth }).(ClusterIssuerSpecVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o ClusterIssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o ClusterIssuerSpecVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o ClusterIssuerSpecVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) string { return v.Path }).(pulumi.StringOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterIssuerSpecVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVault) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVault)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultPtrOutput) ToClusterIssuerSpecVaultPtrOutput() ClusterIssuerSpecVaultPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultPtrOutput) ToClusterIssuerSpecVaultPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultPtrOutput) Elem() ClusterIssuerSpecVaultOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) ClusterIssuerSpecVault { return *v }).(ClusterIssuerSpecVaultOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o ClusterIssuerSpecVaultPtrOutput) Auth() ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) *ClusterIssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterIssuerSpecVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o ClusterIssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o ClusterIssuerSpecVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o ClusterIssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterIssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole *ClusterIssuerSpecVaultAuthAppRole `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes *ClusterIssuerSpecVaultAuthKubernetes `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *ClusterIssuerSpecVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// ClusterIssuerSpecVaultAuthInput is an input type that accepts ClusterIssuerSpecVaultAuthArgs and ClusterIssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthInput` via:
//
//          ClusterIssuerSpecVaultAuthArgs{...}
type ClusterIssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput
	ToClusterIssuerSpecVaultAuthOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole ClusterIssuerSpecVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes ClusterIssuerSpecVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

func (ClusterIssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput {
	return i.ToClusterIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthOutput)
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthArgs) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthOutput).ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthArgs, ClusterIssuerSpecVaultAuthPtr and ClusterIssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput
	ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthPtrOutput
}

type clusterIssuerSpecVaultAuthPtrType ClusterIssuerSpecVaultAuthArgs

func ClusterIssuerSpecVaultAuthPtr(v *ClusterIssuerSpecVaultAuthArgs) ClusterIssuerSpecVaultAuthPtrInput {
	return (*clusterIssuerSpecVaultAuthPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthPtrType) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthPtrType) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type ClusterIssuerSpecVaultAuthOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthOutput() ClusterIssuerSpecVaultAuthOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthOutput) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuth {
		return &v
	}).(ClusterIssuerSpecVaultAuthPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterIssuerSpecVaultAuthOutput) AppRole() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthAppRole { return v.AppRole }).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o ClusterIssuerSpecVaultAuthOutput) Kubernetes() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterIssuerSpecVaultAuthOutput) TokenSecretRef() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type ClusterIssuerSpecVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuth)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) ToClusterIssuerSpecVaultAuthPtrOutput() ClusterIssuerSpecVaultAuthPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) ToClusterIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthPtrOutput) Elem() ClusterIssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuth) ClusterIssuerSpecVaultAuth { return *v }).(ClusterIssuerSpecVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterIssuerSpecVaultAuthPtrOutput) AppRole() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o ClusterIssuerSpecVaultAuthPtrOutput) Kubernetes() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterIssuerSpecVaultAuthPtrOutput) TokenSecretRef() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuth) *ClusterIssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef ClusterIssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// ClusterIssuerSpecVaultAuthAppRoleInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleArgs and ClusterIssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleArgs{...}
type ClusterIssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput
	ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef ClusterIssuerSpecVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

func (ClusterIssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleOutput)
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleArgs) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleOutput).ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthAppRolePtrInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleArgs, ClusterIssuerSpecVaultAuthAppRolePtr and ClusterIssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRolePtrInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput
	ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput
}

type clusterIssuerSpecVaultAuthAppRolePtrType ClusterIssuerSpecVaultAuthAppRoleArgs

func ClusterIssuerSpecVaultAuthAppRolePtr(v *ClusterIssuerSpecVaultAuthAppRoleArgs) ClusterIssuerSpecVaultAuthAppRolePtrInput {
	return (*clusterIssuerSpecVaultAuthAppRolePtrType)(v)
}

func (*clusterIssuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthAppRolePtrType) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthAppRolePtrType) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type ClusterIssuerSpecVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRoleOutput() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthAppRoleOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRole) *ClusterIssuerSpecVaultAuthAppRole {
		return &v
	}).(ClusterIssuerSpecVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o ClusterIssuerSpecVaultAuthAppRoleOutput) SecretRef() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRole) ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		return v.SecretRef
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

type ClusterIssuerSpecVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutput() ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) ToClusterIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) Elem() ClusterIssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRole) ClusterIssuerSpecVaultAuthAppRole { return *v }).(ClusterIssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o ClusterIssuerSpecVaultAuthAppRolePtrOutput) SecretRef() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRole) *ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs and ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput
	ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput).ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs, ClusterIssuerSpecVaultAuthAppRoleSecretRefPtr and ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs

func ClusterIssuerSpecVaultAuthAppRoleSecretRefPtr(v *ClusterIssuerSpecVaultAuthAppRoleSecretRefArgs) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrInput {
	return (*clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthAppRoleSecretRefPtrType) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRoleSecretRef) *ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthAppRoleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) ClusterIssuerSpecVaultAuthAppRoleSecretRef {
		return *v
	}).(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef ClusterIssuerSpecVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
}

// ClusterIssuerSpecVaultAuthKubernetesInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesArgs and ClusterIssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesArgs{...}
type ClusterIssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput
	ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef ClusterIssuerSpecVaultAuthKubernetesSecretRefInput `pulumi:"secretRef"`
}

func (ClusterIssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesOutput)
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesArgs) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesOutput).ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesArgs, ClusterIssuerSpecVaultAuthKubernetesPtr and ClusterIssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput
	ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput
}

type clusterIssuerSpecVaultAuthKubernetesPtrType ClusterIssuerSpecVaultAuthKubernetesArgs

func ClusterIssuerSpecVaultAuthKubernetesPtr(v *ClusterIssuerSpecVaultAuthKubernetesArgs) ClusterIssuerSpecVaultAuthKubernetesPtrInput {
	return (*clusterIssuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthKubernetesPtrType) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthKubernetesPtrType) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type ClusterIssuerSpecVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesOutput() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthKubernetesOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetes) *ClusterIssuerSpecVaultAuthKubernetes {
		return &v
	}).(ClusterIssuerSpecVaultAuthKubernetesPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o ClusterIssuerSpecVaultAuthKubernetesOutput) SecretRef() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetes) ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		return v.SecretRef
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

type ClusterIssuerSpecVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutput() ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) Elem() ClusterIssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetes) ClusterIssuerSpecVaultAuthKubernetes { return *v }).(ClusterIssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o ClusterIssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetes) *ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs and ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput
	ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput).ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs, ClusterIssuerSpecVaultAuthKubernetesSecretRefPtr and ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs

func ClusterIssuerSpecVaultAuthKubernetesSecretRefPtr(v *ClusterIssuerSpecVaultAuthKubernetesSecretRefArgs) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrInput {
	return (*clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthKubernetesSecretRefPtrType) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetesSecretRef) *ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthKubernetesSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) ClusterIssuerSpecVaultAuthKubernetesSecretRef {
		return *v
	}).(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts ClusterIssuerSpecVaultAuthTokenSecretRefArgs and ClusterIssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthTokenSecretRefInput` via:
//
//          ClusterIssuerSpecVaultAuthTokenSecretRefArgs{...}
type ClusterIssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput
	ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput).ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVaultAuthTokenSecretRefArgs, ClusterIssuerSpecVaultAuthTokenSecretRefPtr and ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type clusterIssuerSpecVaultAuthTokenSecretRefPtrType ClusterIssuerSpecVaultAuthTokenSecretRefArgs

func ClusterIssuerSpecVaultAuthTokenSecretRefPtr(v *ClusterIssuerSpecVaultAuthTokenSecretRefArgs) ClusterIssuerSpecVaultAuthTokenSecretRefPtrInput {
	return (*clusterIssuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVaultAuthTokenSecretRefPtrType) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterIssuerSpecVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefOutput() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthTokenSecretRef) *ClusterIssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVaultAuthTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput() ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) ToClusterIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthTokenSecretRef) ClusterIssuerSpecVaultAuthTokenSecretRef { return *v }).(ClusterIssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafi struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud *ClusterIssuerSpecVenafiCloud `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp *ClusterIssuerSpecVenafiTpp `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone string `pulumi:"zone"`
}

// ClusterIssuerSpecVenafiInput is an input type that accepts ClusterIssuerSpecVenafiArgs and ClusterIssuerSpecVenafiOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiInput` via:
//
//          ClusterIssuerSpecVenafiArgs{...}
type ClusterIssuerSpecVenafiInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput
	ToClusterIssuerSpecVenafiOutputWithContext(context.Context) ClusterIssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafiArgs struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud ClusterIssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp ClusterIssuerSpecVenafiTppPtrInput `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ClusterIssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput {
	return i.ToClusterIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiOutput)
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return i.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiArgs) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiOutput).ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiPtrInput is an input type that accepts ClusterIssuerSpecVenafiArgs, ClusterIssuerSpecVenafiPtr and ClusterIssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiPtrInput` via:
//
//          ClusterIssuerSpecVenafiArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput
	ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiPtrOutput
}

type clusterIssuerSpecVenafiPtrType ClusterIssuerSpecVenafiArgs

func ClusterIssuerSpecVenafiPtr(v *ClusterIssuerSpecVenafiArgs) ClusterIssuerSpecVenafiPtrInput {
	return (*clusterIssuerSpecVenafiPtrType)(v)
}

func (*clusterIssuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiPtrType) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return i.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiPtrType) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type ClusterIssuerSpecVenafiOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiOutput() ClusterIssuerSpecVenafiOutput {
	return o
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiOutput {
	return o
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return o.ToClusterIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiOutput) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafi {
		return &v
	}).(ClusterIssuerSpecVenafiPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiOutput) Cloud() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiCloud { return v.Cloud }).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiOutput) Tpp() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiTpp { return v.Tpp }).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o ClusterIssuerSpecVenafiOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafi) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafi)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiPtrOutput) ToClusterIssuerSpecVenafiPtrOutput() ClusterIssuerSpecVenafiPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiPtrOutput) ToClusterIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiPtrOutput) Elem() ClusterIssuerSpecVenafiOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafi) ClusterIssuerSpecVenafi { return *v }).(ClusterIssuerSpecVenafiOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiPtrOutput) Cloud() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o ClusterIssuerSpecVenafiPtrOutput) Tpp() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafi) *ClusterIssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o ClusterIssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloud struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef ClusterIssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// ClusterIssuerSpecVenafiCloudInput is an input type that accepts ClusterIssuerSpecVenafiCloudArgs and ClusterIssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudInput` via:
//
//          ClusterIssuerSpecVenafiCloudArgs{...}
type ClusterIssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput
	ToClusterIssuerSpecVenafiCloudOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloudArgs struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClusterIssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput {
	return i.ToClusterIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudOutput)
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudArgs) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudOutput).ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiCloudPtrInput is an input type that accepts ClusterIssuerSpecVenafiCloudArgs, ClusterIssuerSpecVenafiCloudPtr and ClusterIssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudPtrInput` via:
//
//          ClusterIssuerSpecVenafiCloudArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput
	ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudPtrOutput
}

type clusterIssuerSpecVenafiCloudPtrType ClusterIssuerSpecVenafiCloudArgs

func ClusterIssuerSpecVenafiCloudPtr(v *ClusterIssuerSpecVenafiCloudArgs) ClusterIssuerSpecVenafiCloudPtrInput {
	return (*clusterIssuerSpecVenafiCloudPtrType)(v)
}

func (*clusterIssuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiCloudPtrType) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiCloudPtrType) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiCloudOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudOutput() ClusterIssuerSpecVenafiCloudOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiCloudOutput) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloud) *ClusterIssuerSpecVenafiCloud {
		return &v
	}).(ClusterIssuerSpecVenafiCloudPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o ClusterIssuerSpecVenafiCloudOutput) ApiTokenSecretRef() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloud) ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		return v.ApiTokenSecretRef
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o ClusterIssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterIssuerSpecVenafiCloudPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloud)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) ToClusterIssuerSpecVenafiCloudPtrOutput() ClusterIssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) ToClusterIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudPtrOutput) Elem() ClusterIssuerSpecVenafiCloudOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloud) ClusterIssuerSpecVenafiCloud { return *v }).(ClusterIssuerSpecVenafiCloudOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o ClusterIssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloud) *ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ApiTokenSecretRef
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o ClusterIssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs and ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//          ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput).ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs, ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtr and ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//          ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs

func ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtr(v *ClusterIssuerSpecVenafiCloudApiTokenSecretRefArgs) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrInput {
	return (*clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiCloudApiTokenSecretRefPtrType) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiCloudApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) ClusterIssuerSpecVenafiCloudApiTokenSecretRef {
		return *v
	}).(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTpp struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle *string `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef ClusterIssuerSpecVenafiTppCredentialsRef `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url string `pulumi:"url"`
}

// ClusterIssuerSpecVenafiTppInput is an input type that accepts ClusterIssuerSpecVenafiTppArgs and ClusterIssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppInput` via:
//
//          ClusterIssuerSpecVenafiTppArgs{...}
type ClusterIssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput
	ToClusterIssuerSpecVenafiTppOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTppArgs struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef ClusterIssuerSpecVenafiTppCredentialsRefInput `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringInput `pulumi:"url"`
}

func (ClusterIssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput {
	return i.ToClusterIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppOutput)
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppArgs) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppOutput).ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiTppPtrInput is an input type that accepts ClusterIssuerSpecVenafiTppArgs, ClusterIssuerSpecVenafiTppPtr and ClusterIssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppPtrInput` via:
//
//          ClusterIssuerSpecVenafiTppArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput
	ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppPtrOutput
}

type clusterIssuerSpecVenafiTppPtrType ClusterIssuerSpecVenafiTppArgs

func ClusterIssuerSpecVenafiTppPtr(v *ClusterIssuerSpecVenafiTppArgs) ClusterIssuerSpecVenafiTppPtrInput {
	return (*clusterIssuerSpecVenafiTppPtrType)(v)
}

func (*clusterIssuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiTppPtrType) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiTppPtrType) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type ClusterIssuerSpecVenafiTppOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppOutput() ClusterIssuerSpecVenafiTppOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ToClusterIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiTppOutput) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTpp) *ClusterIssuerSpecVenafiTpp {
		return &v
	}).(ClusterIssuerSpecVenafiTppPtrOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o ClusterIssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o ClusterIssuerSpecVenafiTppOutput) CredentialsRef() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTpp) ClusterIssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o ClusterIssuerSpecVenafiTppOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTpp) string { return v.Url }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiTppPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTpp)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) ToClusterIssuerSpecVenafiTppPtrOutput() ClusterIssuerSpecVenafiTppPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) ToClusterIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppPtrOutput) Elem() ClusterIssuerSpecVenafiTppOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTpp) ClusterIssuerSpecVenafiTpp { return *v }).(ClusterIssuerSpecVenafiTppOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o ClusterIssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o ClusterIssuerSpecVenafiTppPtrOutput) CredentialsRef() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTpp) *ClusterIssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return &v.CredentialsRef
	}).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o ClusterIssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// ClusterIssuerSpecVenafiTppCredentialsRefInput is an input type that accepts ClusterIssuerSpecVenafiTppCredentialsRefArgs and ClusterIssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppCredentialsRefInput` via:
//
//          ClusterIssuerSpecVenafiTppCredentialsRefArgs{...}
type ClusterIssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput
	ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterIssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerSpecVenafiTppCredentialsRefArgs) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefOutput).ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// ClusterIssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts ClusterIssuerSpecVenafiTppCredentialsRefArgs, ClusterIssuerSpecVenafiTppCredentialsRefPtr and ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//          ClusterIssuerSpecVenafiTppCredentialsRefArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput
	ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput
}

type clusterIssuerSpecVenafiTppCredentialsRefPtrType ClusterIssuerSpecVenafiTppCredentialsRefArgs

func ClusterIssuerSpecVenafiTppCredentialsRefPtr(v *ClusterIssuerSpecVenafiTppCredentialsRefArgs) ClusterIssuerSpecVenafiTppCredentialsRefPtrInput {
	return (*clusterIssuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*clusterIssuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *clusterIssuerSpecVenafiTppCredentialsRefPtrType) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerSpecVenafiTppCredentialsRefPtrType) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type ClusterIssuerSpecVenafiTppCredentialsRefOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefOutput() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTppCredentialsRef) *ClusterIssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerSpecVenafiTppCredentialsRef) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutput() ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) ToClusterIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() ClusterIssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTppCredentialsRef) ClusterIssuerSpecVenafiTppCredentialsRef { return *v }).(ClusterIssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatus struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme *ClusterIssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions []ClusterIssuerStatusConditions `pulumi:"conditions"`
}

// ClusterIssuerStatusInput is an input type that accepts ClusterIssuerStatusArgs and ClusterIssuerStatusOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusInput` via:
//
//          ClusterIssuerStatusArgs{...}
type ClusterIssuerStatusInput interface {
	pulumi.Input

	ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput
	ToClusterIssuerStatusOutputWithContext(context.Context) ClusterIssuerStatusOutput
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatusArgs struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme ClusterIssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions ClusterIssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (ClusterIssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatus)(nil)).Elem()
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput {
	return i.ToClusterIssuerStatusOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusOutputWithContext(ctx context.Context) ClusterIssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusOutput)
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return i.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusArgs) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusOutput).ToClusterIssuerStatusPtrOutputWithContext(ctx)
}

// ClusterIssuerStatusPtrInput is an input type that accepts ClusterIssuerStatusArgs, ClusterIssuerStatusPtr and ClusterIssuerStatusPtrOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusPtrInput` via:
//
//          ClusterIssuerStatusArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerStatusPtrInput interface {
	pulumi.Input

	ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput
	ToClusterIssuerStatusPtrOutputWithContext(context.Context) ClusterIssuerStatusPtrOutput
}

type clusterIssuerStatusPtrType ClusterIssuerStatusArgs

func ClusterIssuerStatusPtr(v *ClusterIssuerStatusArgs) ClusterIssuerStatusPtrInput {
	return (*clusterIssuerStatusPtrType)(v)
}

func (*clusterIssuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatus)(nil)).Elem()
}

func (i *clusterIssuerStatusPtrType) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return i.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *clusterIssuerStatusPtrType) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusPtrOutput)
}

// Status of the ClusterIssuer. This is set and managed automatically.
type ClusterIssuerStatusOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatus)(nil)).Elem()
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusOutput() ClusterIssuerStatusOutput {
	return o
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusOutputWithContext(ctx context.Context) ClusterIssuerStatusOutput {
	return o
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return o.ToClusterIssuerStatusPtrOutputWithContext(context.Background())
}

func (o ClusterIssuerStatusOutput) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatus) *ClusterIssuerStatus {
		return &v
	}).(ClusterIssuerStatusPtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o ClusterIssuerStatusOutput) Acme() ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatus) *ClusterIssuerStatusAcme { return v.Acme }).(ClusterIssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o ClusterIssuerStatusOutput) Conditions() ClusterIssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v ClusterIssuerStatus) []ClusterIssuerStatusConditions { return v.Conditions }).(ClusterIssuerStatusConditionsArrayOutput)
}

type ClusterIssuerStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatus)(nil)).Elem()
}

func (o ClusterIssuerStatusPtrOutput) ToClusterIssuerStatusPtrOutput() ClusterIssuerStatusPtrOutput {
	return o
}

func (o ClusterIssuerStatusPtrOutput) ToClusterIssuerStatusPtrOutputWithContext(ctx context.Context) ClusterIssuerStatusPtrOutput {
	return o
}

func (o ClusterIssuerStatusPtrOutput) Elem() ClusterIssuerStatusOutput {
	return o.ApplyT(func(v *ClusterIssuerStatus) ClusterIssuerStatus { return *v }).(ClusterIssuerStatusOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o ClusterIssuerStatusPtrOutput) Acme() ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v *ClusterIssuerStatus) *ClusterIssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(ClusterIssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o ClusterIssuerStatusPtrOutput) Conditions() ClusterIssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterIssuerStatus) []ClusterIssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterIssuerStatusConditionsArrayOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcme struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri *string `pulumi:"uri"`
}

// ClusterIssuerStatusAcmeInput is an input type that accepts ClusterIssuerStatusAcmeArgs and ClusterIssuerStatusAcmeOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusAcmeInput` via:
//
//          ClusterIssuerStatusAcmeArgs{...}
type ClusterIssuerStatusAcmeInput interface {
	pulumi.Input

	ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput
	ToClusterIssuerStatusAcmeOutputWithContext(context.Context) ClusterIssuerStatusAcmeOutput
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcmeArgs struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ClusterIssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusAcme)(nil)).Elem()
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput {
	return i.ToClusterIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmeOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmeOutput)
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return i.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusAcmeArgs) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmeOutput).ToClusterIssuerStatusAcmePtrOutputWithContext(ctx)
}

// ClusterIssuerStatusAcmePtrInput is an input type that accepts ClusterIssuerStatusAcmeArgs, ClusterIssuerStatusAcmePtr and ClusterIssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusAcmePtrInput` via:
//
//          ClusterIssuerStatusAcmeArgs{...}
//
//  or:
//
//          nil
type ClusterIssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput
	ToClusterIssuerStatusAcmePtrOutputWithContext(context.Context) ClusterIssuerStatusAcmePtrOutput
}

type clusterIssuerStatusAcmePtrType ClusterIssuerStatusAcmeArgs

func ClusterIssuerStatusAcmePtr(v *ClusterIssuerStatusAcmeArgs) ClusterIssuerStatusAcmePtrInput {
	return (*clusterIssuerStatusAcmePtrType)(v)
}

func (*clusterIssuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatusAcme)(nil)).Elem()
}

func (i *clusterIssuerStatusAcmePtrType) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return i.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *clusterIssuerStatusAcmePtrType) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusAcmePtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type ClusterIssuerStatusAcmeOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusAcme)(nil)).Elem()
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmeOutput() ClusterIssuerStatusAcmeOutput {
	return o
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmeOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmeOutput {
	return o
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return o.ToClusterIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o ClusterIssuerStatusAcmeOutput) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusAcme) *ClusterIssuerStatusAcme {
		return &v
	}).(ClusterIssuerStatusAcmePtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o ClusterIssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o ClusterIssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ClusterIssuerStatusAcmePtrOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuerStatusAcme)(nil)).Elem()
}

func (o ClusterIssuerStatusAcmePtrOutput) ToClusterIssuerStatusAcmePtrOutput() ClusterIssuerStatusAcmePtrOutput {
	return o
}

func (o ClusterIssuerStatusAcmePtrOutput) ToClusterIssuerStatusAcmePtrOutputWithContext(ctx context.Context) ClusterIssuerStatusAcmePtrOutput {
	return o
}

func (o ClusterIssuerStatusAcmePtrOutput) Elem() ClusterIssuerStatusAcmeOutput {
	return o.ApplyT(func(v *ClusterIssuerStatusAcme) ClusterIssuerStatusAcme { return *v }).(ClusterIssuerStatusAcmeOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o ClusterIssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o ClusterIssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type string `pulumi:"type"`
}

// ClusterIssuerStatusConditionsInput is an input type that accepts ClusterIssuerStatusConditionsArgs and ClusterIssuerStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusConditionsInput` via:
//
//          ClusterIssuerStatusConditionsArgs{...}
type ClusterIssuerStatusConditionsInput interface {
	pulumi.Input

	ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput
	ToClusterIssuerStatusConditionsOutputWithContext(context.Context) ClusterIssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterIssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusConditions)(nil)).Elem()
}

func (i ClusterIssuerStatusConditionsArgs) ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput {
	return i.ToClusterIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusConditionsArgs) ToClusterIssuerStatusConditionsOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusConditionsOutput)
}

// ClusterIssuerStatusConditionsArrayInput is an input type that accepts ClusterIssuerStatusConditionsArray and ClusterIssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerStatusConditionsArrayInput` via:
//
//          ClusterIssuerStatusConditionsArray{ ClusterIssuerStatusConditionsArgs{...} }
type ClusterIssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput
	ToClusterIssuerStatusConditionsArrayOutputWithContext(context.Context) ClusterIssuerStatusConditionsArrayOutput
}

type ClusterIssuerStatusConditionsArray []ClusterIssuerStatusConditionsInput

func (ClusterIssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerStatusConditions)(nil)).Elem()
}

func (i ClusterIssuerStatusConditionsArray) ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput {
	return i.ToClusterIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerStatusConditionsArray) ToClusterIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type ClusterIssuerStatusConditionsOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIssuerStatusConditions)(nil)).Elem()
}

func (o ClusterIssuerStatusConditionsOutput) ToClusterIssuerStatusConditionsOutput() ClusterIssuerStatusConditionsOutput {
	return o
}

func (o ClusterIssuerStatusConditionsOutput) ToClusterIssuerStatusConditionsOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o ClusterIssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o ClusterIssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o ClusterIssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o ClusterIssuerStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready').
func (o ClusterIssuerStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIssuerStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterIssuerStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIssuerStatusConditions)(nil)).Elem()
}

func (o ClusterIssuerStatusConditionsArrayOutput) ToClusterIssuerStatusConditionsArrayOutput() ClusterIssuerStatusConditionsArrayOutput {
	return o
}

func (o ClusterIssuerStatusConditionsArrayOutput) ToClusterIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterIssuerStatusConditionsArrayOutput {
	return o
}

func (o ClusterIssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterIssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIssuerStatusConditions {
		return vs[0].([]ClusterIssuerStatusConditions)[vs[1].(int)]
	}).(ClusterIssuerStatusConditionsOutput)
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec *IssuerSpec `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status *IssuerStatus `pulumi:"status"`
}

// IssuerTypeInput is an input type that accepts IssuerTypeArgs and IssuerTypeOutput values.
// You can construct a concrete instance of `IssuerTypeInput` via:
//
//          IssuerTypeArgs{...}
type IssuerTypeInput interface {
	pulumi.Input

	ToIssuerTypeOutput() IssuerTypeOutput
	ToIssuerTypeOutputWithContext(context.Context) IssuerTypeOutput
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// Desired state of the Issuer resource.
	Spec IssuerSpecPtrInput `pulumi:"spec"`
	// Status of the Issuer. This is set and managed automatically.
	Status IssuerStatusPtrInput `pulumi:"status"`
}

func (IssuerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerType)(nil)).Elem()
}

func (i IssuerTypeArgs) ToIssuerTypeOutput() IssuerTypeOutput {
	return i.ToIssuerTypeOutputWithContext(context.Background())
}

func (i IssuerTypeArgs) ToIssuerTypeOutputWithContext(ctx context.Context) IssuerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerTypeOutput)
}

// An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.
type IssuerTypeOutput struct{ *pulumi.OutputState }

func (IssuerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerType)(nil)).Elem()
}

func (o IssuerTypeOutput) ToIssuerTypeOutput() IssuerTypeOutput {
	return o
}

func (o IssuerTypeOutput) ToIssuerTypeOutputWithContext(ctx context.Context) IssuerTypeOutput {
	return o
}

func (o IssuerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o IssuerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o IssuerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v IssuerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Desired state of the Issuer resource.
func (o IssuerTypeOutput) Spec() IssuerSpecPtrOutput {
	return o.ApplyT(func(v IssuerType) *IssuerSpec { return v.Spec }).(IssuerSpecPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
func (o IssuerTypeOutput) Status() IssuerStatusPtrOutput {
	return o.ApplyT(func(v IssuerType) *IssuerStatus { return v.Status }).(IssuerStatusPtrOutput)
}

type IssuerMetadata struct {
}

// IssuerMetadataInput is an input type that accepts IssuerMetadataArgs and IssuerMetadataOutput values.
// You can construct a concrete instance of `IssuerMetadataInput` via:
//
//          IssuerMetadataArgs{...}
type IssuerMetadataInput interface {
	pulumi.Input

	ToIssuerMetadataOutput() IssuerMetadataOutput
	ToIssuerMetadataOutputWithContext(context.Context) IssuerMetadataOutput
}

type IssuerMetadataArgs struct {
}

func (IssuerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerMetadata)(nil)).Elem()
}

func (i IssuerMetadataArgs) ToIssuerMetadataOutput() IssuerMetadataOutput {
	return i.ToIssuerMetadataOutputWithContext(context.Background())
}

func (i IssuerMetadataArgs) ToIssuerMetadataOutputWithContext(ctx context.Context) IssuerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerMetadataOutput)
}

type IssuerMetadataOutput struct{ *pulumi.OutputState }

func (IssuerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerMetadata)(nil)).Elem()
}

func (o IssuerMetadataOutput) ToIssuerMetadataOutput() IssuerMetadataOutput {
	return o
}

func (o IssuerMetadataOutput) ToIssuerMetadataOutputWithContext(ctx context.Context) IssuerMetadataOutput {
	return o
}

// Desired state of the Issuer resource.
type IssuerSpec struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme *IssuerSpecAcme `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca *IssuerSpecCa `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned *IssuerSpecSelfSigned `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault *IssuerSpecVault `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi *IssuerSpecVenafi `pulumi:"venafi"`
}

// IssuerSpecInput is an input type that accepts IssuerSpecArgs and IssuerSpecOutput values.
// You can construct a concrete instance of `IssuerSpecInput` via:
//
//          IssuerSpecArgs{...}
type IssuerSpecInput interface {
	pulumi.Input

	ToIssuerSpecOutput() IssuerSpecOutput
	ToIssuerSpecOutputWithContext(context.Context) IssuerSpecOutput
}

// Desired state of the Issuer resource.
type IssuerSpecArgs struct {
	// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
	Acme IssuerSpecAcmePtrInput `pulumi:"acme"`
	// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
	Ca IssuerSpecCaPtrInput `pulumi:"ca"`
	// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
	SelfSigned IssuerSpecSelfSignedPtrInput `pulumi:"selfSigned"`
	// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
	Vault IssuerSpecVaultPtrInput `pulumi:"vault"`
	// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
	Venafi IssuerSpecVenafiPtrInput `pulumi:"venafi"`
}

func (IssuerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (i IssuerSpecArgs) ToIssuerSpecOutput() IssuerSpecOutput {
	return i.ToIssuerSpecOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput)
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecArgs) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecOutput).ToIssuerSpecPtrOutputWithContext(ctx)
}

// IssuerSpecPtrInput is an input type that accepts IssuerSpecArgs, IssuerSpecPtr and IssuerSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecPtrInput` via:
//
//          IssuerSpecArgs{...}
//
//  or:
//
//          nil
type IssuerSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecPtrOutput() IssuerSpecPtrOutput
	ToIssuerSpecPtrOutputWithContext(context.Context) IssuerSpecPtrOutput
}

type issuerSpecPtrType IssuerSpecArgs

func IssuerSpecPtr(v *IssuerSpecArgs) IssuerSpecPtrInput {
	return (*issuerSpecPtrType)(v)
}

func (*issuerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return i.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecPtrType) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecPtrOutput)
}

// Desired state of the Issuer resource.
type IssuerSpecOutput struct{ *pulumi.OutputState }

func (IssuerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecOutput) ToIssuerSpecOutput() IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecOutputWithContext(ctx context.Context) IssuerSpecOutput {
	return o
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o.ToIssuerSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpec {
		return &v
	}).(IssuerSpecPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o IssuerSpecOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecAcme { return v.Acme }).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecCa { return v.Ca }).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o IssuerSpecOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecSelfSigned { return v.SelfSigned }).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o IssuerSpecOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecVault { return v.Vault }).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o IssuerSpecOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v IssuerSpec) *IssuerSpecVenafi { return v.Venafi }).(IssuerSpecVenafiPtrOutput)
}

type IssuerSpecPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpec)(nil)).Elem()
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutput() IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) ToIssuerSpecPtrOutputWithContext(ctx context.Context) IssuerSpecPtrOutput {
	return o
}

func (o IssuerSpecPtrOutput) Elem() IssuerSpecOutput {
	return o.ApplyT(func(v *IssuerSpec) IssuerSpec { return *v }).(IssuerSpecOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
func (o IssuerSpecPtrOutput) Acme() IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerSpecAcmePtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
func (o IssuerSpecPtrOutput) Ca() IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(IssuerSpecCaPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
func (o IssuerSpecPtrOutput) SelfSigned() IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecSelfSigned {
		if v == nil {
			return nil
		}
		return v.SelfSigned
	}).(IssuerSpecSelfSignedPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
func (o IssuerSpecPtrOutput) Vault() IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(IssuerSpecVaultPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
func (o IssuerSpecPtrOutput) Venafi() IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v *IssuerSpec) *IssuerSpecVenafi {
		if v == nil {
			return nil
		}
		return v.Venafi
	}).(IssuerSpecVenafiPtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcme struct {
	// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
	DisableAccountKeyGeneration *bool `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email *string `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding *IssuerSpecAcmeExternalAccountBinding `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
	PreferredChain *string `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRef `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server string `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify *bool `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers []IssuerSpecAcmeSolvers `pulumi:"solvers"`
}

// IssuerSpecAcmeInput is an input type that accepts IssuerSpecAcmeArgs and IssuerSpecAcmeOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeInput` via:
//
//          IssuerSpecAcmeArgs{...}
type IssuerSpecAcmeInput interface {
	pulumi.Input

	ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput
	ToIssuerSpecAcmeOutputWithContext(context.Context) IssuerSpecAcmeOutput
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcmeArgs struct {
	// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
	DisableAccountKeyGeneration pulumi.BoolPtrInput `pulumi:"disableAccountKeyGeneration"`
	// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
	ExternalAccountBinding IssuerSpecAcmeExternalAccountBindingPtrInput `pulumi:"externalAccountBinding"`
	// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
	PreferredChain pulumi.StringPtrInput `pulumi:"preferredChain"`
	// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
	PrivateKeySecretRef IssuerSpecAcmePrivateKeySecretRefInput `pulumi:"privateKeySecretRef"`
	// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
	Server pulumi.StringInput `pulumi:"server"`
	// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
	SkipTLSVerify pulumi.BoolPtrInput `pulumi:"skipTLSVerify"`
	// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
	Solvers IssuerSpecAcmeSolversArrayInput `pulumi:"solvers"`
}

func (IssuerSpecAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return i.ToIssuerSpecAcmeOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput)
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeArgs) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeOutput).ToIssuerSpecAcmePtrOutputWithContext(ctx)
}

// IssuerSpecAcmePtrInput is an input type that accepts IssuerSpecAcmeArgs, IssuerSpecAcmePtr and IssuerSpecAcmePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePtrInput` via:
//
//          IssuerSpecAcmeArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput
	ToIssuerSpecAcmePtrOutputWithContext(context.Context) IssuerSpecAcmePtrOutput
}

type issuerSpecAcmePtrType IssuerSpecAcmeArgs

func IssuerSpecAcmePtr(v *IssuerSpecAcmeArgs) IssuerSpecAcmePtrInput {
	return (*issuerSpecAcmePtrType)(v)
}

func (*issuerSpecAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return i.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePtrType) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePtrOutput)
}

// ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.
type IssuerSpecAcmeOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutput() IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmeOutputWithContext(ctx context.Context) IssuerSpecAcmeOutput {
	return o
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o.ToIssuerSpecAcmePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *IssuerSpecAcme {
		return &v
	}).(IssuerSpecAcmePtrOutput)
}

// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
func (o IssuerSpecAcmeOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *bool { return v.DisableAccountKeyGeneration }).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o IssuerSpecAcmeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o IssuerSpecAcmeOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding { return v.ExternalAccountBinding }).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
func (o IssuerSpecAcmeOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *string { return v.PreferredChain }).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmeOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcme) IssuerSpecAcmePrivateKeySecretRef { return v.PrivateKeySecretRef }).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmeOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcme) string { return v.Server }).(pulumi.StringOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o IssuerSpecAcmeOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcme) *bool { return v.SkipTLSVerify }).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmeOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcme) []IssuerSpecAcmeSolvers { return v.Solvers }).(IssuerSpecAcmeSolversArrayOutput)
}

type IssuerSpecAcmePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcme)(nil)).Elem()
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutput() IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) ToIssuerSpecAcmePtrOutputWithContext(ctx context.Context) IssuerSpecAcmePtrOutput {
	return o
}

func (o IssuerSpecAcmePtrOutput) Elem() IssuerSpecAcmeOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) IssuerSpecAcme { return *v }).(IssuerSpecAcmeOutput)
}

// Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.
func (o IssuerSpecAcmePtrOutput) DisableAccountKeyGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.DisableAccountKeyGeneration
	}).(pulumi.BoolPtrOutput)
}

// Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.
func (o IssuerSpecAcmePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
func (o IssuerSpecAcmePtrOutput) ExternalAccountBinding() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *IssuerSpecAcmeExternalAccountBinding {
		if v == nil {
			return nil
		}
		return v.ExternalAccountBinding
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN
func (o IssuerSpecAcmePtrOutput) PreferredChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return v.PreferredChain
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
func (o IssuerSpecAcmePtrOutput) PrivateKeySecretRef() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *IssuerSpecAcmePrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.PrivateKeySecretRef
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory". Only ACME v2 endpoints (i.e. RFC 8555) are supported.
func (o IssuerSpecAcmePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.
func (o IssuerSpecAcmePtrOutput) SkipTLSVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) *bool {
		if v == nil {
			return nil
		}
		return v.SkipTLSVerify
	}).(pulumi.BoolPtrOutput)
}

// Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/
func (o IssuerSpecAcmePtrOutput) Solvers() IssuerSpecAcmeSolversArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcme) []IssuerSpecAcmeSolvers {
		if v == nil {
			return nil
		}
		return v.Solvers
	}).(IssuerSpecAcmeSolversArrayOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBinding struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID string `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRef `pulumi:"keySecretRef"`
}

// IssuerSpecAcmeExternalAccountBindingInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs and IssuerSpecAcmeExternalAccountBindingOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingArgs{...}
type IssuerSpecAcmeExternalAccountBindingInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput
	ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingOutput
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingArgs struct {
	// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// keyID is the ID of the CA key that the External Account is bound to.
	KeyID pulumi.StringInput `pulumi:"keyID"`
	// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
	KeySecretRef IssuerSpecAcmeExternalAccountBindingKeySecretRefInput `pulumi:"keySecretRef"`
}

func (IssuerSpecAcmeExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingArgs) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingOutput).ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingArgs, IssuerSpecAcmeExternalAccountBindingPtr and IssuerSpecAcmeExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingPtrInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput
}

type issuerSpecAcmeExternalAccountBindingPtrType IssuerSpecAcmeExternalAccountBindingArgs

func IssuerSpecAcmeExternalAccountBindingPtr(v *IssuerSpecAcmeExternalAccountBindingArgs) IssuerSpecAcmeExternalAccountBindingPtrInput {
	return (*issuerSpecAcmeExternalAccountBindingPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingPtrType) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.
type IssuerSpecAcmeExternalAccountBindingOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutput() IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBinding {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingPtrOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeyID() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) string { return v.KeyID }).(pulumi.StringOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o IssuerSpecAcmeExternalAccountBindingOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return v.KeySecretRef
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

type IssuerSpecAcmeExternalAccountBindingPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBinding)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutput() IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) ToIssuerSpecAcmeExternalAccountBindingPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) IssuerSpecAcmeExternalAccountBinding { return *v }).(IssuerSpecAcmeExternalAccountBindingOutput)
}

// keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are "HS256", "HS384" and "HS512".
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// keyID is the ID of the CA key that the External Account is bound to.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyID
	}).(pulumi.StringPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
func (o IssuerSpecAcmeExternalAccountBindingPtrOutput) KeySecretRef() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBinding) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		if v == nil {
			return nil
		}
		return &v.KeySecretRef
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs and IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
type IssuerSpecAcmeExternalAccountBindingKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput).ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs, IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr and IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
	ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput
}

type issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs

func IssuerSpecAcmeExternalAccountBindingKeySecretRefPtr(v *IssuerSpecAcmeExternalAccountBindingKeySecretRefArgs) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrInput {
	return (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeExternalAccountBindingKeySecretRefPtrType) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
type IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return &v
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeExternalAccountBindingKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeExternalAccountBindingKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput() IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) ToIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Elem() IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) IssuerSpecAcmeExternalAccountBindingKeySecretRef {
		return *v
	}).(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeExternalAccountBindingKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmePrivateKeySecretRefInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs and IssuerSpecAcmePrivateKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefInput` via:
//
//          IssuerSpecAcmePrivateKeySecretRefArgs{...}
type IssuerSpecAcmePrivateKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput
	ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefOutput
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmePrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmePrivateKeySecretRefArgs) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefOutput).ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmePrivateKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmePrivateKeySecretRefArgs, IssuerSpecAcmePrivateKeySecretRefPtr and IssuerSpecAcmePrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmePrivateKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmePrivateKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmePrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput
	ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput
}

type issuerSpecAcmePrivateKeySecretRefPtrType IssuerSpecAcmePrivateKeySecretRefArgs

func IssuerSpecAcmePrivateKeySecretRefPtr(v *IssuerSpecAcmePrivateKeySecretRefArgs) IssuerSpecAcmePrivateKeySecretRefPtrInput {
	return (*issuerSpecAcmePrivateKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmePrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmePrivateKeySecretRefPtrType) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.
type IssuerSpecAcmePrivateKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutput() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmePrivateKeySecretRefOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) *IssuerSpecAcmePrivateKeySecretRef {
		return &v
	}).(IssuerSpecAcmePrivateKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmePrivateKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmePrivateKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmePrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmePrivateKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutput() IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) ToIssuerSpecAcmePrivateKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmePrivateKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Elem() IssuerSpecAcmePrivateKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) IssuerSpecAcmePrivateKeySecretRef { return *v }).(IssuerSpecAcmePrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmePrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmePrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolvers struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 *IssuerSpecAcmeSolversDns01 `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 *IssuerSpecAcmeSolversHttp01 `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector *IssuerSpecAcmeSolversSelector `pulumi:"selector"`
}

// IssuerSpecAcmeSolversInput is an input type that accepts IssuerSpecAcmeSolversArgs and IssuerSpecAcmeSolversOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversInput` via:
//
//          IssuerSpecAcmeSolversArgs{...}
type IssuerSpecAcmeSolversInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput
	ToIssuerSpecAcmeSolversOutputWithContext(context.Context) IssuerSpecAcmeSolversOutput
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolversArgs struct {
	// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
	Dns01 IssuerSpecAcmeSolversDns01PtrInput `pulumi:"dns01"`
	// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
	Http01 IssuerSpecAcmeSolversHttp01PtrInput `pulumi:"http01"`
	// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
	Selector IssuerSpecAcmeSolversSelectorPtrInput `pulumi:"selector"`
}

func (IssuerSpecAcmeSolversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return i.ToIssuerSpecAcmeSolversOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArgs) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversOutput)
}

// IssuerSpecAcmeSolversArrayInput is an input type that accepts IssuerSpecAcmeSolversArray and IssuerSpecAcmeSolversArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversArrayInput` via:
//
//          IssuerSpecAcmeSolversArray{ IssuerSpecAcmeSolversArgs{...} }
type IssuerSpecAcmeSolversArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput
	ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversArrayOutput
}

type IssuerSpecAcmeSolversArray []IssuerSpecAcmeSolversInput

func (IssuerSpecAcmeSolversArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return i.ToIssuerSpecAcmeSolversArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversArray) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversArrayOutput)
}

// Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.
type IssuerSpecAcmeSolversOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutput() IssuerSpecAcmeSolversOutput {
	return o
}

func (o IssuerSpecAcmeSolversOutput) ToIssuerSpecAcmeSolversOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversOutput {
	return o
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
func (o IssuerSpecAcmeSolversOutput) Dns01() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversDns01 { return v.Dns01 }).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
func (o IssuerSpecAcmeSolversOutput) Http01() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversHttp01 { return v.Http01 }).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
func (o IssuerSpecAcmeSolversOutput) Selector() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolvers) *IssuerSpecAcmeSolversSelector { return v.Selector }).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

type IssuerSpecAcmeSolversArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolvers)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutput() IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) ToIssuerSpecAcmeSolversArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolvers {
		return vs[0].([]IssuerSpecAcmeSolvers)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01 struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns *IssuerSpecAcmeSolversDns01Acmedns `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai *IssuerSpecAcmeSolversDns01Akamai `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns *IssuerSpecAcmeSolversDns01Azuredns `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns *IssuerSpecAcmeSolversDns01Clouddns `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare *IssuerSpecAcmeSolversDns01Cloudflare `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy *string `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean *IssuerSpecAcmeSolversDns01Digitalocean `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 *IssuerSpecAcmeSolversDns01Rfc2136 `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 *IssuerSpecAcmeSolversDns01Route53 `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook *IssuerSpecAcmeSolversDns01Webhook `pulumi:"webhook"`
}

// IssuerSpecAcmeSolversDns01Input is an input type that accepts IssuerSpecAcmeSolversDns01Args and IssuerSpecAcmeSolversDns01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Input` via:
//
//          IssuerSpecAcmeSolversDns01Args{...}
type IssuerSpecAcmeSolversDns01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output
	ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Args struct {
	// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
	Acmedns IssuerSpecAcmeSolversDns01AcmednsPtrInput `pulumi:"acmedns"`
	// Use the Akamai DNS zone management API to manage DNS01 challenge records.
	Akamai IssuerSpecAcmeSolversDns01AkamaiPtrInput `pulumi:"akamai"`
	// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
	Azuredns IssuerSpecAcmeSolversDns01AzurednsPtrInput `pulumi:"azuredns"`
	// Use the Google Cloud DNS API to manage DNS01 challenge records.
	Clouddns IssuerSpecAcmeSolversDns01ClouddnsPtrInput `pulumi:"clouddns"`
	// Use the Cloudflare API to manage DNS01 challenge records.
	Cloudflare IssuerSpecAcmeSolversDns01CloudflarePtrInput `pulumi:"cloudflare"`
	// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
	CnameStrategy pulumi.StringPtrInput `pulumi:"cnameStrategy"`
	// Use the DigitalOcean DNS API to manage DNS01 challenge records.
	Digitalocean IssuerSpecAcmeSolversDns01DigitaloceanPtrInput `pulumi:"digitalocean"`
	// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
	Rfc2136 IssuerSpecAcmeSolversDns01Rfc2136PtrInput `pulumi:"rfc2136"`
	// Use the AWS Route53 API to manage DNS01 challenge records.
	Route53 IssuerSpecAcmeSolversDns01Route53PtrInput `pulumi:"route53"`
	// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
	Webhook IssuerSpecAcmeSolversDns01WebhookPtrInput `pulumi:"webhook"`
}

func (IssuerSpecAcmeSolversDns01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return i.ToIssuerSpecAcmeSolversDns01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output)
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Args) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Output).ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Args, IssuerSpecAcmeSolversDns01Ptr and IssuerSpecAcmeSolversDns01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput
	ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01PtrOutput
}

type issuerSpecAcmeSolversDns01PtrType IssuerSpecAcmeSolversDns01Args

func IssuerSpecAcmeSolversDns01Ptr(v *IssuerSpecAcmeSolversDns01Args) IssuerSpecAcmeSolversDns01PtrInput {
	return (*issuerSpecAcmeSolversDns01PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01PtrType) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
type IssuerSpecAcmeSolversDns01Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01Output() IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Output) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01 {
		return &v
	}).(IssuerSpecAcmeSolversDns01PtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Acmedns() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Acmedns { return v.Acmedns }).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai { return v.Akamai }).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Azuredns() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Azuredns { return v.Azuredns }).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Clouddns() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Clouddns { return v.Clouddns }).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare { return v.Cloudflare }).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01Output) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *string { return v.CnameStrategy }).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean { return v.Digitalocean }).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 { return v.Rfc2136 }).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 { return v.Route53 }).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01Output) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook { return v.Webhook }).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

type IssuerSpecAcmeSolversDns01PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutput() IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) ToIssuerSpecAcmeSolversDns01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01PtrOutput) Elem() IssuerSpecAcmeSolversDns01Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) IssuerSpecAcmeSolversDns01 { return *v }).(IssuerSpecAcmeSolversDns01Output)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Acmedns() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Acmedns {
		if v == nil {
			return nil
		}
		return v.Acmedns
	}).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Akamai() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Akamai {
		if v == nil {
			return nil
		}
		return v.Akamai
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Azuredns() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Azuredns {
		if v == nil {
			return nil
		}
		return v.Azuredns
	}).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Clouddns() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Clouddns {
		if v == nil {
			return nil
		}
		return v.Clouddns
	}).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Cloudflare() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Cloudflare {
		if v == nil {
			return nil
		}
		return v.Cloudflare
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
func (o IssuerSpecAcmeSolversDns01PtrOutput) CnameStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *string {
		if v == nil {
			return nil
		}
		return v.CnameStrategy
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Digitalocean() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Digitalocean {
		if v == nil {
			return nil
		}
		return v.Digitalocean
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Rfc2136() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Rfc2136 {
		if v == nil {
			return nil
		}
		return v.Rfc2136
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Route53() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Route53 {
		if v == nil {
			return nil
		}
		return v.Route53
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
func (o IssuerSpecAcmeSolversDns01PtrOutput) Webhook() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01) *IssuerSpecAcmeSolversDns01Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Acmedns struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef `pulumi:"accountSecretRef"`
	Host             string                                            `pulumi:"host"`
}

// IssuerSpecAcmeSolversDns01AcmednsInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsArgs and IssuerSpecAcmeSolversDns01AcmednsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsArgs{...}
type IssuerSpecAcmeSolversDns01AcmednsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput
	ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmednsArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccountSecretRef IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput `pulumi:"accountSecretRef"`
	Host             pulumi.StringInput                                     `pulumi:"host"`
}

func (IssuerSpecAcmeSolversDns01AcmednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsArgs) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsOutput).ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmednsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsArgs, IssuerSpecAcmeSolversDns01AcmednsPtr and IssuerSpecAcmeSolversDns01AcmednsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AcmednsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput
}

type issuerSpecAcmeSolversDns01AcmednsPtrType IssuerSpecAcmeSolversDns01AcmednsArgs

func IssuerSpecAcmeSolversDns01AcmednsPtr(v *IssuerSpecAcmeSolversDns01AcmednsArgs) IssuerSpecAcmeSolversDns01AcmednsPtrInput {
	return (*issuerSpecAcmeSolversDns01AcmednsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmednsPtrType) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmednsPtrType) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AcmednsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsOutput() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Acmedns) *IssuerSpecAcmeSolversDns01Acmedns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmednsPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmednsOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Acmedns) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return v.AccountSecretRef
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmednsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Acmedns) string { return v.Host }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmednsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Acmedns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutput() IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmednsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Acmedns) IssuerSpecAcmeSolversDns01Acmedns { return *v }).(IssuerSpecAcmeSolversDns01AcmednsOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) AccountSecretRef() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Acmedns) *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccountSecretRef
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AcmednsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Acmedns) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs and IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs, IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr and IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefArgs) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AcmednsAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Akamai struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef  IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain string                                               `pulumi:"serviceConsumerDomain"`
}

// IssuerSpecAcmeSolversDns01AkamaiInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs and IssuerSpecAcmeSolversDns01AkamaiOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput
	ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	AccessTokenSecretRef IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput `pulumi:"accessTokenSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput `pulumi:"clientSecretSecretRef"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ClientTokenSecretRef  IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput `pulumi:"clientTokenSecretRef"`
	ServiceConsumerDomain pulumi.StringInput                                        `pulumi:"serviceConsumerDomain"`
}

func (IssuerSpecAcmeSolversDns01AkamaiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiArgs) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiOutput).ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiArgs, IssuerSpecAcmeSolversDns01AkamaiPtr and IssuerSpecAcmeSolversDns01AkamaiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiPtrType IssuerSpecAcmeSolversDns01AkamaiArgs

func IssuerSpecAcmeSolversDns01AkamaiPtr(v *IssuerSpecAcmeSolversDns01AkamaiArgs) IssuerSpecAcmeSolversDns01AkamaiPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiPtrType) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// Use the Akamai DNS zone management API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AkamaiOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutput() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01Akamai {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return v.AccessTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return v.ClientTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiOutput) ServiceConsumerDomain() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Akamai) string { return v.ServiceConsumerDomain }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Akamai)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutput() IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) IssuerSpecAcmeSolversDns01Akamai { return *v }).(IssuerSpecAcmeSolversDns01AkamaiOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) AccessTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ClientTokenSecretRef() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ClientTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AkamaiPtrOutput) ServiceConsumerDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Akamai) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceConsumerDomain
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs, IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr and IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefArgs) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Azuredns struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID *string `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
	Environment           *string                                                  `pulumi:"environment"`
	HostedZoneName        *string                                                  `pulumi:"hostedZoneName"`
	ResourceGroupName     string                                                   `pulumi:"resourceGroupName"`
	SubscriptionID        string                                                   `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID *string `pulumi:"tenantID"`
}

// IssuerSpecAcmeSolversDns01AzurednsInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsArgs and IssuerSpecAcmeSolversDns01AzurednsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsArgs{...}
type IssuerSpecAcmeSolversDns01AzurednsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput
	ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzurednsArgs struct {
	// if both this and ClientSecret are left unset MSI will be used
	ClientID pulumi.StringPtrInput `pulumi:"clientID"`
	// if both this and ClientID are left unset MSI will be used
	ClientSecretSecretRef IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
	Environment           pulumi.StringPtrInput                                           `pulumi:"environment"`
	HostedZoneName        pulumi.StringPtrInput                                           `pulumi:"hostedZoneName"`
	ResourceGroupName     pulumi.StringInput                                              `pulumi:"resourceGroupName"`
	SubscriptionID        pulumi.StringInput                                              `pulumi:"subscriptionID"`
	// when specifying ClientID and ClientSecret then this field is also needed
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (IssuerSpecAcmeSolversDns01AzurednsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsOutput)
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsArgs) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsOutput).ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzurednsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsArgs, IssuerSpecAcmeSolversDns01AzurednsPtr and IssuerSpecAcmeSolversDns01AzurednsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AzurednsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput
	ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput
}

type issuerSpecAcmeSolversDns01AzurednsPtrType IssuerSpecAcmeSolversDns01AzurednsArgs

func IssuerSpecAcmeSolversDns01AzurednsPtr(v *IssuerSpecAcmeSolversDns01AzurednsArgs) IssuerSpecAcmeSolversDns01AzurednsPtrInput {
	return (*issuerSpecAcmeSolversDns01AzurednsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzurednsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzurednsPtrType) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzurednsPtrType) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01AzurednsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsOutput() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01Azuredns {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzurednsPtrOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.ClientID }).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsOutput) SubscriptionID() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) string { return v.SubscriptionID }).(pulumi.StringOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o IssuerSpecAcmeSolversDns01AzurednsOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Azuredns) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01AzurednsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Azuredns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutput() IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzurednsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) IssuerSpecAcmeSolversDns01Azuredns { return *v }).(IssuerSpecAcmeSolversDns01AzurednsOutput)
}

// if both this and ClientSecret are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.ClientID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ClientSecretSecretRef() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) SubscriptionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionID
	}).(pulumi.StringPtrOutput)
}

// when specifying ClientID and ClientSecret then this field is also needed
func (o IssuerSpecAcmeSolversDns01AzurednsPtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Azuredns) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs and IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs, IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr and IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefArgs) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// if both this and ClientID are left unset MSI will be used
type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Clouddns struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName *string `pulumi:"hostedZoneName"`
	Project        string  `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef `pulumi:"serviceAccountSecretRef"`
}

// IssuerSpecAcmeSolversDns01ClouddnsInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsArgs and IssuerSpecAcmeSolversDns01ClouddnsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsArgs{...}
type IssuerSpecAcmeSolversDns01ClouddnsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01ClouddnsArgs struct {
	// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
	HostedZoneName pulumi.StringPtrInput `pulumi:"hostedZoneName"`
	Project        pulumi.StringInput    `pulumi:"project"`
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	ServiceAccountSecretRef IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput `pulumi:"serviceAccountSecretRef"`
}

func (IssuerSpecAcmeSolversDns01ClouddnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsOutput)
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsArgs) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsOutput).ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01ClouddnsPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsArgs, IssuerSpecAcmeSolversDns01ClouddnsPtr and IssuerSpecAcmeSolversDns01ClouddnsPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01ClouddnsPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput
}

type issuerSpecAcmeSolversDns01ClouddnsPtrType IssuerSpecAcmeSolversDns01ClouddnsArgs

func IssuerSpecAcmeSolversDns01ClouddnsPtr(v *IssuerSpecAcmeSolversDns01ClouddnsArgs) IssuerSpecAcmeSolversDns01ClouddnsPtrInput {
	return (*issuerSpecAcmeSolversDns01ClouddnsPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01ClouddnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01ClouddnsPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01ClouddnsPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// Use the Google Cloud DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01ClouddnsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsOutput() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01Clouddns {
		return &v
	}).(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Clouddns) *string { return v.HostedZoneName }).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Clouddns) string { return v.Project }).(pulumi.StringOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01ClouddnsOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return v.ServiceAccountSecretRef
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01ClouddnsPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Clouddns)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Elem() IssuerSpecAcmeSolversDns01ClouddnsOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Clouddns) IssuerSpecAcmeSolversDns01Clouddns { return *v }).(IssuerSpecAcmeSolversDns01ClouddnsOutput)
}

// HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.
func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) HostedZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneName
	}).(pulumi.StringPtrOutput)
}

func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Clouddns) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01ClouddnsPtrOutput) ServiceAccountSecretRef() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Clouddns) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountSecretRef
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs and IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput).ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs, IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr and IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs

func IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtr(v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefArgs) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrType) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Cloudflare struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email *string `pulumi:"email"`
}

// IssuerSpecAcmeSolversDns01CloudflareInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs and IssuerSpecAcmeSolversDns01CloudflareOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput
	ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareArgs struct {
	// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
	ApiKeySecretRef IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput `pulumi:"apiKeySecretRef"`
	// API token used to authenticate with Cloudflare.
	ApiTokenSecretRef IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput `pulumi:"apiTokenSecretRef"`
	// Email of the account, only required when using API key based authentication.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (IssuerSpecAcmeSolversDns01CloudflareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareArgs) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareOutput).ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflarePtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareArgs, IssuerSpecAcmeSolversDns01CloudflarePtr and IssuerSpecAcmeSolversDns01CloudflarePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflarePtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflarePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput
}

type issuerSpecAcmeSolversDns01CloudflarePtrType IssuerSpecAcmeSolversDns01CloudflareArgs

func IssuerSpecAcmeSolversDns01CloudflarePtr(v *IssuerSpecAcmeSolversDns01CloudflareArgs) IssuerSpecAcmeSolversDns01CloudflarePtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflarePtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflarePtrType) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// Use the Cloudflare API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01CloudflareOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutput() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflareOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01Cloudflare {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflarePtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return v.ApiKeySecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return v.ApiTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflareOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Cloudflare) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversDns01CloudflarePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Cloudflare)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutput() IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ToIssuerSpecAcmeSolversDns01CloudflarePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflarePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) IssuerSpecAcmeSolversDns01Cloudflare { return *v }).(IssuerSpecAcmeSolversDns01CloudflareOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiKeySecretRef() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.ApiKeySecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) ApiTokenSecretRef() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ApiTokenSecretRef
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// Email of the account, only required when using API key based authentication.
func (o IssuerSpecAcmeSolversDns01CloudflarePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Cloudflare) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.
type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs, IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr and IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefArgs) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// API token used to authenticate with Cloudflare.
type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Digitalocean struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs and IssuerSpecAcmeSolversDns01DigitaloceanOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanArgs struct {
	// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
	TokenSecretRef IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanArgs, IssuerSpecAcmeSolversDns01DigitaloceanPtr and IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01DigitaloceanPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanPtrType IssuerSpecAcmeSolversDns01DigitaloceanArgs

func IssuerSpecAcmeSolversDns01DigitaloceanPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanArgs) IssuerSpecAcmeSolversDns01DigitaloceanPtrInput {
	return (*issuerSpecAcmeSolversDns01DigitaloceanPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// Use the DigitalOcean DNS API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01DigitaloceanOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutput() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01Digitalocean {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return v.TokenSecretRef
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Digitalocean)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Digitalocean) IssuerSpecAcmeSolversDns01Digitalocean { return *v }).(IssuerSpecAcmeSolversDns01DigitaloceanOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
func (o IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput) TokenSecretRef() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Digitalocean) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.TokenSecretRef
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput).ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs, IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr and IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs

func IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtr(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefArgs) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrType) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.
type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136 struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver string `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm *string `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName *string `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef `pulumi:"tsigSecretSecretRef"`
}

// IssuerSpecAcmeSolversDns01Rfc2136Input is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args and IssuerSpecAcmeSolversDns01Rfc2136Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136Input` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136Args{...}
type IssuerSpecAcmeSolversDns01Rfc2136Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output
	ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Args struct {
	// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
	Nameserver pulumi.StringInput `pulumi:"nameserver"`
	// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
	TsigAlgorithm pulumi.StringPtrInput `pulumi:"tsigAlgorithm"`
	// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
	TsigKeyName pulumi.StringPtrInput `pulumi:"tsigKeyName"`
	// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
	TsigSecretSecretRef IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput `pulumi:"tsigSecretSecretRef"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136Args) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136Output).ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136Args, IssuerSpecAcmeSolversDns01Rfc2136Ptr and IssuerSpecAcmeSolversDns01Rfc2136PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Rfc2136PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136PtrType IssuerSpecAcmeSolversDns01Rfc2136Args

func IssuerSpecAcmeSolversDns01Rfc2136Ptr(v *IssuerSpecAcmeSolversDns01Rfc2136Args) IssuerSpecAcmeSolversDns01Rfc2136PtrInput {
	return (*issuerSpecAcmeSolversDns01Rfc2136PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136PtrType) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Rfc2136Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136Output() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136Output) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) Nameserver() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) string { return v.Nameserver }).(pulumi.StringOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigAlgorithm }).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *string { return v.TsigKeyName }).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136Output) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return v.TsigSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutput() IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) IssuerSpecAcmeSolversDns01Rfc2136 { return *v }).(IssuerSpecAcmeSolversDns01Rfc2136Output)
}

// The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) Nameserver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return &v.Nameserver
	}).(pulumi.StringPtrOutput)
}

// The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *string {
		if v == nil {
			return nil
		}
		return v.TsigKeyName
	}).(pulumi.StringPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
func (o IssuerSpecAcmeSolversDns01Rfc2136PtrOutput) TsigSecretSecretRef() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.TsigSecretSecretRef
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput).ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs, IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr and IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs

func IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtr(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefArgs) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrType) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.
type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53 struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID *string `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID *string `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region string `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role *string `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// IssuerSpecAcmeSolversDns01Route53Input is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args and IssuerSpecAcmeSolversDns01Route53Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53Input` via:
//
//          IssuerSpecAcmeSolversDns01Route53Args{...}
type IssuerSpecAcmeSolversDns01Route53Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output
	ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53Output
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Args struct {
	// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	AccessKeyID pulumi.StringPtrInput `pulumi:"accessKeyID"`
	// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
	HostedZoneID pulumi.StringPtrInput `pulumi:"hostedZoneID"`
	// Always set the region when using AccessKeyID and SecretAccessKey
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	SecretAccessKeySecretRef IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (IssuerSpecAcmeSolversDns01Route53Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return i.ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output)
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53Args) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53Output).ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53PtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53Args, IssuerSpecAcmeSolversDns01Route53Ptr and IssuerSpecAcmeSolversDns01Route53PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53PtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Route53PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput
	ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput
}

type issuerSpecAcmeSolversDns01Route53PtrType IssuerSpecAcmeSolversDns01Route53Args

func IssuerSpecAcmeSolversDns01Route53Ptr(v *IssuerSpecAcmeSolversDns01Route53Args) IssuerSpecAcmeSolversDns01Route53PtrInput {
	return (*issuerSpecAcmeSolversDns01Route53PtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53PtrType) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// Use the AWS Route53 API to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Route53Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53Output() IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53Output {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53Output) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53 {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53PtrOutput)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.AccessKeyID }).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53Output) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.HostedZoneID }).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53Output) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53Output) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

type IssuerSpecAcmeSolversDns01Route53PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutput() IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) ToIssuerSpecAcmeSolversDns01Route53PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) IssuerSpecAcmeSolversDns01Route53 { return *v }).(IssuerSpecAcmeSolversDns01Route53Output)
}

// The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) AccessKeyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyID
	}).(pulumi.StringPtrOutput)
}

// If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) HostedZoneID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneID
	}).(pulumi.StringPtrOutput)
}

// Always set the region when using AccessKeyID and SecretAccessKey
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o IssuerSpecAcmeSolversDns01Route53PtrOutput) SecretAccessKeySecretRef() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput).ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs, IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr and IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
	ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput
}

type issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs

func IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtr(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefArgs) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrInput {
	return (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrType) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return &v
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) ToIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Elem() IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef {
		return *v
	}).(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01Webhook struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config map[string]interface{} `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName string `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName string `pulumi:"solverName"`
}

// IssuerSpecAcmeSolversDns01WebhookInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs and IssuerSpecAcmeSolversDns01WebhookOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookInput` via:
//
//          IssuerSpecAcmeSolversDns01WebhookArgs{...}
type IssuerSpecAcmeSolversDns01WebhookInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput
	ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookOutput
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookArgs struct {
	// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
	Config pulumi.MapInput `pulumi:"config"`
	// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
	SolverName pulumi.StringInput `pulumi:"solverName"`
}

func (IssuerSpecAcmeSolversDns01WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversDns01WebhookArgs) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookOutput).ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversDns01WebhookPtrInput is an input type that accepts IssuerSpecAcmeSolversDns01WebhookArgs, IssuerSpecAcmeSolversDns01WebhookPtr and IssuerSpecAcmeSolversDns01WebhookPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversDns01WebhookPtrInput` via:
//
//          IssuerSpecAcmeSolversDns01WebhookArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversDns01WebhookPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput
	ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput
}

type issuerSpecAcmeSolversDns01WebhookPtrType IssuerSpecAcmeSolversDns01WebhookArgs

func IssuerSpecAcmeSolversDns01WebhookPtr(v *IssuerSpecAcmeSolversDns01WebhookArgs) IssuerSpecAcmeSolversDns01WebhookPtrInput {
	return (*issuerSpecAcmeSolversDns01WebhookPtrType)(v)
}

func (*issuerSpecAcmeSolversDns01WebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return i.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversDns01WebhookPtrType) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
type IssuerSpecAcmeSolversDns01WebhookOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutput() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversDns01WebhookOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) *IssuerSpecAcmeSolversDns01Webhook {
		return &v
	}).(IssuerSpecAcmeSolversDns01WebhookPtrOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) string { return v.GroupName }).(pulumi.StringOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookOutput) SolverName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversDns01Webhook) string { return v.SolverName }).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversDns01WebhookPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversDns01WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversDns01Webhook)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutput() IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) ToIssuerSpecAcmeSolversDns01WebhookPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversDns01WebhookPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Elem() IssuerSpecAcmeSolversDns01WebhookOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) IssuerSpecAcmeSolversDns01Webhook { return *v }).(IssuerSpecAcmeSolversDns01WebhookOutput)
}

// Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.
func (o IssuerSpecAcmeSolversDns01WebhookPtrOutput) SolverName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversDns01Webhook) *string {
		if v == nil {
			return nil
		}
		return &v.SolverName
	}).(pulumi.StringPtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01 struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress *IssuerSpecAcmeSolversHttp01Ingress `pulumi:"ingress"`
}

// IssuerSpecAcmeSolversHttp01Input is an input type that accepts IssuerSpecAcmeSolversHttp01Args and IssuerSpecAcmeSolversHttp01Output values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01Input` via:
//
//          IssuerSpecAcmeSolversHttp01Args{...}
type IssuerSpecAcmeSolversHttp01Input interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output
	ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01Output
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Args struct {
	// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
	Ingress IssuerSpecAcmeSolversHttp01IngressPtrInput `pulumi:"ingress"`
}

func (IssuerSpecAcmeSolversHttp01Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return i.ToIssuerSpecAcmeSolversHttp01OutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output)
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01Args) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01Output).ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01PtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01Args, IssuerSpecAcmeSolversHttp01Ptr and IssuerSpecAcmeSolversHttp01PtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01PtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01Args{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01PtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput
	ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01PtrOutput
}

type issuerSpecAcmeSolversHttp01PtrType IssuerSpecAcmeSolversHttp01Args

func IssuerSpecAcmeSolversHttp01Ptr(v *IssuerSpecAcmeSolversHttp01Args) IssuerSpecAcmeSolversHttp01PtrInput {
	return (*issuerSpecAcmeSolversHttp01PtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01PtrType) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
type IssuerSpecAcmeSolversHttp01Output struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01Output() IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01OutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01Output {
	return o
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01Output) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01 {
		return &v
	}).(IssuerSpecAcmeSolversHttp01PtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01Output) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress { return v.Ingress }).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

type IssuerSpecAcmeSolversHttp01PtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutput() IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) ToIssuerSpecAcmeSolversHttp01PtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01PtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01PtrOutput) Elem() IssuerSpecAcmeSolversHttp01Output {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01) IssuerSpecAcmeSolversHttp01 { return *v }).(IssuerSpecAcmeSolversHttp01Output)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
func (o IssuerSpecAcmeSolversHttp01PtrOutput) Ingress() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01) *IssuerSpecAcmeSolversHttp01Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01Ingress struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class *string `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate *IssuerSpecAcmeSolversHttp01IngressIngressTemplate `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name *string `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate *IssuerSpecAcmeSolversHttp01IngressPodTemplate `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType *string `pulumi:"serviceType"`
}

// IssuerSpecAcmeSolversHttp01IngressInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs and IssuerSpecAcmeSolversHttp01IngressOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressArgs{...}
type IssuerSpecAcmeSolversHttp01IngressInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput
	ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressOutput
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressArgs struct {
	// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
	IngressTemplate IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput `pulumi:"ingressTemplate"`
	// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
	PodTemplate IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput `pulumi:"podTemplate"`
	// Optional service type for Kubernetes solver service
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

func (IssuerSpecAcmeSolversHttp01IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressArgs) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressOutput).ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressArgs, IssuerSpecAcmeSolversHttp01IngressPtr and IssuerSpecAcmeSolversHttp01IngressPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPtrType IssuerSpecAcmeSolversHttp01IngressArgs

func IssuerSpecAcmeSolversHttp01IngressPtr(v *IssuerSpecAcmeSolversHttp01IngressArgs) IssuerSpecAcmeSolversHttp01IngressPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPtrType) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.
type IssuerSpecAcmeSolversHttp01IngressOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutput() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01Ingress {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPtrOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o IssuerSpecAcmeSolversHttp01IngressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o IssuerSpecAcmeSolversHttp01IngressOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01Ingress) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01Ingress)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutput() IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) IssuerSpecAcmeSolversHttp01Ingress { return *v }).(IssuerSpecAcmeSolversHttp01IngressOutput)
}

// The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Class
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) IngressTemplate() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		if v == nil {
			return nil
		}
		return v.IngressTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) PodTemplate() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional service type for Kubernetes solver service
func (o IssuerSpecAcmeSolversHttp01IngressPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01Ingress) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplate struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata `pulumi:"metadata"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs struct {
	// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) IssuerSpecAcmeSolversHttp01IngressIngressTemplate {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplate) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs struct {
	// Annotations that should be added to the created ACME HTTP01 solver ingress.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver ingress.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations struct {
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput)
}

// Annotations that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput {
	return o
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs and IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput)
}

// Labels that should be added to the created ACME HTTP01 solver ingress.
type IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput {
	return o
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplate struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec `pulumi:"spec"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs struct {
	// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
	Metadata IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput `pulumi:"metadata"`
	// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
	Spec IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput `pulumi:"spec"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr and IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplatePtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplatePtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges
type IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplate)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) IssuerSpecAcmeSolversHttp01IngressPodTemplate {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Metadata() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput) Spec() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplate) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations map[string]string `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels map[string]string `pulumi:"labels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs struct {
	// Annotations that should be added to the create ACME HTTP01 solver pods.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Labels that should be added to the created ACME HTTP01 solver pods.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput)
}

// Annotations that should be added to the create ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput {
	return o
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput)
}

// Labels that should be added to the created ACME HTTP01 solver pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput {
	return o
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec struct {
	// If specified, the pod's scheduling constraints
	Affinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector map[string]string `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName *string `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations `pulumi:"tolerations"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs struct {
	// If specified, the pod's scheduling constraints
	Affinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput `pulumi:"affinity"`
	// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
	NodeSelector pulumi.StringMapInput `pulumi:"nodeSelector"`
	// If specified, the pod's priorityClassName.
	PriorityClassName pulumi.StringPtrInput `pulumi:"priorityClassName"`
	// If specified, the pod's service account
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// If specified, the pod's tolerations.
	Tolerations IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput `pulumi:"tolerations"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput)
}

// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string { return v.NodeSelector }).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.PriorityClassName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput)
}

// If specified, the pod's scheduling constraints
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Affinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) NodeSelector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.StringMapOutput)
}

// If specified, the pod's priorityClassName.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) PriorityClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.PriorityClassName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's service account
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// If specified, the pod's tolerations.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput) Tolerations() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpec) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		if v == nil {
			return nil
		}
		return v.Tolerations
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity `pulumi:"podAntiAffinity"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput `pulumi:"nodeAffinity"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput `pulumi:"podAffinity"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput `pulumi:"podAntiAffinity"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// If specified, the pod's scheduling constraints
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput)
}

// Describes node affinity scheduling rules for the pod.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) NodeAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		if v == nil {
			return nil
		}
		return v.NodeAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		if v == nil {
			return nil
		}
		return v.PodAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput) PodAntiAffinity() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		if v == nil {
			return nil
		}
		return v.PodAntiAffinity
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// Describes node affinity scheduling rules for the pod.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A node selector term, associated with the corresponding weight.
	Preference IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput `pulumi:"preference"`
	// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A node selector term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Preference() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
		return v.Preference
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput)
}

// A node selector term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms `pulumi:"nodeSelectorTerms"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A list of node selector terms. The terms are ORed.
	NodeSelectorTerms IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput `pulumi:"nodeSelectorTerms"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A list of node selector terms. The terms are ORed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput) NodeSelectorTerms() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		if v == nil {
			return nil
		}
		return v.NodeSelectorTerms
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields `pulumi:"matchFields"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs struct {
	// A list of node selector requirements by node's labels.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// A list of node selector requirements by node's fields.
	MatchFields IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput `pulumi:"matchFields"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput)
}

// A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return o
}

// A list of node selector requirements by node's labels.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A list of node selector requirements by node's fields.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput) MatchFields() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return v.MatchFields
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields struct {
	// The label key that the selector applies to.
	Key string `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator string `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs struct {
	// The label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput)
}

// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return o
}

// The label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"preferredDuringSchedulingIgnoredDuringExecution"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput `pulumi:"requiredDuringSchedulingIgnoredDuringExecution"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput)
}

// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) PreferredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.PreferredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput) RequiredDuringSchedulingIgnoredDuringExecution() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinity) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		if v == nil {
			return nil
		}
		return v.RequiredDuringSchedulingIgnoredDuringExecution
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int `pulumi:"weight"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// Required. A pod affinity term, associated with the corresponding weight.
	PodAffinityTerm IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput `pulumi:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// Required. A pod affinity term, associated with the corresponding weight.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) PodAffinityTerm() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
		return v.PodAffinityTerm
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution) int {
		return v.Weight
	}).(pulumi.IntOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput)
}

// Required. A pod affinity term, associated with the corresponding weight.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput {
	return o
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces []string `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey string `pulumi:"topologyKey"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs struct {
	// A label query over a set of resources, in this case pods.
	LabelSelector IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput `pulumi:"labelSelector"`
	// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput)
}

// Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return o
}

// A label query over a set of resources, in this case pods.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) LabelSelector() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return v.LabelSelector
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) []string {
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution) string {
		return v.TopologyKey
	}).(pulumi.StringOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput).ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs, IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput
}

type issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs

func IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtr(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorArgs) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrInput {
	return (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrType) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// A label query over a set of resources, in this case pods.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return &v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) Elem() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
		return *v
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchExpressions() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput {
	return o
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector struct {
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs struct {
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput {
	return o
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...}
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput is an input type that accepts IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray and IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput` via:
//
//          IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray{ IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArgs{...} }
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
	ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray []IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsInput

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return i.ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArray) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput() IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) ToIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput {
	return o
}

func (o IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations {
		return vs[0].([]IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerations)[vs[1].(int)]
	}).(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelector struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames []string `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones []string `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// IssuerSpecAcmeSolversSelectorInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs and IssuerSpecAcmeSolversSelectorOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorInput` via:
//
//          IssuerSpecAcmeSolversSelectorArgs{...}
type IssuerSpecAcmeSolversSelectorInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput
	ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorOutput
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelectorArgs struct {
	// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
	DnsZones pulumi.StringArrayInput `pulumi:"dnsZones"`
	// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (IssuerSpecAcmeSolversSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return i.ToIssuerSpecAcmeSolversSelectorOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput)
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorArgs) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorOutput).ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx)
}

// IssuerSpecAcmeSolversSelectorPtrInput is an input type that accepts IssuerSpecAcmeSolversSelectorArgs, IssuerSpecAcmeSolversSelectorPtr and IssuerSpecAcmeSolversSelectorPtrOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorPtrInput` via:
//
//          IssuerSpecAcmeSolversSelectorArgs{...}
//
//  or:
//
//          nil
type IssuerSpecAcmeSolversSelectorPtrInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput
	ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorPtrOutput
}

type issuerSpecAcmeSolversSelectorPtrType IssuerSpecAcmeSolversSelectorArgs

func IssuerSpecAcmeSolversSelectorPtr(v *IssuerSpecAcmeSolversSelectorArgs) IssuerSpecAcmeSolversSelectorPtrInput {
	return (*issuerSpecAcmeSolversSelectorPtrType)(v)
}

func (*issuerSpecAcmeSolversSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return i.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (i *issuerSpecAcmeSolversSelectorPtrType) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.
type IssuerSpecAcmeSolversSelectorOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutput() IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(context.Background())
}

func (o IssuerSpecAcmeSolversSelectorOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) *IssuerSpecAcmeSolversSelector {
		return &v
	}).(IssuerSpecAcmeSolversSelectorPtrOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) []string { return v.DnsZones }).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v IssuerSpecAcmeSolversSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type IssuerSpecAcmeSolversSelectorPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecAcmeSolversSelector)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutput() IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) ToIssuerSpecAcmeSolversSelectorPtrOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorPtrOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorPtrOutput) Elem() IssuerSpecAcmeSolversSelectorOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) IssuerSpecAcmeSolversSelector { return *v }).(IssuerSpecAcmeSolversSelectorOutput)
}

// List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) DnsZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) []string {
		if v == nil {
			return nil
		}
		return v.DnsZones
	}).(pulumi.StringArrayOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
func (o IssuerSpecAcmeSolversSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IssuerSpecAcmeSolversSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type IssuerSpecAcmeSolversSelectorMatchLabels struct {
}

// IssuerSpecAcmeSolversSelectorMatchLabelsInput is an input type that accepts IssuerSpecAcmeSolversSelectorMatchLabelsArgs and IssuerSpecAcmeSolversSelectorMatchLabelsOutput values.
// You can construct a concrete instance of `IssuerSpecAcmeSolversSelectorMatchLabelsInput` via:
//
//          IssuerSpecAcmeSolversSelectorMatchLabelsArgs{...}
type IssuerSpecAcmeSolversSelectorMatchLabelsInput interface {
	pulumi.Input

	ToIssuerSpecAcmeSolversSelectorMatchLabelsOutput() IssuerSpecAcmeSolversSelectorMatchLabelsOutput
	ToIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(context.Context) IssuerSpecAcmeSolversSelectorMatchLabelsOutput
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type IssuerSpecAcmeSolversSelectorMatchLabelsArgs struct {
}

func (IssuerSpecAcmeSolversSelectorMatchLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelectorMatchLabels)(nil)).Elem()
}

func (i IssuerSpecAcmeSolversSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversSelectorMatchLabelsOutput() IssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return i.ToIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(context.Background())
}

func (i IssuerSpecAcmeSolversSelectorMatchLabelsArgs) ToIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecAcmeSolversSelectorMatchLabelsOutput)
}

// A label selector that is used to refine the set of certificate's that this challenge solver will apply to.
type IssuerSpecAcmeSolversSelectorMatchLabelsOutput struct{ *pulumi.OutputState }

func (IssuerSpecAcmeSolversSelectorMatchLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecAcmeSolversSelectorMatchLabels)(nil)).Elem()
}

func (o IssuerSpecAcmeSolversSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversSelectorMatchLabelsOutput() IssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return o
}

func (o IssuerSpecAcmeSolversSelectorMatchLabelsOutput) ToIssuerSpecAcmeSolversSelectorMatchLabelsOutputWithContext(ctx context.Context) IssuerSpecAcmeSolversSelectorMatchLabelsOutput {
	return o
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCa struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName string `pulumi:"secretName"`
}

// IssuerSpecCaInput is an input type that accepts IssuerSpecCaArgs and IssuerSpecCaOutput values.
// You can construct a concrete instance of `IssuerSpecCaInput` via:
//
//          IssuerSpecCaArgs{...}
type IssuerSpecCaInput interface {
	pulumi.Input

	ToIssuerSpecCaOutput() IssuerSpecCaOutput
	ToIssuerSpecCaOutputWithContext(context.Context) IssuerSpecCaOutput
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
	// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (IssuerSpecCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return i.ToIssuerSpecCaOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput)
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i IssuerSpecCaArgs) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaOutput).ToIssuerSpecCaPtrOutputWithContext(ctx)
}

// IssuerSpecCaPtrInput is an input type that accepts IssuerSpecCaArgs, IssuerSpecCaPtr and IssuerSpecCaPtrOutput values.
// You can construct a concrete instance of `IssuerSpecCaPtrInput` via:
//
//          IssuerSpecCaArgs{...}
//
//  or:
//
//          nil
type IssuerSpecCaPtrInput interface {
	pulumi.Input

	ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput
	ToIssuerSpecCaPtrOutputWithContext(context.Context) IssuerSpecCaPtrOutput
}

type issuerSpecCaPtrType IssuerSpecCaArgs

func IssuerSpecCaPtr(v *IssuerSpecCaArgs) IssuerSpecCaPtrInput {
	return (*issuerSpecCaPtrType)(v)
}

func (*issuerSpecCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return i.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (i *issuerSpecCaPtrType) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecCaPtrOutput)
}

// CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.
type IssuerSpecCaOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutput() IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaOutputWithContext(ctx context.Context) IssuerSpecCaOutput {
	return o
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o.ToIssuerSpecCaPtrOutputWithContext(context.Background())
}

func (o IssuerSpecCaOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o.ApplyT(func(v IssuerSpecCa) *IssuerSpecCa {
		return &v
	}).(IssuerSpecCaPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecCa) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o IssuerSpecCaOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecCa) string { return v.SecretName }).(pulumi.StringOutput)
}

type IssuerSpecCaPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecCa)(nil)).Elem()
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutput() IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) ToIssuerSpecCaPtrOutputWithContext(ctx context.Context) IssuerSpecCaPtrOutput {
	return o
}

func (o IssuerSpecCaPtrOutput) Elem() IssuerSpecCaOutput {
	return o.ApplyT(func(v *IssuerSpecCa) IssuerSpecCa { return *v }).(IssuerSpecCaOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.
func (o IssuerSpecCaPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecCa) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// SecretName is the name of the secret used to sign Certificates issued by this Issuer.
func (o IssuerSpecCaPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecCa) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSigned struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints []string `pulumi:"crlDistributionPoints"`
}

// IssuerSpecSelfSignedInput is an input type that accepts IssuerSpecSelfSignedArgs and IssuerSpecSelfSignedOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedInput` via:
//
//          IssuerSpecSelfSignedArgs{...}
type IssuerSpecSelfSignedInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput
	ToIssuerSpecSelfSignedOutputWithContext(context.Context) IssuerSpecSelfSignedOutput
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedArgs struct {
	// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
	CrlDistributionPoints pulumi.StringArrayInput `pulumi:"crlDistributionPoints"`
}

func (IssuerSpecSelfSignedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return i.ToIssuerSpecSelfSignedOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput)
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i IssuerSpecSelfSignedArgs) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedOutput).ToIssuerSpecSelfSignedPtrOutputWithContext(ctx)
}

// IssuerSpecSelfSignedPtrInput is an input type that accepts IssuerSpecSelfSignedArgs, IssuerSpecSelfSignedPtr and IssuerSpecSelfSignedPtrOutput values.
// You can construct a concrete instance of `IssuerSpecSelfSignedPtrInput` via:
//
//          IssuerSpecSelfSignedArgs{...}
//
//  or:
//
//          nil
type IssuerSpecSelfSignedPtrInput interface {
	pulumi.Input

	ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput
	ToIssuerSpecSelfSignedPtrOutputWithContext(context.Context) IssuerSpecSelfSignedPtrOutput
}

type issuerSpecSelfSignedPtrType IssuerSpecSelfSignedArgs

func IssuerSpecSelfSignedPtr(v *IssuerSpecSelfSignedArgs) IssuerSpecSelfSignedPtrInput {
	return (*issuerSpecSelfSignedPtrType)(v)
}

func (*issuerSpecSelfSignedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return i.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (i *issuerSpecSelfSignedPtrType) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecSelfSignedPtrOutput)
}

// SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.
type IssuerSpecSelfSignedOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutput() IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedOutputWithContext(ctx context.Context) IssuerSpecSelfSignedOutput {
	return o
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o.ToIssuerSpecSelfSignedPtrOutputWithContext(context.Background())
}

func (o IssuerSpecSelfSignedOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o.ApplyT(func(v IssuerSpecSelfSigned) *IssuerSpecSelfSigned {
		return &v
	}).(IssuerSpecSelfSignedPtrOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IssuerSpecSelfSigned) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

type IssuerSpecSelfSignedPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecSelfSignedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecSelfSigned)(nil)).Elem()
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutput() IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) ToIssuerSpecSelfSignedPtrOutputWithContext(ctx context.Context) IssuerSpecSelfSignedPtrOutput {
	return o
}

func (o IssuerSpecSelfSignedPtrOutput) Elem() IssuerSpecSelfSignedOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) IssuerSpecSelfSigned { return *v }).(IssuerSpecSelfSignedOutput)
}

// The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.
func (o IssuerSpecSelfSignedPtrOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IssuerSpecSelfSigned) []string {
		if v == nil {
			return nil
		}
		return v.CrlDistributionPoints
	}).(pulumi.StringArrayOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVault struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path string `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
}

// IssuerSpecVaultInput is an input type that accepts IssuerSpecVaultArgs and IssuerSpecVaultOutput values.
// You can construct a concrete instance of `IssuerSpecVaultInput` via:
//
//          IssuerSpecVaultArgs{...}
type IssuerSpecVaultInput interface {
	pulumi.Input

	ToIssuerSpecVaultOutput() IssuerSpecVaultOutput
	ToIssuerSpecVaultOutputWithContext(context.Context) IssuerSpecVaultOutput
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVaultArgs struct {
	// Auth configures how cert-manager authenticates with the Vault server.
	Auth IssuerSpecVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
	Path pulumi.StringInput `pulumi:"path"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
}

func (IssuerSpecVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return i.ToIssuerSpecVaultOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput)
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultArgs) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultOutput).ToIssuerSpecVaultPtrOutputWithContext(ctx)
}

// IssuerSpecVaultPtrInput is an input type that accepts IssuerSpecVaultArgs, IssuerSpecVaultPtr and IssuerSpecVaultPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultPtrInput` via:
//
//          IssuerSpecVaultArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput
	ToIssuerSpecVaultPtrOutputWithContext(context.Context) IssuerSpecVaultPtrOutput
}

type issuerSpecVaultPtrType IssuerSpecVaultArgs

func IssuerSpecVaultPtr(v *IssuerSpecVaultArgs) IssuerSpecVaultPtrInput {
	return (*issuerSpecVaultPtrType)(v)
}

func (*issuerSpecVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return i.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultPtrType) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultPtrOutput)
}

// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
type IssuerSpecVaultOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutput() IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultOutputWithContext(ctx context.Context) IssuerSpecVaultOutput {
	return o
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o.ToIssuerSpecVaultPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *IssuerSpecVault {
		return &v
	}).(IssuerSpecVaultPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultOutput) Auth() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v IssuerSpecVault) IssuerSpecVaultAuth { return v.Auth }).(IssuerSpecVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o IssuerSpecVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVault) string { return v.Path }).(pulumi.StringOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVault) string { return v.Server }).(pulumi.StringOutput)
}

type IssuerSpecVaultPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVault)(nil)).Elem()
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutput() IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) ToIssuerSpecVaultPtrOutputWithContext(ctx context.Context) IssuerSpecVaultPtrOutput {
	return o
}

func (o IssuerSpecVaultPtrOutput) Elem() IssuerSpecVaultOutput {
	return o.ApplyT(func(v *IssuerSpecVault) IssuerSpecVault { return *v }).(IssuerSpecVaultOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
func (o IssuerSpecVaultPtrOutput) Auth() IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *IssuerSpecVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(IssuerSpecVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
func (o IssuerSpecVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o IssuerSpecVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
func (o IssuerSpecVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o IssuerSpecVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole *IssuerSpecVaultAuthAppRole `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes *IssuerSpecVaultAuthKubernetes `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *IssuerSpecVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// IssuerSpecVaultAuthInput is an input type that accepts IssuerSpecVaultAuthArgs and IssuerSpecVaultAuthOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthInput` via:
//
//          IssuerSpecVaultAuthArgs{...}
type IssuerSpecVaultAuthInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput
	ToIssuerSpecVaultAuthOutputWithContext(context.Context) IssuerSpecVaultAuthOutput
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
	AppRole IssuerSpecVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
	Kubernetes IssuerSpecVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef IssuerSpecVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

func (IssuerSpecVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return i.ToIssuerSpecVaultAuthOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput)
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthArgs) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthOutput).ToIssuerSpecVaultAuthPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthPtrInput is an input type that accepts IssuerSpecVaultAuthArgs, IssuerSpecVaultAuthPtr and IssuerSpecVaultAuthPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthPtrInput` via:
//
//          IssuerSpecVaultAuthArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput
	ToIssuerSpecVaultAuthPtrOutputWithContext(context.Context) IssuerSpecVaultAuthPtrOutput
}

type issuerSpecVaultAuthPtrType IssuerSpecVaultAuthArgs

func IssuerSpecVaultAuthPtr(v *IssuerSpecVaultAuthArgs) IssuerSpecVaultAuthPtrInput {
	return (*issuerSpecVaultAuthPtrType)(v)
}

func (*issuerSpecVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return i.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthPtrType) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthPtrOutput)
}

// Auth configures how cert-manager authenticates with the Vault server.
type IssuerSpecVaultAuthOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutput() IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthOutputWithContext(ctx context.Context) IssuerSpecVaultAuthOutput {
	return o
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o.ToIssuerSpecVaultAuthPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuth {
		return &v
	}).(IssuerSpecVaultAuthPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole { return v.AppRole }).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes { return v.Kubernetes }).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef { return v.TokenSecretRef }).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

type IssuerSpecVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuth)(nil)).Elem()
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutput() IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) ToIssuerSpecVaultAuthPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthPtrOutput) Elem() IssuerSpecVaultAuthOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) IssuerSpecVaultAuth { return *v }).(IssuerSpecVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
func (o IssuerSpecVaultAuthPtrOutput) AppRole() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
func (o IssuerSpecVaultAuthPtrOutput) Kubernetes() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o IssuerSpecVaultAuthPtrOutput) TokenSecretRef() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuth) *IssuerSpecVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthAppRoleInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs and IssuerSpecVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleInput` via:
//
//          IssuerSpecVaultAuthAppRoleArgs{...}
type IssuerSpecVaultAuthAppRoleInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput
	ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
	SecretRef IssuerSpecVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return i.ToIssuerSpecVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput)
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleArgs) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleOutput).ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRolePtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleArgs, IssuerSpecVaultAuthAppRolePtr and IssuerSpecVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRolePtrInput` via:
//
//          IssuerSpecVaultAuthAppRoleArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput
	ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRolePtrOutput
}

type issuerSpecVaultAuthAppRolePtrType IssuerSpecVaultAuthAppRoleArgs

func IssuerSpecVaultAuthAppRolePtr(v *IssuerSpecVaultAuthAppRoleArgs) IssuerSpecVaultAuthAppRolePtrInput {
	return (*issuerSpecVaultAuthAppRolePtrType)(v)
}

func (*issuerSpecVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return i.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRolePtrType) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
type IssuerSpecVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutput() IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRoleOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRole {
		return &v
	}).(IssuerSpecVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o IssuerSpecVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRoleOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRoleSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

type IssuerSpecVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRole)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutput() IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) ToIssuerSpecVaultAuthAppRolePtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRolePtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRolePtrOutput) Elem() IssuerSpecVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) IssuerSpecVaultAuthAppRole { return *v }).(IssuerSpecVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted in Vault, e.g: "approle"
func (o IssuerSpecVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
func (o IssuerSpecVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
func (o IssuerSpecVaultAuthAppRolePtrOutput) SecretRef() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRole) *IssuerSpecVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthAppRoleSecretRefInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs and IssuerSpecVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefInput` via:
//
//          IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
type IssuerSpecVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthAppRoleSecretRefArgs) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefOutput).ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthAppRoleSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthAppRoleSecretRefArgs, IssuerSpecVaultAuthAppRoleSecretRefPtr and IssuerSpecVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthAppRoleSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthAppRoleSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
	ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput
}

type issuerSpecVaultAuthAppRoleSecretRefPtrType IssuerSpecVaultAuthAppRoleSecretRefArgs

func IssuerSpecVaultAuthAppRoleSecretRefPtr(v *IssuerSpecVaultAuthAppRoleSecretRefArgs) IssuerSpecVaultAuthAppRoleSecretRefPtrInput {
	return (*issuerSpecVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthAppRoleSecretRefPtrType) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
type IssuerSpecVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutput() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *IssuerSpecVaultAuthAppRoleSecretRef {
		return &v
	}).(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthAppRoleSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutput() IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) ToIssuerSpecVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Elem() IssuerSpecVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) IssuerSpecVaultAuthAppRoleSecretRef { return *v }).(IssuerSpecVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetes struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef IssuerSpecVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
}

// IssuerSpecVaultAuthKubernetesInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs and IssuerSpecVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesInput` via:
//
//          IssuerSpecVaultAuthKubernetesArgs{...}
type IssuerSpecVaultAuthKubernetesInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput
	ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesArgs struct {
	// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
	SecretRef IssuerSpecVaultAuthKubernetesSecretRefInput `pulumi:"secretRef"`
}

func (IssuerSpecVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return i.ToIssuerSpecVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput)
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesArgs) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesOutput).ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesArgs, IssuerSpecVaultAuthKubernetesPtr and IssuerSpecVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesPtrInput` via:
//
//          IssuerSpecVaultAuthKubernetesArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput
	ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesPtrOutput
}

type issuerSpecVaultAuthKubernetesPtrType IssuerSpecVaultAuthKubernetesArgs

func IssuerSpecVaultAuthKubernetesPtr(v *IssuerSpecVaultAuthKubernetesArgs) IssuerSpecVaultAuthKubernetesPtrInput {
	return (*issuerSpecVaultAuthKubernetesPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesPtrType) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
type IssuerSpecVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutput() IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetes {
		return &v
	}).(IssuerSpecVaultAuthKubernetesPtrOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o IssuerSpecVaultAuthKubernetesOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetesSecretRef { return v.SecretRef }).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

type IssuerSpecVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetes)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutput() IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) ToIssuerSpecVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesPtrOutput) Elem() IssuerSpecVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) IssuerSpecVaultAuthKubernetes { return *v }).(IssuerSpecVaultAuthKubernetesOutput)
}

// The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value "/v1/auth/kubernetes" will be used.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
func (o IssuerSpecVaultAuthKubernetesPtrOutput) SecretRef() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetes) *IssuerSpecVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthKubernetesSecretRefInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs and IssuerSpecVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefInput` via:
//
//          IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
type IssuerSpecVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthKubernetesSecretRefArgs) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefOutput).ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthKubernetesSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthKubernetesSecretRefArgs, IssuerSpecVaultAuthKubernetesSecretRefPtr and IssuerSpecVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthKubernetesSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthKubernetesSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
	ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput
}

type issuerSpecVaultAuthKubernetesSecretRefPtrType IssuerSpecVaultAuthKubernetesSecretRefArgs

func IssuerSpecVaultAuthKubernetesSecretRefPtr(v *IssuerSpecVaultAuthKubernetesSecretRefArgs) IssuerSpecVaultAuthKubernetesSecretRefPtrInput {
	return (*issuerSpecVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthKubernetesSecretRefPtrType) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.
type IssuerSpecVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutput() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *IssuerSpecVaultAuthKubernetesSecretRef {
		return &v
	}).(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthKubernetesSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutput() IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) ToIssuerSpecVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Elem() IssuerSpecVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) IssuerSpecVaultAuthKubernetesSecretRef { return *v }).(IssuerSpecVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVaultAuthTokenSecretRefInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs and IssuerSpecVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefInput` via:
//
//          IssuerSpecVaultAuthTokenSecretRefArgs{...}
type IssuerSpecVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput
	ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVaultAuthTokenSecretRefArgs) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefOutput).ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVaultAuthTokenSecretRefPtrInput is an input type that accepts IssuerSpecVaultAuthTokenSecretRefArgs, IssuerSpecVaultAuthTokenSecretRefPtr and IssuerSpecVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVaultAuthTokenSecretRefPtrInput` via:
//
//          IssuerSpecVaultAuthTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput
	ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput
}

type issuerSpecVaultAuthTokenSecretRefPtrType IssuerSpecVaultAuthTokenSecretRefArgs

func IssuerSpecVaultAuthTokenSecretRefPtr(v *IssuerSpecVaultAuthTokenSecretRefArgs) IssuerSpecVaultAuthTokenSecretRefPtrInput {
	return (*issuerSpecVaultAuthTokenSecretRefPtrType)(v)
}

func (*issuerSpecVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVaultAuthTokenSecretRefPtrType) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type IssuerSpecVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutput() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVaultAuthTokenSecretRefOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *IssuerSpecVaultAuthTokenSecretRef {
		return &v
	}).(IssuerSpecVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVaultAuthTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutput() IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) ToIssuerSpecVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Elem() IssuerSpecVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) IssuerSpecVaultAuthTokenSecretRef { return *v }).(IssuerSpecVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafi struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud *IssuerSpecVenafiCloud `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp *IssuerSpecVenafiTpp `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone string `pulumi:"zone"`
}

// IssuerSpecVenafiInput is an input type that accepts IssuerSpecVenafiArgs and IssuerSpecVenafiOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiInput` via:
//
//          IssuerSpecVenafiArgs{...}
type IssuerSpecVenafiInput interface {
	pulumi.Input

	ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput
	ToIssuerSpecVenafiOutputWithContext(context.Context) IssuerSpecVenafiOutput
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafiArgs struct {
	// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
	Cloud IssuerSpecVenafiCloudPtrInput `pulumi:"cloud"`
	// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
	Tpp IssuerSpecVenafiTppPtrInput `pulumi:"tpp"`
	// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (IssuerSpecVenafiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return i.ToIssuerSpecVenafiOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput)
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiArgs) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiOutput).ToIssuerSpecVenafiPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiPtrInput is an input type that accepts IssuerSpecVenafiArgs, IssuerSpecVenafiPtr and IssuerSpecVenafiPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiPtrInput` via:
//
//          IssuerSpecVenafiArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput
	ToIssuerSpecVenafiPtrOutputWithContext(context.Context) IssuerSpecVenafiPtrOutput
}

type issuerSpecVenafiPtrType IssuerSpecVenafiArgs

func IssuerSpecVenafiPtr(v *IssuerSpecVenafiArgs) IssuerSpecVenafiPtrInput {
	return (*issuerSpecVenafiPtrType)(v)
}

func (*issuerSpecVenafiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return i.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiPtrType) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiPtrOutput)
}

// Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.
type IssuerSpecVenafiOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutput() IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiOutputWithContext(ctx context.Context) IssuerSpecVenafiOutput {
	return o
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o.ToIssuerSpecVenafiPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafi {
		return &v
	}).(IssuerSpecVenafiPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiCloud { return v.Cloud }).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) *IssuerSpecVenafiTpp { return v.Tpp }).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o IssuerSpecVenafiOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafi) string { return v.Zone }).(pulumi.StringOutput)
}

type IssuerSpecVenafiPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafi)(nil)).Elem()
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutput() IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) ToIssuerSpecVenafiPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiPtrOutput {
	return o
}

func (o IssuerSpecVenafiPtrOutput) Elem() IssuerSpecVenafiOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) IssuerSpecVenafi { return *v }).(IssuerSpecVenafiOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Cloud() IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiCloud {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(IssuerSpecVenafiCloudPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
func (o IssuerSpecVenafiPtrOutput) Tpp() IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *IssuerSpecVenafiTpp {
		if v == nil {
			return nil
		}
		return v.Tpp
	}).(IssuerSpecVenafiTppPtrOutput)
}

// Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.
func (o IssuerSpecVenafiPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafi) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloud struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRef `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url *string `pulumi:"url"`
}

// IssuerSpecVenafiCloudInput is an input type that accepts IssuerSpecVenafiCloudArgs and IssuerSpecVenafiCloudOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudInput` via:
//
//          IssuerSpecVenafiCloudArgs{...}
type IssuerSpecVenafiCloudInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput
	ToIssuerSpecVenafiCloudOutputWithContext(context.Context) IssuerSpecVenafiCloudOutput
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudArgs struct {
	// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
	ApiTokenSecretRef IssuerSpecVenafiCloudApiTokenSecretRefInput `pulumi:"apiTokenSecretRef"`
	// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (IssuerSpecVenafiCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return i.ToIssuerSpecVenafiCloudOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput)
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudArgs) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudOutput).ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudPtrInput is an input type that accepts IssuerSpecVenafiCloudArgs, IssuerSpecVenafiCloudPtr and IssuerSpecVenafiCloudPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudPtrInput` via:
//
//          IssuerSpecVenafiCloudArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiCloudPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput
	ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudPtrOutput
}

type issuerSpecVenafiCloudPtrType IssuerSpecVenafiCloudArgs

func IssuerSpecVenafiCloudPtr(v *IssuerSpecVenafiCloudArgs) IssuerSpecVenafiCloudPtrInput {
	return (*issuerSpecVenafiCloudPtrType)(v)
}

func (*issuerSpecVenafiCloudPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return i.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudPtrType) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudPtrOutput)
}

// Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiCloudOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutput() IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudOutput {
	return o
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o.ToIssuerSpecVenafiCloudPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *IssuerSpecVenafiCloud {
		return &v
	}).(IssuerSpecVenafiCloudPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) IssuerSpecVenafiCloudApiTokenSecretRef { return v.ApiTokenSecretRef }).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloud) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type IssuerSpecVenafiCloudPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloud)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutput() IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) ToIssuerSpecVenafiCloudPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudPtrOutput) Elem() IssuerSpecVenafiCloudOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) IssuerSpecVenafiCloud { return *v }).(IssuerSpecVenafiCloudOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
func (o IssuerSpecVenafiCloudPtrOutput) ApiTokenSecretRef() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *IssuerSpecVenafiCloudApiTokenSecretRef {
		if v == nil {
			return nil
		}
		return &v.ApiTokenSecretRef
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// URL is the base URL for Venafi Cloud. Defaults to "https://api.venafi.cloud/v1".
func (o IssuerSpecVenafiCloudPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloud) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiCloudApiTokenSecretRefInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs and IssuerSpecVenafiCloudApiTokenSecretRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefInput` via:
//
//          IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
type IssuerSpecVenafiCloudApiTokenSecretRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiCloudApiTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiCloudApiTokenSecretRefArgs) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefOutput).ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiCloudApiTokenSecretRefPtrInput is an input type that accepts IssuerSpecVenafiCloudApiTokenSecretRefArgs, IssuerSpecVenafiCloudApiTokenSecretRefPtr and IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiCloudApiTokenSecretRefPtrInput` via:
//
//          IssuerSpecVenafiCloudApiTokenSecretRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiCloudApiTokenSecretRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
	ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput
}

type issuerSpecVenafiCloudApiTokenSecretRefPtrType IssuerSpecVenafiCloudApiTokenSecretRefArgs

func IssuerSpecVenafiCloudApiTokenSecretRefPtr(v *IssuerSpecVenafiCloudApiTokenSecretRefArgs) IssuerSpecVenafiCloudApiTokenSecretRefPtrInput {
	return (*issuerSpecVenafiCloudApiTokenSecretRefPtrType)(v)
}

func (*issuerSpecVenafiCloudApiTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return i.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiCloudApiTokenSecretRefPtrType) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
type IssuerSpecVenafiCloudApiTokenSecretRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutput() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *IssuerSpecVenafiCloudApiTokenSecretRef {
		return &v
	}).(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiCloudApiTokenSecretRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiCloudApiTokenSecretRef)(nil)).Elem()
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput() IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) ToIssuerSpecVenafiCloudApiTokenSecretRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Elem() IssuerSpecVenafiCloudApiTokenSecretRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) IssuerSpecVenafiCloudApiTokenSecretRef { return *v }).(IssuerSpecVenafiCloudApiTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiCloudApiTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTpp struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle *string `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRef `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url string `pulumi:"url"`
}

// IssuerSpecVenafiTppInput is an input type that accepts IssuerSpecVenafiTppArgs and IssuerSpecVenafiTppOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppInput` via:
//
//          IssuerSpecVenafiTppArgs{...}
type IssuerSpecVenafiTppInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput
	ToIssuerSpecVenafiTppOutputWithContext(context.Context) IssuerSpecVenafiTppOutput
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppArgs struct {
	// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
	CredentialsRef IssuerSpecVenafiTppCredentialsRefInput `pulumi:"credentialsRef"`
	// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
	Url pulumi.StringInput `pulumi:"url"`
}

func (IssuerSpecVenafiTppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return i.ToIssuerSpecVenafiTppOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput)
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppArgs) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppOutput).ToIssuerSpecVenafiTppPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppPtrInput is an input type that accepts IssuerSpecVenafiTppArgs, IssuerSpecVenafiTppPtr and IssuerSpecVenafiTppPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppPtrInput` via:
//
//          IssuerSpecVenafiTppArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiTppPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput
	ToIssuerSpecVenafiTppPtrOutputWithContext(context.Context) IssuerSpecVenafiTppPtrOutput
}

type issuerSpecVenafiTppPtrType IssuerSpecVenafiTppArgs

func IssuerSpecVenafiTppPtr(v *IssuerSpecVenafiTppArgs) IssuerSpecVenafiTppPtrInput {
	return (*issuerSpecVenafiTppPtrType)(v)
}

func (*issuerSpecVenafiTppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return i.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppPtrType) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppPtrOutput)
}

// TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.
type IssuerSpecVenafiTppOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutput() IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppOutputWithContext(ctx context.Context) IssuerSpecVenafiTppOutput {
	return o
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o.ToIssuerSpecVenafiTppPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *IssuerSpecVenafiTpp {
		return &v
	}).(IssuerSpecVenafiTppPtrOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o IssuerSpecVenafiTppOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) IssuerSpecVenafiTppCredentialsRef { return v.CredentialsRef }).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTpp) string { return v.Url }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTpp)(nil)).Elem()
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutput() IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) ToIssuerSpecVenafiTppPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppPtrOutput) Elem() IssuerSpecVenafiTppOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) IssuerSpecVenafiTpp { return *v }).(IssuerSpecVenafiTppOutput)
}

// CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.
func (o IssuerSpecVenafiTppPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
func (o IssuerSpecVenafiTppPtrOutput) CredentialsRef() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *IssuerSpecVenafiTppCredentialsRef {
		if v == nil {
			return nil
		}
		return &v.CredentialsRef
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".
func (o IssuerSpecVenafiTppPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTpp) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRef struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
}

// IssuerSpecVenafiTppCredentialsRefInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs and IssuerSpecVenafiTppCredentialsRefOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefInput` via:
//
//          IssuerSpecVenafiTppCredentialsRefArgs{...}
type IssuerSpecVenafiTppCredentialsRefInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput
	ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefOutput
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefArgs struct {
	// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
}

func (IssuerSpecVenafiTppCredentialsRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput)
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i IssuerSpecVenafiTppCredentialsRefArgs) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefOutput).ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx)
}

// IssuerSpecVenafiTppCredentialsRefPtrInput is an input type that accepts IssuerSpecVenafiTppCredentialsRefArgs, IssuerSpecVenafiTppCredentialsRefPtr and IssuerSpecVenafiTppCredentialsRefPtrOutput values.
// You can construct a concrete instance of `IssuerSpecVenafiTppCredentialsRefPtrInput` via:
//
//          IssuerSpecVenafiTppCredentialsRefArgs{...}
//
//  or:
//
//          nil
type IssuerSpecVenafiTppCredentialsRefPtrInput interface {
	pulumi.Input

	ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput
	ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput
}

type issuerSpecVenafiTppCredentialsRefPtrType IssuerSpecVenafiTppCredentialsRefArgs

func IssuerSpecVenafiTppCredentialsRefPtr(v *IssuerSpecVenafiTppCredentialsRefArgs) IssuerSpecVenafiTppCredentialsRefPtrInput {
	return (*issuerSpecVenafiTppCredentialsRefPtrType)(v)
}

func (*issuerSpecVenafiTppCredentialsRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return i.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (i *issuerSpecVenafiTppCredentialsRefPtrType) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.
type IssuerSpecVenafiTppCredentialsRefOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutput() IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(context.Background())
}

func (o IssuerSpecVenafiTppCredentialsRefOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRef) *IssuerSpecVenafiTppCredentialsRef {
		return &v
	}).(IssuerSpecVenafiTppCredentialsRefPtrOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerSpecVenafiTppCredentialsRef) string { return v.Name }).(pulumi.StringOutput)
}

type IssuerSpecVenafiTppCredentialsRefPtrOutput struct{ *pulumi.OutputState }

func (IssuerSpecVenafiTppCredentialsRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerSpecVenafiTppCredentialsRef)(nil)).Elem()
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutput() IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) ToIssuerSpecVenafiTppCredentialsRefPtrOutputWithContext(ctx context.Context) IssuerSpecVenafiTppCredentialsRefPtrOutput {
	return o
}

func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Elem() IssuerSpecVenafiTppCredentialsRefOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) IssuerSpecVenafiTppCredentialsRef { return *v }).(IssuerSpecVenafiTppCredentialsRefOutput)
}

// Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o IssuerSpecVenafiTppCredentialsRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerSpecVenafiTppCredentialsRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatus struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme *IssuerStatusAcme `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions []IssuerStatusConditions `pulumi:"conditions"`
}

// IssuerStatusInput is an input type that accepts IssuerStatusArgs and IssuerStatusOutput values.
// You can construct a concrete instance of `IssuerStatusInput` via:
//
//          IssuerStatusArgs{...}
type IssuerStatusInput interface {
	pulumi.Input

	ToIssuerStatusOutput() IssuerStatusOutput
	ToIssuerStatusOutputWithContext(context.Context) IssuerStatusOutput
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusArgs struct {
	// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
	Acme IssuerStatusAcmePtrInput `pulumi:"acme"`
	// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
	Conditions IssuerStatusConditionsArrayInput `pulumi:"conditions"`
}

func (IssuerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (i IssuerStatusArgs) ToIssuerStatusOutput() IssuerStatusOutput {
	return i.ToIssuerStatusOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput)
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i IssuerStatusArgs) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusOutput).ToIssuerStatusPtrOutputWithContext(ctx)
}

// IssuerStatusPtrInput is an input type that accepts IssuerStatusArgs, IssuerStatusPtr and IssuerStatusPtrOutput values.
// You can construct a concrete instance of `IssuerStatusPtrInput` via:
//
//          IssuerStatusArgs{...}
//
//  or:
//
//          nil
type IssuerStatusPtrInput interface {
	pulumi.Input

	ToIssuerStatusPtrOutput() IssuerStatusPtrOutput
	ToIssuerStatusPtrOutputWithContext(context.Context) IssuerStatusPtrOutput
}

type issuerStatusPtrType IssuerStatusArgs

func IssuerStatusPtr(v *IssuerStatusArgs) IssuerStatusPtrInput {
	return (*issuerStatusPtrType)(v)
}

func (*issuerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return i.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (i *issuerStatusPtrType) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusPtrOutput)
}

// Status of the Issuer. This is set and managed automatically.
type IssuerStatusOutput struct{ *pulumi.OutputState }

func (IssuerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusOutput) ToIssuerStatusOutput() IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusOutputWithContext(ctx context.Context) IssuerStatusOutput {
	return o
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o.ToIssuerStatusPtrOutputWithContext(context.Background())
}

func (o IssuerStatusOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o.ApplyT(func(v IssuerStatus) *IssuerStatus {
		return &v
	}).(IssuerStatusPtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o IssuerStatusOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v IssuerStatus) *IssuerStatusAcme { return v.Acme }).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o IssuerStatusOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v IssuerStatus) []IssuerStatusConditions { return v.Conditions }).(IssuerStatusConditionsArrayOutput)
}

type IssuerStatusPtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatus)(nil)).Elem()
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutput() IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) ToIssuerStatusPtrOutputWithContext(ctx context.Context) IssuerStatusPtrOutput {
	return o
}

func (o IssuerStatusPtrOutput) Elem() IssuerStatusOutput {
	return o.ApplyT(func(v *IssuerStatus) IssuerStatus { return *v }).(IssuerStatusOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
func (o IssuerStatusPtrOutput) Acme() IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v *IssuerStatus) *IssuerStatusAcme {
		if v == nil {
			return nil
		}
		return v.Acme
	}).(IssuerStatusAcmePtrOutput)
}

// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
func (o IssuerStatusPtrOutput) Conditions() IssuerStatusConditionsArrayOutput {
	return o.ApplyT(func(v *IssuerStatus) []IssuerStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IssuerStatusConditionsArrayOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcme struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail *string `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri *string `pulumi:"uri"`
}

// IssuerStatusAcmeInput is an input type that accepts IssuerStatusAcmeArgs and IssuerStatusAcmeOutput values.
// You can construct a concrete instance of `IssuerStatusAcmeInput` via:
//
//          IssuerStatusAcmeArgs{...}
type IssuerStatusAcmeInput interface {
	pulumi.Input

	ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput
	ToIssuerStatusAcmeOutputWithContext(context.Context) IssuerStatusAcmeOutput
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcmeArgs struct {
	// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
	LastRegisteredEmail pulumi.StringPtrInput `pulumi:"lastRegisteredEmail"`
	// URI is the unique account identifier, which can also be used to retrieve account details from the CA
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (IssuerStatusAcmeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return i.ToIssuerStatusAcmeOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput)
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i IssuerStatusAcmeArgs) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmeOutput).ToIssuerStatusAcmePtrOutputWithContext(ctx)
}

// IssuerStatusAcmePtrInput is an input type that accepts IssuerStatusAcmeArgs, IssuerStatusAcmePtr and IssuerStatusAcmePtrOutput values.
// You can construct a concrete instance of `IssuerStatusAcmePtrInput` via:
//
//          IssuerStatusAcmeArgs{...}
//
//  or:
//
//          nil
type IssuerStatusAcmePtrInput interface {
	pulumi.Input

	ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput
	ToIssuerStatusAcmePtrOutputWithContext(context.Context) IssuerStatusAcmePtrOutput
}

type issuerStatusAcmePtrType IssuerStatusAcmeArgs

func IssuerStatusAcmePtr(v *IssuerStatusAcmeArgs) IssuerStatusAcmePtrInput {
	return (*issuerStatusAcmePtrType)(v)
}

func (*issuerStatusAcmePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return i.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (i *issuerStatusAcmePtrType) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusAcmePtrOutput)
}

// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
type IssuerStatusAcmeOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutput() IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmeOutputWithContext(ctx context.Context) IssuerStatusAcmeOutput {
	return o
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o.ToIssuerStatusAcmePtrOutputWithContext(context.Background())
}

func (o IssuerStatusAcmeOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *IssuerStatusAcme {
		return &v
	}).(IssuerStatusAcmePtrOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o IssuerStatusAcmeOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.LastRegisteredEmail }).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o IssuerStatusAcmeOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusAcme) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type IssuerStatusAcmePtrOutput struct{ *pulumi.OutputState }

func (IssuerStatusAcmePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssuerStatusAcme)(nil)).Elem()
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutput() IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) ToIssuerStatusAcmePtrOutputWithContext(ctx context.Context) IssuerStatusAcmePtrOutput {
	return o
}

func (o IssuerStatusAcmePtrOutput) Elem() IssuerStatusAcmeOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) IssuerStatusAcme { return *v }).(IssuerStatusAcmeOutput)
}

// LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
func (o IssuerStatusAcmePtrOutput) LastRegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.LastRegisteredEmail
	}).(pulumi.StringPtrOutput)
}

// URI is the unique account identifier, which can also be used to retrieve account details from the CA
func (o IssuerStatusAcmePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssuerStatusAcme) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditions struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message *string `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status string `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type string `pulumi:"type"`
}

// IssuerStatusConditionsInput is an input type that accepts IssuerStatusConditionsArgs and IssuerStatusConditionsOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsInput` via:
//
//          IssuerStatusConditionsArgs{...}
type IssuerStatusConditionsInput interface {
	pulumi.Input

	ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput
	ToIssuerStatusConditionsOutputWithContext(context.Context) IssuerStatusConditionsOutput
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsArgs struct {
	// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Status of the condition, one of ('True', 'False', 'Unknown').
	Status pulumi.StringInput `pulumi:"status"`
	// Type of the condition, known values are ('Ready').
	Type pulumi.StringInput `pulumi:"type"`
}

func (IssuerStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return i.ToIssuerStatusConditionsOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArgs) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsOutput)
}

// IssuerStatusConditionsArrayInput is an input type that accepts IssuerStatusConditionsArray and IssuerStatusConditionsArrayOutput values.
// You can construct a concrete instance of `IssuerStatusConditionsArrayInput` via:
//
//          IssuerStatusConditionsArray{ IssuerStatusConditionsArgs{...} }
type IssuerStatusConditionsArrayInput interface {
	pulumi.Input

	ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput
	ToIssuerStatusConditionsArrayOutputWithContext(context.Context) IssuerStatusConditionsArrayOutput
}

type IssuerStatusConditionsArray []IssuerStatusConditionsInput

func (IssuerStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return i.ToIssuerStatusConditionsArrayOutputWithContext(context.Background())
}

func (i IssuerStatusConditionsArray) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssuerStatusConditionsArrayOutput)
}

// IssuerCondition contains condition information for an Issuer.
type IssuerStatusConditionsOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutput() IssuerStatusConditionsOutput {
	return o
}

func (o IssuerStatusConditionsOutput) ToIssuerStatusConditionsOutputWithContext(ctx context.Context) IssuerStatusConditionsOutput {
	return o
}

// LastTransitionTime is the timestamp corresponding to the last status change of this condition.
func (o IssuerStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Message is a human readable description of the details of the last transition, complementing reason.
func (o IssuerStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason is a brief machine readable explanation for the condition's last transition.
func (o IssuerStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssuerStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of ('True', 'False', 'Unknown').
func (o IssuerStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of the condition, known values are ('Ready').
func (o IssuerStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IssuerStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type IssuerStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (IssuerStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IssuerStatusConditions)(nil)).Elem()
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutput() IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) ToIssuerStatusConditionsArrayOutputWithContext(ctx context.Context) IssuerStatusConditionsArrayOutput {
	return o
}

func (o IssuerStatusConditionsArrayOutput) Index(i pulumi.IntInput) IssuerStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IssuerStatusConditions {
		return vs[0].([]IssuerStatusConditions)[vs[1].(int)]
	}).(IssuerStatusConditionsOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateMetadataOutput{})
	pulumi.RegisterOutputType(CertificateRequestTypeOutput{})
	pulumi.RegisterOutputType(CertificateRequestMetadataOutput{})
	pulumi.RegisterOutputType(CertificateRequestSpecOutput{})
	pulumi.RegisterOutputType(CertificateRequestSpecPtrOutput{})
	pulumi.RegisterOutputType(CertificateRequestSpecIssuerRefOutput{})
	pulumi.RegisterOutputType(CertificateRequestSpecIssuerRefPtrOutput{})
	pulumi.RegisterOutputType(CertificateRequestStatusOutput{})
	pulumi.RegisterOutputType(CertificateRequestStatusPtrOutput{})
	pulumi.RegisterOutputType(CertificateRequestStatusConditionsOutput{})
	pulumi.RegisterOutputType(CertificateRequestStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(CertificateSpecOutput{})
	pulumi.RegisterOutputType(CertificateSpecPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecIssuerRefOutput{})
	pulumi.RegisterOutputType(CertificateSpecIssuerRefPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresJksOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresJksPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresJksPasswordSecretRefOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresJksPasswordSecretRefPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresPkcs12Output{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresPkcs12PtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresPkcs12PasswordSecretRefOutput{})
	pulumi.RegisterOutputType(CertificateSpecKeystoresPkcs12PasswordSecretRefPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecPrivateKeyOutput{})
	pulumi.RegisterOutputType(CertificateSpecPrivateKeyPtrOutput{})
	pulumi.RegisterOutputType(CertificateSpecSubjectOutput{})
	pulumi.RegisterOutputType(CertificateSpecSubjectPtrOutput{})
	pulumi.RegisterOutputType(CertificateStatusOutput{})
	pulumi.RegisterOutputType(CertificateStatusPtrOutput{})
	pulumi.RegisterOutputType(CertificateStatusConditionsOutput{})
	pulumi.RegisterOutputType(CertificateStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerTypeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerMetadataOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmePrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflarePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01WebhookOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversDns01WebhookPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01Output{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01PtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecAcmeSolversSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecCaOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(ClusterIssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterIssuerStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerTypeOutput{})
	pulumi.RegisterOutputType(IssuerMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeExternalAccountBindingKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmePrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AcmednsAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AkamaiClientTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01AzurednsClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01ClouddnsServiceAccountSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflarePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01CloudflareApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01DigitaloceanTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Rfc2136TsigSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01Route53SecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversDns01WebhookPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01Output{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01PtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataAnnotationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressIngressTemplateMetadataLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplatePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataAnnotationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateMetadataLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFieldsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecNodeSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversHttp01IngressPodTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecAcmeSolversSelectorMatchLabelsOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaOutput{})
	pulumi.RegisterOutputType(IssuerSpecCaPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedOutput{})
	pulumi.RegisterOutputType(IssuerSpecSelfSignedPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiCloudApiTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppPtrOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefOutput{})
	pulumi.RegisterOutputType(IssuerSpecVenafiTppCredentialsRefPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusOutput{})
	pulumi.RegisterOutputType(IssuerStatusPtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmeOutput{})
	pulumi.RegisterOutputType(IssuerStatusAcmePtrOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsOutput{})
	pulumi.RegisterOutputType(IssuerStatusConditionsArrayOutput{})
}
