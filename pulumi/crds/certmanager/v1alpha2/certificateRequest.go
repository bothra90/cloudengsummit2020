// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A CertificateRequest is used to request a signed certificate from one of the configured issuers.
//  All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field.
//  A CertificateRequest is a 'one-shot' resource, meaning it represents a single point in time request for a certificate and cannot be re-used.
type CertificateRequest struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Desired state of the CertificateRequest resource.
	Spec CertificateRequestSpecPtrOutput `pulumi:"spec"`
	// Status of the CertificateRequest. This is set and managed automatically.
	Status CertificateRequestStatusPtrOutput `pulumi:"status"`
}

// NewCertificateRequest registers a new resource with the given unique name, arguments, and options.
func NewCertificateRequest(ctx *pulumi.Context,
	name string, args *CertificateRequestArgs, opts ...pulumi.ResourceOption) (*CertificateRequest, error) {
	if args == nil {
		args = &CertificateRequestArgs{}
	}
	args.ApiVersion = pulumi.StringPtr("cert-manager.io/v1alpha2")
	args.Kind = pulumi.StringPtr("CertificateRequest")
	var resource CertificateRequest
	err := ctx.RegisterResource("kubernetes:cert-manager.io/v1alpha2:CertificateRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateRequest gets an existing CertificateRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateRequestState, opts ...pulumi.ResourceOption) (*CertificateRequest, error) {
	var resource CertificateRequest
	err := ctx.ReadResource("kubernetes:cert-manager.io/v1alpha2:CertificateRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateRequest resources.
type certificateRequestState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the CertificateRequest resource.
	Spec *CertificateRequestSpec `pulumi:"spec"`
	// Status of the CertificateRequest. This is set and managed automatically.
	Status *CertificateRequestStatus `pulumi:"status"`
}

type CertificateRequestState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Desired state of the CertificateRequest resource.
	Spec CertificateRequestSpecPtrInput
	// Status of the CertificateRequest. This is set and managed automatically.
	Status CertificateRequestStatusPtrInput
}

func (CertificateRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateRequestState)(nil)).Elem()
}

type certificateRequestArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Desired state of the CertificateRequest resource.
	Spec *CertificateRequestSpec `pulumi:"spec"`
	// Status of the CertificateRequest. This is set and managed automatically.
	Status *CertificateRequestStatus `pulumi:"status"`
}

// The set of arguments for constructing a CertificateRequest resource.
type CertificateRequestArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Desired state of the CertificateRequest resource.
	Spec CertificateRequestSpecPtrInput
	// Status of the CertificateRequest. This is set and managed automatically.
	Status CertificateRequestStatusPtrInput
}

func (CertificateRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateRequestArgs)(nil)).Elem()
}
